{"version":3,"sources":["./node_modules/d3-collection/src/map.js","./node_modules/d3-geo/src/projection/equalEarth.js","./node_modules/d3-axis/src/array.js","./node_modules/d3-chord/src/index.js","./node_modules/c3/node_modules/d3-scale/src/init.js","./src/app/pages/dashboard/dashboard.module.ts","./node_modules/c3/node_modules/d3-array/src/sum.js","./node_modules/c3/node_modules/d3/dist/package.js","./node_modules/d3-voronoi/src/point.js","./src/app/services/dashboard.service.ts","./node_modules/d3-force/src/center.js","./node_modules/d3-random/src/defaultSource.js","./node_modules/c3/node_modules/d3-array/src/pairs.js","./node_modules/d3-force/src/y.js","./node_modules/c3/node_modules/d3-array/src/number.js","./node_modules/d3-geo/src/projection/index.js","./node_modules/d3-scale-chromatic/src/categorical/Set1.js","./node_modules/c3/node_modules/d3-array/src/zip.js","./node_modules/d3-chord/src/chord.js","./node_modules/d3-zoom/src/index.js","./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","./node_modules/c3/node_modules/d3-scale/src/nice.js","./node_modules/c3/node_modules/d3-scale/src/index.js","./node_modules/c3/node_modules/d3-scale/src/sequential.js","./node_modules/d3-geo/src/projection/conicConformal.js","./node_modules/d3-geo/src/clip/extent.js","./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","./node_modules/d3-geo/src/path/centroid.js","./node_modules/c3/node_modules/d3-array/src/ticks.js","./node_modules/d3-geo/src/clip/rejoin.js","./node_modules/c3/node_modules/d3/node_modules/d3-dsv/src/index.js","./node_modules/d3-geo/src/polygonContains.js","./node_modules/d3-random/src/index.js","./node_modules/d3-fetch/src/text.js","./node_modules/c3/node_modules/d3-array/src/histogram.js","./node_modules/c3/node_modules/d3-scale/src/constant.js","./node_modules/d3-force/src/link.js","./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","./node_modules/d3-fetch/src/dsv.js","./node_modules/d3-chord/src/array.js","./node_modules/d3-fetch/src/xml.js","./node_modules/d3-geo/src/projection/naturalEarth1.js","./node_modules/c3/node_modules/d3-array/src/threshold/scott.js","./node_modules/d3-quadtree/src/cover.js","./node_modules/d3-geo/src/clip/antimeridian.js","./node_modules/d3-quadtree/src/add.js","./node_modules/c3/node_modules/d3-scale/src/log.js","./node_modules/c3/node_modules/d3-scale/src/continuous.js","./node_modules/d3-scale-chromatic/src/diverging/PuOr.js","./node_modules/c3/node_modules/d3/node_modules/d3-dsv/src/tsv.js","./node_modules/d3-voronoi/src/RedBlackTree.js","./node_modules/c3/node_modules/d3-scale/src/pow.js","./node_modules/c3/node_modules/d3-array/src/min.js","./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","./node_modules/d3-scale-chromatic/src/categorical/Set3.js","./node_modules/c3/node_modules/d3-array/src/cross.js","./node_modules/d3-collection/src/values.js","./node_modules/d3-scale-chromatic/src/diverging/Spectral.js","./node_modules/d3-force/src/index.js","./node_modules/d3-geo/src/projection/azimuthalEquidistant.js","./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","./node_modules/c3/node_modules/d3-scale/src/time.js","./node_modules/d3-contour/src/constant.js","./node_modules/c3/node_modules/d3-scale/src/quantize.js","./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","./node_modules/d3-voronoi/src/voronoi.js","./node_modules/d3-quadtree/src/visit.js","./node_modules/d3-geo/src/path/measure.js","./node_modules/d3-geo/src/clip/rectangle.js","./node_modules/c3/node_modules/d3-scale/src/threshold.js","./node_modules/d3-voronoi/src/Edge.js","./node_modules/d3-quadtree/src/remove.js","./node_modules/d3-random/src/logNormal.js","./node_modules/d3-collection/src/keys.js","./node_modules/d3-voronoi/src/Diagram.js","./node_modules/d3-polygon/src/centroid.js","./node_modules/d3-quadtree/src/extent.js","./node_modules/d3-fetch/src/image.js","./node_modules/d3-quadtree/src/find.js","./node_modules/d3-geo/src/contains.js","./node_modules/d3-chord/src/constant.js","./node_modules/d3-polygon/src/length.js","./node_modules/d3-geo/src/identity.js","./node_modules/c3/node_modules/d3-scale/src/band.js","./node_modules/d3-scale-chromatic/src/categorical/Dark2.js","./node_modules/d3-voronoi/src/Cell.js","./node_modules/d3-voronoi/src/Circle.js","./node_modules/d3-quadtree/src/data.js","./node_modules/d3-geo/src/projection/orthographic.js","./node_modules/d3-scale-chromatic/src/diverging/RdGy.js","./node_modules/c3/c3.js","./node_modules/d3-geo/src/projection/mercator.js","./node_modules/d3-polygon/src/cross.js","./node_modules/c3/node_modules/d3-array/src/threshold/freedmanDiaconis.js","./node_modules/d3-random/src/uniform.js","./node_modules/d3-quadtree/src/y.js","./node_modules/c3/node_modules/d3-array/src/threshold/sturges.js","./node_modules/d3-geo/src/clip/buffer.js","./node_modules/d3-zoom/src/noevent.js","./node_modules/d3-geo/src/projection/azimuthalEqualArea.js","./node_modules/d3-geo/src/clip/circle.js","./node_modules/d3-geo/src/area.js","./node_modules/d3-force/src/jiggle.js","./node_modules/d3-geo/src/math.js","./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","./node_modules/d3-quadtree/src/root.js","./node_modules/d3-axis/src/index.js","./node_modules/d3-contour/src/noop.js","./node_modules/d3-geo/src/clip/line.js","./node_modules/d3-chord/src/ribbon.js","./node_modules/c3/node_modules/d3-scale/src/number.js","./node_modules/d3-geo/src/path/bounds.js","./node_modules/d3-contour/src/density.js","./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","./node_modules/d3-scale-chromatic/src/diverging/BrBG.js","./node_modules/d3-geo/src/projection/resample.js","./node_modules/c3/node_modules/d3-array/src/transpose.js","./node_modules/c3/node_modules/d3-scale/src/diverging.js","./node_modules/c3/node_modules/d3/index.js","./node_modules/d3-contour/src/contains.js","./node_modules/d3-force/src/simulation.js","./node_modules/d3-scale-chromatic/src/diverging/PiYG.js","./node_modules/d3-contour/src/blur.js","./node_modules/d3-geo/src/projection/equirectangular.js","./node_modules/c3/node_modules/d3-scale/src/utcTime.js","./node_modules/c3/node_modules/d3-array/src/mean.js","./node_modules/c3/node_modules/d3-array/src/identity.js","./node_modules/d3-force/src/radial.js","./node_modules/d3-collection/src/set.js","./node_modules/c3/node_modules/d3-scale/src/identity.js","./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","./node_modules/d3-geo/src/projection/fit.js","./src/app/pages/dashboard/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard/dashboard.component.html","./node_modules/d3-random/src/bates.js","./node_modules/d3-fetch/src/buffer.js","./node_modules/c3/node_modules/d3-array/src/constant.js","./node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js","./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","./node_modules/d3-geo/src/projection/transverseMercator.js","./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","./node_modules/d3-scale-chromatic/src/diverging/RdBu.js","./node_modules/d3-geo/src/cartesian.js","./node_modules/d3-force/src/manyBody.js","./node_modules/d3-scale-chromatic/src/colors.js","./node_modules/d3-geo/src/projection/stereographic.js","./node_modules/d3-geo/src/projection/albersUsa.js","./node_modules/c3/node_modules/d3-array/src/deviation.js","./node_modules/d3-voronoi/src/index.js","./node_modules/d3-geo/src/projection/conic.js","./node_modules/d3-geo/src/projection/identity.js","./node_modules/d3-collection/src/index.js","./node_modules/d3-force/src/x.js","./node_modules/d3-geo/src/rotation.js","./node_modules/c3/node_modules/d3-scale/src/array.js","./node_modules/d3-voronoi/src/Beach.js","./node_modules/d3-geo/src/projection/azimuthal.js","./node_modules/d3-random/src/exponential.js","./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","./node_modules/c3/node_modules/d3-array/src/merge.js","./src/app/pages/dashboard/dashboard-routing.module.ts","./node_modules/c3/node_modules/d3/node_modules/d3-dsv/src/dsv.js","./node_modules/d3-polygon/src/hull.js","./node_modules/d3-geo/src/bounds.js","./node_modules/d3-geo/src/pointEqual.js","./node_modules/d3-quadtree/src/index.js","./node_modules/d3-scale-chromatic/src/categorical/Set2.js","./node_modules/d3-contour/src/contours.js","./node_modules/d3-scale-chromatic/src/categorical/Accent.js","./node_modules/c3/node_modules/d3-scale/src/ordinal.js","./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","./node_modules/d3-collection/src/entries.js","./node_modules/d3-random/src/irwinHall.js","./node_modules/c3/node_modules/d3-scale/src/linear.js","./node_modules/d3-zoom/src/transform.js","./node_modules/d3-zoom/src/zoom.js","./node_modules/d3-axis/src/axis.js","./node_modules/d3-force/src/collide.js","./node_modules/d3-geo/src/projection/albers.js","./node_modules/d3-geo/src/path/context.js","./node_modules/d3-scale-chromatic/src/ramp.js","./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","./node_modules/d3-axis/src/identity.js","./node_modules/c3/node_modules/d3/node_modules/d3-dsv/src/csv.js","./node_modules/d3-fetch/src/blob.js","./node_modules/c3/node_modules/d3-scale/src/symlog.js","./node_modules/d3-voronoi/src/constant.js","./node_modules/d3-zoom/src/constant.js","./node_modules/d3-zoom/src/event.js","./node_modules/d3-quadtree/src/x.js","./node_modules/c3/node_modules/d3-array/src/shuffle.js","./node_modules/d3-chord/src/math.js","./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","./node_modules/d3-geo/src/path/string.js","./node_modules/d3-geo/src/noop.js","./node_modules/d3-collection/src/nest.js","./node_modules/d3-contour/src/array.js","./node_modules/d3-polygon/src/area.js","./node_modules/c3/node_modules/d3-scale/src/quantile.js","./node_modules/c3/node_modules/d3-array/src/max.js","./node_modules/d3-geo/src/index.js","./node_modules/d3-geo/src/projection/conicEqualArea.js","./node_modules/d3-fetch/src/json.js","./node_modules/d3-force/src/constant.js","./node_modules/c3/node_modules/d3-array/src/ascending.js","./node_modules/c3/node_modules/d3-array/src/bisector.js","./node_modules/c3/node_modules/d3-array/src/extent.js","./node_modules/d3-scale-chromatic/src/index.js","./node_modules/c3/node_modules/d3-array/src/bisect.js","./node_modules/d3-quadtree/src/quad.js","./node_modules/d3-geo/src/centroid.js","./node_modules/c3/node_modules/d3-array/src/quantile.js","./node_modules/d3-geo/src/clip/index.js","./node_modules/d3-geo/src/compose.js","./node_modules/d3-geo/src/interpolate.js","./node_modules/d3-random/src/normal.js","./node_modules/c3/node_modules/d3-array/src/range.js","./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","./node_modules/d3-scale-chromatic/src/categorical/category10.js","./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","./node_modules/c3/node_modules/d3-array/src/median.js","./node_modules/d3-geo/src/path/area.js","./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","./node_modules/d3-geo/src/graticule.js","./node_modules/d3-geo/src/distance.js","./node_modules/c3/node_modules/d3-array/src/scan.js","./node_modules/c3/node_modules/d3/node_modules/d3-dsv/src/autoType.js","./node_modules/c3/node_modules/d3-array/src/index.js","./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","./node_modules/d3-scale-chromatic/src/diverging/PRGn.js","./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","./node_modules/d3-fetch/src/index.js","./node_modules/d3-geo/src/transform.js","./node_modules/d3-contour/src/ascending.js","./node_modules/d3-quadtree/src/visitAfter.js","./node_modules/d3-polygon/src/index.js","./node_modules/d3-geo/src/stream.js","./node_modules/c3/node_modules/d3-scale/src/sequentialQuantile.js","./node_modules/d3-geo/src/adder.js","./node_modules/d3-geo/src/constant.js","./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","./node_modules/d3-polygon/src/contains.js","./node_modules/d3-geo/src/projection/cylindricalEqualArea.js","./node_modules/d3-geo/src/path/index.js","./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","./node_modules/d3-geo/src/circle.js","./node_modules/c3/node_modules/d3-array/src/permute.js","./node_modules/c3/node_modules/d3-array/src/variance.js","./node_modules/d3-scale-chromatic/src/categorical/Paired.js","./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","./node_modules/d3-geo/src/projection/gnomonic.js","./node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js","./node_modules/d3-quadtree/src/size.js","./node_modules/d3-contour/src/area.js","./node_modules/d3-scale-chromatic/src/categorical/Tableau10.js","./node_modules/c3/node_modules/d3-array/src/descending.js","./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","./node_modules/d3-geo/src/projection/conicEquidistant.js","./node_modules/c3/node_modules/d3-array/src/array.js","./node_modules/d3-quadtree/src/quadtree.js","./node_modules/c3/node_modules/d3-scale/src/tickFormat.js","./node_modules/d3-contour/src/index.js","./node_modules/d3-geo/src/length.js"],"names":[],"mappings":"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AAS;AACpB;;AAEA;AACA;AACA;AACA,aAAa,kEAAa;AAC1B,uBAAuB,2DAAO;AAC9B,6BAA6B,2DAAO;AACpC,sBAAsB,4DAAQ;AAC9B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/KA;AAAA;AAAkC;;AAEnB,yHAAM,0DAA0D,EAAC;;;;;;;;;;;;;ACFhF;AAAA;AAAoC;;AAErB;AACf,SAAS,0DAAS;AAClB,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAA+B;AACC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,sDAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;AAClB,oBAAoB;AACpB;AACA;AACA;AACA,yBAAyB,sDAAK;AAC9B;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA,QAAQ,iDAAG,IAAI,yCAAG;AAClB,wBAAwB,yCAAG;;AAE3B;AACA;AACA,kBAAkB;AAClB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX,gBAAgB;AAChB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iBAAiB,+BAA+B;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0CAA0C,iDAAG;AAC7C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACxHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACwC;;;;;;;;;;;;;ACDlF;AAAA;AAAA;AAAA;AAAkC;AACJ;;AAEvB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kDAAM;;AAEG,uH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;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,qDAAI;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,qDAAI;;AAEd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;ACnG9B;AAAA;AAAA;AAAA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,CAAC;;AAEM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClDA;AAAA;AAAA;AAA0C;AACP;;AAEnC;AACA;AACA;AACA,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,yBAAyB;AACzB;;AAEA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,8DAAU;AAClB;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,mBAAmB,gDAAO;AAC1B;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA,8BAA8B,OAAO;AACrC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,qCAAqC,QAAQ;AAC7C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;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CA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mDAAmD;AACnD,oDAAoD;AACpD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD;AACnD,oDAAoD;AACpD,GAAG;AACH;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;;;;;;;;;;;;;ACnFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AACE;AACP;AACqB;AACd;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;;AAEA;AACA;AACA;AACA;AACA,8CAA8C,2BAA2B,EAAE;AAC3E;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,OAAO;AAC9B,gCAAgC,UAAU;AAC1C;AACA;AACA;AACA;AACA;AACA,OAAO,YAAY,OAAO;AAC1B,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,UAAU,sDAAK;AACf;;AAEA;AACA;;AAEA;AACA;AACA,qDAAqD,wDAAM;AAC3D;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,qDAAI;AACtB,0BAA0B,kCAAkC,EAAE;AAC9D,yBAAyB,iCAAiC;AAC1D,KAAK;AACL;;AAEA;AACA;;AAEe;AACf,sBAAsB,+DAAW;;AAEjC;AACA,WAAW,wDAAI;AACf;;AAEA,EAAE,+CAAS;;AAEX;AACA;;;;;;;;;;;;;AChJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;AACoE;AACjE;AACD;AACJ;;AAE9B;;AAEO;AACP;AACA;;AAEA;AACA;AACA,qBAAqB,oBAAoB;AACzC,QAAQ,yDAAQ;AAChB;;AAEA;AACA;AACA;AACA,sBAAsB,oCAAoC;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,kBAAkB;AACxC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAY,uDAAM;AAClB;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,oBAAoB,0DAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wFAAwF,gEAAiB;AACzG;;AAEA;AACA,wCAAwC,0CAAG,SAAS,+CAAM;AAC1D;;AAEA;AACA,uCAAuC,4CAAK;AAC5C;;AAEA;AACA,mBAAmB,4CAAK,wBAAwB,+DAAgB;AAChE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;;;;;;;;;;;;;AC3HA;AAAA;AAAA;AAAA;AAAkC;AACJ;;AAEvB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kDAAM;;AAEG,uHAAI,QAAQ,EAAC;;;;;;;;;;;;;ACf5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2B;;AAE3B,UAAU,uDAAG;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVP;AAAA;AAAA;AACA,gBAAgB;AAChB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,gBAAgB,QAAQ;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;AC5O5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmC;AACsB;AACxB;;AAEjC;AACA;AACA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yBAAyB,gDAAI;AAC7B,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,qDAAI;AACpB;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;AC5C5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACH;AACJ;AACI;AACN;;AAE/B;;AAEA;AACA;;AAEe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,WAAW,oDAAG,cAAc,gDAAO;AACnC,UAAU,oDAAG,cAAc,gDAAO;AAClC,UAAU,oDAAG,cAAc,gDAAO;AAClC,gCAAgC;AAChC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,0DAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,yCAAyC,OAAO;AAChD,kHAAkH,OAAO;AACzH;AACA,yBAAyB,yEAAyE;AAClG,gBAAgB,0EAA0E;AAC1F;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,sDAAK;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,0DAAU;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,cAAc,wDAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACvKA;AAAA;AAAA;AAAA;AAAA;AAAgC;AACF;AACG;;AAElB;AACf;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,uDAAM;AAChC;;AAEA;AACA,wCAAwC,4CAAK;AAC7C;;AAEA;AACA,uCAAuC,4CAAK;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,+CAAS;AAClB;;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;;AAEzC;AACP;AACA,cAAc,8CAAK;AACnB;AACA;AACA;AACA;AACA,EAAE,8CAAK;AACP,EAAE,8CAAK;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,0CAA0C;;AAE1C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP,UAAU,8CAAK;AACf;;AAEA;AACA,4BAA4B,8CAAK;AACjC;AACA,iDAAiD,gDAAO;AACxD,mDAAmD,gDAAO;AAC1D,aAAa,8CAAK;AAClB;AACA;AACA;;;;;;;;;;;;;ACvKA;AAAA;AAAe;AACf,0FAA0F;;AAE1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD;AACnD,oDAAoD;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAEM;AACP,kCAAkC,OAAO;AACzC;AACA;;;;;;;;;;;;;AC7DA;AAAA;AAAA;AAA4C;AACd;;AAEf;AACf;AACA,uBAAuB,+CAAM;AAC7B;AACA;AACA;AACA;;AAEA;;AAEA;AACA,CAAC,EAAE,sDAAa,CAAC,EAAC;;;;;;;;;;;;;ACdlB;AAAe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACyB;AAClC;AACJ;AACS;;AAEnC;AACA;AACA;AACA;AACA;AACA;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,qDAAY;AAC5B,gBAAgB,qDAAY;;AAE5B;AACA,aAAa,mDAAW;AACxB;AACA;AACA,QAAQ,uDAAQ;AAChB;AACA;AACA;AACA,KAAK;AACL,MAAM,0DAAW;AACjB,KAAK;AACL;AACA;AACA;;AAEA,EAAE,+DAAiB;;AAEnB;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb,IAAI,uDAAS;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,oDAAoD,QAAQ,+DAAiB,iBAAiB,EAAE;AAChG;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;;AAEA;AACA;AACA;;;;;;;;;;;;;AC7IA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACnBD;AAAe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAe;AACf;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA,GAAG;AACH,CAAC;;;;;;;;;;;;;ACRD;AAAA;AAA6B;;AAEd;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,gDAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAY,gDAAI;AAChB,YAAY,gDAAI;AAChB,YAAY,gDAAI;AAChB,YAAY,gDAAI;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACrED;AAAA;AAAA;AAAA;AAAgE;AACd;AACN;;AAE5C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,4DAAQ;AACjB;;AAEA;AACA;AACA,yCAAyC,OAAO;AAChD,SAAS,4DAAQ;AACjB;AACA;AACA,WAAW,4DAAQ;AACnB;AACA;AACA;AACA;AACA,6DAA6D,iDAAQ;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mEAAe;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,gDAAO,aAAa,gDAAO;AAChD;;AAEe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AChGD;AAAe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACtBD;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACV;AACD;;AAEjB;AACf,cAAc,wDAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sDAAQ,qBAAqB,yBAAyB,EAAE;AACzE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,+CAAS;AAClB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;ACnGA;AAAA;AAAkC;;AAEnB,yHAAM,oDAAoD,EAAC;;;;;;;;;;;;;ACF1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACQ;;AAEzC;AACP,SAAS,8CAAK;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP,sBAAsB,8CAAK,+BAA+B,OAAO;AACjE,gBAAgB,8CAAK;AACrB;AACA;AACA,iBAAiB,OAAO,uDAAuD,8CAAK;AACpF,iCAAiC,4BAA4B,EAAE;AAC/D,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEO;AACP,eAAe,8CAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,gBAAgB;AACjC,eAAe,8CAAK;AACpB;AACA;AACA;;AAEA;AACA;AACA,aAAa,8CAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,8CAAK;AACzC,wCAAwC,8CAAK;AAC7C,sCAAsC,gDAAO,8BAA8B,gDAAO;AAClF,yCAAyC,8CAAK,MAAM,8DAAgB;AACpE,oCAAoC,gDAAO,gBAAgB,gDAAO,gCAAgC,gDAAO;AACzG,sCAAsC,gDAAO,gBAAgB,gDAAO,4BAA4B,gDAAO;AACvG,sCAAsC,gDAAO,gBAAgB,gDAAO,gCAAgC,gDAAO;AAC3G,sCAAsC,gDAAO,gBAAgB,gDAAO,4BAA4B,gDAAO;AACvG;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iCAAiC,gBAAgB;AACjD,iBAAiB,8CAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,8CAAK,MAAM,8DAAgB;AACnC,QAAQ,8CAAK,MAAM,8DAAgB;AACnC,QAAQ,8CAAK,MAAM,8DAAgB;AACnC,QAAQ,8CAAK,MAAM,8DAAgB;AACnC;AACA;AACA;;AAEA,2CAA2C;AAC3C,iBAAiB,gBAAgB;AACjC,eAAe,8CAAK;AACpB;AACA,eAAe,8CAAK;AACpB;AACA;AACA;AACA;;;;;;;;;;;;;AC7HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACA;;AAE5C;;AAEO;;AAEP;AACA,EAAE,kEAAY;AACd;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,iDAAQ;;AAEpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6DAA6D;;AAE7D;;AAEA;AACA,aAAa,gDAAO;;AAEpB;AACA;AACA;AACA,YAAY,iBAAiB,OAAO;AACpC,KAAK;AACL;AACA,YAAY,eAAe,OAAO;AAClC;AACA;;AAEA,EAAE,gDAAO;AACT;AACA;;AAEO;AACP;AACA;AACA;AACA,IAAI,gDAAO;AACX;AACA,IAAI,kEAAY;AAChB;AACA;AACA;;;;;;;;;;;;;AC7EA;AAAe;AACf;AACA;AACA,8CAA8C;AAC9C,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAmD;AACJ;AACX;;AAE7B;AACP,UAAU,oDAAG,MAAM,oDAAG,KAAK,oDAAG;AAC9B;;AAEA,yBAAyB,qEAAe,CAAC,6CAAI;;AAE9B;AACf,SAAS,yDAAU;AACnB;AACA,sBAAsB,gDAAO;AAC7B,CAAC;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAkC;AACJ;;AAEvB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kDAAM;;AAEG,uHAAI,QAAQ,EAAC;;;;;;;;;;;;ACf5B;AACA;AACA,EAAE,KAA4D;AAC9D,EAAE,SACgD;AAClD,CAAC,qBAAqB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAA8B;AAC1C,gBAAgB,mBAAO,CAAC,gBAAI;AAC5B,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sBAAsB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,OAAO,qBAAqB,oBAAoB;AAC7D,aAAa,OAAO;AACpB;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,eAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,uBAAuB;AACvB;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,uBAAuB;AACvB;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uCAAuqCAAqC,gBAAgB;AACrmBAAmB;AACnB;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,WAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACteAAe;AACfyBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACfeAAe;AACf,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,mBAAmB;AACnB;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,eAAe;AACf,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,yBAAyB,4BAA4B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACfeAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACfiFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;;AAEA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sDAAsD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sDAAsD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA,cAAc,MAAM;AACpB;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA,6DAA6D,gBAAgB,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,qBAAqB,wBAAwB;AAC7C;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,0DAA0D,UAAU;AACpE;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,2WAA2W,EAAE;AAC7W;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA;AACA,0BAA0B,mBAAmB;AAC7C;AACA;AACA;AACA;AACA,0BAA0B,oBAAoB;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;;AAEA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+EAA+E,sBAAsB;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,sDAAsD;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sDAAsD;AAC3E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,qDAAqD;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qDAAqD;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,wCAAwC,mCAAmC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0BAA0B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wBAAwB,EAAE;AAC5D;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,WAAW;AACpyBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,EAAE;AACtC,yCAAyC,EAAE;AAC3C,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA,oCAAoC,EAAE;AACtC,mCAAmC,EAAE;AACrC,iCAAiC,EAAE;AACnC,kCAAkC,EAAE;AACpC,+BAA+B,EAAE;AACjC,mCAAmC,EAAE;AACrC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,wBAAwB;AACxB,0BAA0B;AAC1B;AACA,uBAAuB;AACvB;AACA,wBAAwB;AACxB,yBAAyB;AACzB;AACA,0BAA0B;AAC1B;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,qCAAqC,EAAE;AACvC,yCAAyC,EAAE;AAC3C,wCAAwC,EAAE;AAC1C,wCAAwC,EAAE;AAC1C,0CAA0C,EAAE;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,EAAE;AAC3C;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,kCAAkC,2BAA2B;AAC7D,uCAAuC,EAAE;AACzC,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,mBAAmB,IAAI;AACvB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,qCAAqC;AACrC;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA,yBAAyB,oBAAoB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4CAA4C,EAAE;AACnF,mCAAmC,yCAAyC,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,uDAAuD,iCAAiC,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qCAAqC,yCAAyC,EAAE;AAChF;AACA,qCAAqC,qCAAqC,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qCAAqC,EAAE;AAC5E,kCAAkC,sBAAsB,EAAE;AAC1D,6BAA6B,gBAAgB,EAAE;AAC/C,mCAAmC,cAAc,EAAE;AACniBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0BAA0B;AAC5D;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA,qDAAqD,sCAAsC,0BAA0B,EAAE,EAAE,EAAE;AAC3H;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,MAAM;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,gCAAgC,UAAU,EAAE;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,MAAM;AACnB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,MAAM;AACnB,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,cAAc,iBAAiB;AAC/B;AACA;AACA,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,gCAAgC,gCAAgC,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,gCAAgC,iCAAiC,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA,iCAAiC,mBAAmB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,6BAA6B,oBAAoB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACneAAe;AACf,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACfeAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wCAAwC,cAAc;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,aAAa,cAAc,2BAA2B;AAChG;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACneAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,gDAAgD;AAChyBAAyB,SAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,MAAM;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,GAAG;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,0CAA0C,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,qDAAqD;AACrD;AACA,qBAAqB,+BAA+B;AACpD;AACA;AACA;AACA,yBAAyB,kCAAkC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxsCAAsC,sBAAsB,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,iBAAiB,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,kDAAkD,EAAE;AAC7H;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,mBAAmB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,mBAAmmCAAmC,oEAAoE,EAAE;AACzG,mCAAmC,oEAAoE,EAAE;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oEAAoE,EAAE;AACzG,mCAAmC,oEAAoE,EAAE;AACzG;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA,mCAAmC,mCAAmC,EAAE;AACxE,mCAAmC,mCAAmC,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sCAAsC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,qCAAqC,uCAAuC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AACluBAAuB,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;;;;;;;;;;;;;ACvjWD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;AAC1B;AACF;;AAE7B;AACP,kBAAkB,oDAAG,CAAC,oDAAG,EAAE,+CAAM;AACjC;;AAEA;AACA,iBAAiB,qDAAI,CAAC,oDAAG,OAAO,+CAAM;AACtC;;AAEe;AACf;AACA,mBAAmB,4CAAG;AACtB,CAAC;;AAEM;AACP,UAAU,yDAAU;AACpB;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,2CAAE;AACd,cAAc,4DAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACnDA;AAAA;AACA;AACA;AACA;AACe;AACf;AACA,CAAC;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAA6B;AACQ;AACN;AACI;;AAEpB;AACf,WAAW,0CAAG,cAAc,+CAAM,OAAO,kDAAS;AAClD,uCAAuC,yDAAQ,iBAAiB,yDAAQ;AACxE,CAAC;;;;;;;;;;;;;ACRD;AAAA;AAA4C;;AAE7B;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,CAAC,EAAE,sDAAa,CAAC,EAAC;;;;;;;;;;;;;AChBlB;AAAA;AAAO;AACP;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;ACND;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAA;AAA8B;;AAEf;AACf;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,aAAa,gDAAI;AACjB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACvBD;AAAA;AAAA;AAAmC;;AAE5B;AACP,EAAE,kDAAK;AACP;;AAEe;AACf,EAAE,kDAAK;AACP,EAAE,kDAAK;AACP,CAAC;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAsC;AACuB;AACzB;;AAE7B,4BAA4B,kEAAY;AAC/C,SAAS,qDAAI;AACb,CAAC;;AAED,+BAA+B,qEAAe;AAC9C,aAAa,qDAAI;AACjB,CAAC;;AAEc;AACf,SAAS,yDAAU;AACnB;AACA;AACA,CAAC;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwH;AAC9E;AACsB;AACtB;AACZ;;AAEf;AACf,WAAW,oDAAG;AACd,kBAAkB,gDAAO;AACzB;AACA,sBAAsB,oDAAG,OAAO,gDAAO,CAAC;;AAExC;AACA,IAAI,+DAAY;AAChB;;AAEA;AACA,WAAW,oDAAG,WAAW,oDAAG;AAC5B;;AAEA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,2CAAE,IAAI,2CAAE;AACxD;AACA;AACA;AACA,yBAAyB,8DAAU,oBAAoB,8DAAU;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8DAAU;AACxC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,+DAAS;AACtB,aAAa,+DAAS;;AAEtB;AACA;AACA;AACA,aAAa,oEAAc;AAC3B,eAAe,kEAAY;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB,oEAAc;AAC9B,YAAY,oEAAc;AAC1B,YAAY,oEAAc;AAC1B,IAAI,yEAAmB;;AAEvB;AACA;AACA,YAAY,kEAAY;AACxB,aAAa,kEAAY;AACzB,2BAA2B,kEAAY;;AAEvC;;AAEA,YAAY,qDAAI;AAChB,YAAY,oEAAc;AAC1B,IAAI,yEAAmB;AACvB,QAAQ,+DAAS;;AAEjB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gBAAgB,oDAAG,SAAS,2CAAE,IAAI,gDAAO;AACzC,oCAAoC,gDAAO;;AAE3C;;AAEA;AACA;AACA;AACA,sCAAsC,oDAAG,mBAAmB,gDAAO;AACnE;AACA,kBAAkB,2CAAE;AACpB,eAAe,oEAAc;AAC7B,MAAM,yEAAmB;AACzB,iBAAiB,+DAAS;AAC1B;AACA;;AAEA;AACA;AACA;AACA,mCAAmC,2CAAE;AACrC;AACA,+BAA+B;AAC/B,mCAAmC;AACnC,4BAA4B;AAC5B,gCAAgC;AAChC;AACA;;AAEA,SAAS,yDAAI,gEAAgE,2CAAE,WAAW,2CAAE;AAC5F,CAAC;;;;;;;;;;;;;AChLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AACoC;AACtC;AACI;;AAE1B,kBAAkB,yDAAK;;AAE9B,cAAc,yDAAK;AACnB;AACA;AACA;AACA;AACA;;AAEO;AACP,SAAS,gDAAI;AACb,aAAa,gDAAI;AACjB,WAAW,gDAAI;AACf;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,+BAA+B,4CAAG;AAClC,iDAAiD,gDAAI;AACrD,GAAG;AACH;AACA,gBAAgB,4CAAG;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,gDAAO,SAAS,gDAAO;AACnC,8BAA8B,oDAAG,iBAAiB,kDAAS,aAAa,oDAAG;AAC3E;;AAEA;AACA,YAAY,gDAAO,SAAS,gDAAO;AACnC,kBAAkB,kDAAS,CAAC;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oDAAG;AAClB,eAAe,oDAAG;AAClB;AACA,iCAAiC,oDAAG;AACpC,yBAAyB,oDAAG;AAC5B,kBAAkB,sDAAK;;AAEvB;AACA;AACA;;AAEe;AACf;AACA,EAAE,0DAAM;AACR;AACA,CAAC;;;;;;;;;;;;;ACzED;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,mCAAmC;AACxE;AACA;;AAEA;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAkC;AACJ;;AAEvB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kDAAM;;AAEG,uHAAI,QAAQ,EAAC;;;;;;;;;;;;;ACb5B;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKgB;;;;;;;;;;;;;ACLhB;AAAe,4EAAa;;;;;;;;;;;;;ACA5B;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC1DD;AAAA;AAAA;AAAA;AAAA;AAA8B;AACI;AACM;AACX;;AAE7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,4CAAK;AACpB;AACA;AACA;AACA,6CAA6C,4CAAM;AACnD,2CAA2C,4CAAM;AACjD,mBAAmB,iDAAG;AACtB,mBAAmB,iDAAG;AACtB;AACA,6CAA6C,4CAAM;AACnD,2CAA2C,4CAAM;;AAEjD,qCAAqC,oDAAI;;AAEzC;AACA;AACA,qCAAqC;AACrC,0CAA0C,iDAAG,YAAY,iDAAG;AAC5D;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sEAAsE,yDAAQ;AAC9E;;AAEA;AACA,0EAA0E,yDAAQ;AAClF;;AAEA;AACA,wEAAwE,yDAAQ;AAChF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACtFD;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAA;AAA8B;;AAE9B;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,gDAAI;AACjB,WAAW,gDAAI;AACf,gBAAgB,gDAAI;AACpB,cAAc,gDAAI;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;AC3B5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AAChB;AACM;AACF;AACA;;AAElC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,yDAAQ;;AAE1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,IAAI,mDAAK,EAAE,mCAAmC,GAAG,mCAAmC;AACpF,IAAI,mDAAK,EAAE,mCAAmC,GAAG,mCAAmC;AACpF,IAAI,mDAAK,EAAE,mCAAmC,GAAG,mCAAmC;AACpF,IAAI,mDAAK,EAAE,mCAAmC,GAAG,mCAAmC;AACpF,IAAI,mDAAK,EAAE,mCAAmC,GAAG,mCAAmC;AACpF,IAAI,mDAAK,EAAE,mCAAmC,GAAG,mCAAmC;;AAEpF;;AAEA;AACA;AACA,iBAAiB,oDAAG;AACpB,WAAW,yDAAQ;AACnB,WAAW,sDAAK;AAChB;AACA;;AAEA,WAAW,yDAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C;AAC1C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iEAAiE,yDAAQ;AACzE;;AAEA;AACA,iEAAiE,yDAAQ;AACzE;;AAEA;AACA,sEAAsE,yDAAQ;AAC9E;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4FAA4F,yDAAQ,CAAC,4CAAK,YAAY,yDAAQ;AAC9H;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACpID;AAAA;AAAA;AAAA;AAAA;AAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;;AAEe,oEAAK,0DAAM,qgDAAqgD,EAAC;;AAEzhD,iBAAiB,0DAAM;;AAEvB,mBAAmB,0DAAM;;AAEzB,kBAAkB,0DAAM;;;;;;;;;;;;;ACf/B;AAAA;AAAA;AAAA;AAAkC;AACJ;;AAEvB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kDAAM;;AAEG,uHAAI,QAAQ,EAAC;;;;;;;;;;;;;ACf5B;AAAA;AAAA;AAAA;AAA0C;AAC+B;AAC7B;;AAE5C;AACA,qBAAqB,oDAAG,MAAM,gDAAO,EAAE;;AAExB;AACf;AACA,CAAC;;AAED;AACA,SAAS,iEAAW;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,qDAAI;AAClB,iBAAiB,qDAAI;AACrB,oBAAoB,oDAAG,CAAC,oDAAG,WAAW,gDAAO,IAAI,oDAAG,sBAAsB,gDAAO,6BAA6B,sDAAK;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oDAAG;AAChB,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB,sCAAsC,EAAE;AAC/F,8BAA8B,qBAAqB,sCAAsC;AACzF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,+DAAS;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACrGA;AAAA;AAAwB;;AAET;AACf;AACA,uBAAuB,oDAAG,2CAA2C,SAAS;AAC9E,0DAA0D,SAAS;AACnE;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACE;AACL;AACL;AACI;AACC;AACN;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAQ;AAC7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe;AACf,cAAc,yDAAS,eAAe,oDAAQ;;AAE9C;AACA,WAAW,wDAAI;AACf;;AAEA,SAAS,sDAAgB;AACzB;;AAEO;AACP,cAAc,oDAAO;;AAErB;AACA,WAAW,wDAAI;AACf;;AAEA,SAAS,sDAAgB;AACzB;;AAEO;AACP,cAAc,yDAAS;;AAEvB;AACA,WAAW,wDAAI;AACf;;AAEA,SAAS,sDAAgB;AACzB;;AAEO;AACP,cAAc,mDAAM;;AAEpB;AACA,WAAW,wDAAI;AACf;;AAEA,SAAS,sDAAgB;AACzjB;AACD;AACC;AACA;AACK;AACL;AACE;AACC;AACJ;AACD;AACC;AACC;AACA;AACC;AACH;AACM;AACE;AACP;AACG;AACC;AACF;AACD;AACU;AACN;AACJ;AACD;AACO;AACN;AACK;AACH;AACH;;;;;;;;;;;;;AC/BxB;AAAe;AACf;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,6CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACH;AACH;;AAExB;AACP;AACA;;AAEO;AACP;AACA;;AAEA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,yDAAG;AAClB,gBAAgB,sDAAK;AACrB,cAAc,4DAAQ;;AAEtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,mBAAmB,gBAAgB;AACnC;;AAEA;AACA;AACA,OAAO;;AAEP,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACtJD;AAAA;AAAA;AAAA;AAAkC;AACJ;;AAEvB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kDAAM;;AAEG,uHAAI,QAAQ,EAAC;;;;;;;;;;;;;ACf5B;AAAA;AAAA;AAAA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;A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AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,YAAY,yCAAyC;AACrF;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,YAAY,yCAAyC;AACrF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACnKD;AAAA;AAA+B;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB,uBAAuB,yDAAK;AAC5B;AACA;;AAEA,gCAAgC;AAChC;;AAEe;AACf;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;;AAEpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,QAAQ;AAC3C,qBAAqB,qCAAqC;;AAE1D;AACA,CAAC;;;;;;;;;;;;;AChDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AACmB;AAC6C;AACtC;AACxB;;AAEjC;AACA;AACA;AACA;AACA,eAAe,yDAAK;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,mDAAU;AACd,GAAG;AACH;AACA,IAAI,mDAAU;AACd;AACA;AACA;AACA,QAAQ,oDAAW;AACnB,wBAAwB,gDAAO;AAC/B,yBAAyB,gDAAO;AAChC;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,+DAAS,WAAW,gDAAO,QAAQ,gDAAO;AACpD;AACA,iBAAiB,oEAAc;AAC/B;AACA,qBAAqB,oEAAc;AACnC,IAAI,+EAAyB;AAC7B,iBAAiB,+DAAS;AAC1B;AACA;AACA,kCAAkC,gDAAO;AACzC;AACA,uBAAuB,oDAAG;AAC1B;AACA,6BAA6B,gDAAO;AACpC;AACA,KAAK;AACL,8BAA8B,gDAAO;AACrC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,oDAAG;AACpB,GAAG;AACH;AACA;AACA,EAAE,mDAAU;AACZ;AACA;;AAEA;AACA,EAAE,mDAAU;AACZ;;AAEA;AACA;AACA,EAAE,mDAAU;AACZ,MAAM,oDAAG,aAAa,gDAAO;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEe;AACf;;AAEA;AACA;AACA,EAAE,0DAAM;;AAER;AACA;AACA;;AAEA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,2EAA2E,QAAQ;AACnF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AClLD;AAAA;AAAuC;;AAExB;AACf,SAAS,oDAAG,gBAAgB,gDAAO,IAAI,oDAAG,gBAAgB,gDAAO;AACjE,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;;;;ACAlD;AAAA;AAAkC;;AAEnB,yHAAM,oDAAoD,EAAC;;;;;;;;;;;;;ACF1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmE;AACrC;AACM;AACV;AACQ;AACA;AACR;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA,kBAAkB,yDAAgB;AAClC;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,uDAAM;AACzB,WAAW,yDAAQ;AACnB,WAAW,sDAAK;AAChB,KAAK;AACL,2BAA2B,kDAAS;AACpC;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,qDAAI;AACd;AACA,KAAK;;AAEL;AACA,mDAAmD,OAAO;AAC1D,YAAY,yDAAQ;AACpB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,+DAA+D;AAC/D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,+DAA+D;AAC/D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP,iEAAiE;AACjE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4FAA4F,yDAAQ,CAAC,4CAAK,YAAY,yDAAQ;AAC9H;;AAEA;AACA,2DAA2D,6CAAI;AAC/D;;AAEA;AACA,CAAC;;;;;;;;;;;;;AC1MD;AAAA;AAAkC;;AAEnB,yHAAM,oDAAoD,EAAC;;;;;;;;;;;;;ACF1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACJ;AACG;;AAE1B,gBAAgB;;AAER;AACf,cAAc,yDAAG;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,yDAAG;AAC5B;AACA;AACA;AACA;;AAEA;AACA,uCAAuC,4CAAK;AAC5C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,+CAAS;;AAEX;AACA;;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAkC;AACJ;;AAEvB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kDAAM;;AAEG,uHAAI,QAAQ,EAAC;;;;;;;;;;;;;ACb5B;AAAe;AACf;AACA,qCAAqC,0BAA0B;AAC/D;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAA4C;;AAE7B;AACf;AACA;AACA,8BAA8B,OAAO;AACrC;AACA;AACA;;AAEA;;AAEA;AACA,CAAC,EAAE,sDAAa,CAAC,EAAC;;;;;;;;;;;;;ACblB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACU;AACvB;AACK;;AAE/B;AACP;;AAEA;AACA;AACA,WAAW,sDAAK;AAChB;;AAEA;AACA;AACA,WAAW,2DAAU;AACrB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,WAAW,8DAAa;;AAExB;AACA;AACA;AACA,aAAa,8DAAa;AAC1B,KAAK;AACL;AACA;AACA,aAAa,8DAAa;AAC1B;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEe;AACf,cAAc,2DAAU,CAAC,oDAAQ,EAAE,oDAAQ;;AAE3C;AACA,WAAW,wDAAI;AACf;;AAEA,EAAE,+CAAS;;AAEX;AACA;;;;;;;;;;;;;ACvEA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEO;;AAEP;;AAEe;AACf;AACA;AACA;;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACW;AACD;AACuB;AAC9B;AACH;AACF;AACgB;AACC;;AAEpD;AACA;AACA,UAAU,kDAAK,aAAa,kDAAK;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,sDAAQ;AAChC;;AAEA;AACA,UAAU,kDAAK,WAAW,kDAAK,0BAA0B,kDAAK;AAC9D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,8DAAe;AACnC,kBAAkB,4DAAQ;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sDAAQ;AAC/B;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,+CAA+C,uDAAS;AACxD;;AAEA;AACA;AACA,oEAAoE,uDAAS;AAC7E;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,kCAAkC,EAAE;AAC1E,mDAAmD,gCAAgC,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,kBAAkB,4BAA4B,SAAS,uDAAS,sCAAsC;AACtG;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,MAAM,gEAAW,KAAK,iDAAS;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,0DAAK;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM,+DAAS;AACf;AACA;;AAEA,IAAI,2DAAO;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,2DAAM,CAAC,kDAAK;AACxB,YAAY,0DAAK;AACjB,aAAa,kDAAK;AAClB,aAAa,kDAAK;;AAElB,IAAI,2DAAW,CAAC,kDAAK;AACrB,IAAI,iEAAa;AACjB;AACA,IAAI,+DAAS;AACb;;AAEA;AACA,MAAM,2DAAO;AACb;AACA,iBAAiB,kDAAK,oBAAoB,kDAAK;AAC/C;AACA;AACA,sEAAsE,0DAAK;AAC3E;;AAEA;AACA;AACA,MAAM,0DAAU,CAAC,kDAAK;AACtB,MAAM,2DAAO;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,0DAAK;AAClB;AACA,qBAAqB,kDAAK;AAC1B;;AAEA,IAAI,2DAAO;AACX,sBAAsB,2DAAM;AAC5B,SAAS,2DAAM;AACf;;AAEA;AACA;AACA,kBAAkB,kDAAK;AACvB;AACA,qCAAqC,kDAAK;AAC1C;;AAEA,IAAI,iEAAa;AACjB,eAAe,OAAO;AACtB,0BAA0B,0DAAK;AAC/B;AACA;AACA;AACA;;AAEA;;AAEA;AACA,6DAA6D,sBAAsB,EAAE;AACrF,MAAM,+DAAS;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,kDAAK;AACvB;;AAEA,IAAI,2DAAO;AACX;AACA;AACA,eAAe,OAAO;AACtB,0BAA0B,0DAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,kDAAK;AACvB;;AAEA,IAAI,iEAAa;AACjB;AACA,yCAAyC,oBAAoB,EAAE;AAC/D,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2DAAM;AACtB;AACA;AACA;AACA;;AAEA;AACA,0EAA0E,4DAAQ;AAClF;;AAEA;AACA,sEAAsE,4DAAQ;AAC9E;;AAEA;AACA,yEAAyE,4DAAQ;AACjF;;AAEA;AACA,sEAAsE,4DAAQ;AAC9E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;AClaD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8B;AACI;;AAElC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yGAAyG,iDAAQ;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,kFAAkF,EAAE;;AAE9H;AACA;AACA,0CAA0C,gCAAgC,6DAA6D,EAAE;AACzI;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,+BAA+B,EAAE;;AAEzE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,wBAAwB,EAAE;AACpD;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B,4CAAK;AAChC;;AAEA;AACA,gEAAgE,4CAAK;AACrE;;AAEA;AACA,+DAA+D,4CAAK;AACpE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;AC7KA;AAAA;AAAA;AAAA;AAAkC;AACJ;AACO;;AAErC;AACA;AACA;;AAEA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;;AAEA,6CAA6C,yDAAQ;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,gBAAgB;AACnC,aAAa,4DAAQ;AACrB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,uDAAM;AACnC,6BAA6B,uDAAM;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sEAAsE,yDAAQ;AAC9E;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACjGD;AAAA;AAAiD;;AAElC;AACf,SAAS,kEAAc;AACvB;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAA+B;AACD;;AAEf;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,4CAAG;AACpD;AACA;AACA;AACA,GAAG;AACH,UAAU,gDAAI;AACd;;;;;;;;;;;;;AC5CA;AAAA;AAAmD;;AAEpC;AACf,SAAS,0EAAmB;AAC5B,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAkC;AACJ;;AAEvB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kDAAM;;AAEG,uHAAI,QAAQ,EAAC;;;;;;;;;;;;;ACb5B;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2B;;AAE3B,UAAU,uDAAG;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVP;AAAA;AACA;AACA;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmC;AACY;AACd;;AAEjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;;AAEA,SAAS,yDAAS;AAClB;;AAEe;AACf,wBAAwB,+DAAW;;AAEnC;AACA,WAAW,wDAAI;AACf;;AAEA,SAAS,+CAAS;AAClB;;;;;;;;;;;;;AClCA;AAAe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAe;AACf;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAO;AACP;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;ACND;AAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACLP;AAAA;AAAA;AAAA;AAAkC;AACJ;;AAEvB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kDAAM;;AAEG,uHAAI,QAAQ,EAAC;;;;;;;;;;;;;ACb5B;AAAA;AAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1DA;AAAA;AAAe;;;;;;;;;;;;;ACAf;AAAA;AAAwB;;AAET;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oDAAG;AACzB;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,8CAA8C,aAAa,kCAAkC,EAAE,EAAE;AACjG,wDAAwD,8BAA8B,EAAE;AACxF;;AAEA;AACA,6BAA6B,iDAAiD,EAAE;AAChF,0BAA0B,2CAA2C,EAAE;AACvE,8BAA8B,uDAAuD,EAAE;AACvF,sBAAsB,cAAc,aAAa,EAAE;AACnD,+BAA+B,mCAAmC,aAAa,EAAE;AACjF,iCAAiC,oBAAoB,aAAa,EAAE;AACpE,yBAAyB,YAAY,aAAa;AAClD;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,oDAAG;AACZ;;AAEA;AACA;AACA;;;;;;;;;;;;;ACxEA;AAAA;AAAA;;AAEO;;;;;;;;;;;;;ACFP;AAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAkE;AACpC;AACG;;AAElB;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,yDAAS;AACjD;AACA;;AAEA;AACA,2CAA2C,uDAAM;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C,gBAAgB,kDAAS;AACzB;AACA;;AAEA;AACA,uCAAuC,4CAAK;AAC5C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,+CAAS;AAClB;;;;;;;;;;;;;ACzDA;AAAe;AACf;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACjqB;AACZ;AACA;AACM;AACX;AACA;AACiC;AAC3B;AACV;AACE;AACS;AACM;AACqE;AACQ;AACxB;AACA;AACQ;AACxB;AACoB;AAC5B;AAC/B;AAC0C;AACX;AACoB;AACJ;AACI;AACoB;AAClF;AACJ;AACM;;;;;;;;;;;;;ACjCvD;AAAA;AAAA;AAAA;AAAA;AAA+E;AACpC;AACuB;;AAE3D;AACP,YAAY,oDAAG,iBAAiB,oDAAG;;AAEnC;AACA,MAAM,oDAAG,MAAM,gDAAO,SAAS,wFAAuB;;AAEtD,wCAAwC,qDAAI;;AAE5C;AACA,YAAY,qDAAI,aAAa,oDAAG;AAChC,gBAAgB,oDAAG,mBAAmB,oDAAG;AACzC;;AAEA;AACA;AACA,YAAY,sDAAK,IAAI,oDAAG,SAAS,qDAAI;AACrC;AACA,WAAW,2CAAE,GAAG,qDAAI,MAAM,qDAAI;AAC9B,mBAAmB,qDAAI;AACvB;;AAEA;AACA;;AAEe;AACf,SAAS,iEAAe;AACxB;AACA;AACA,CAAC;;;;;;;;;;;;;AChCD;AAAA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;ACRD;AAAe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAA;AAAoC;;AAErB;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,0DAAS;AACpB;AACA;;;;;;;;;;;;;AChCA;AAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACpwE;AACR;AACF;AACE;AACE;AACA;AACN;AACA;AACA;AACU;AACe;AACA;AACA;AACA;AACA;AACA;AACM;AACA;AACM;AACL;AACA;AACA;AACA;AACM;AACN;AACA;AACA;AACM;AACN;AACM;AACA;AACF;AACG;AACH;AACM;AACT;AACS;AAC1B;AACW;AACuC;AAClD;AACJ;AAC2F;;;;;;;;;;;;;AC1CnK;AAAA;AAAA;AAAA;AAAA;AAAoC;AACF;;AAElC,sBAAsB,yDAAQ,CAAC,kDAAS;AACjC;AACA;AACQ,0EAAW,EAAC;;;;;;;;;;;;;ACN3B;AAAe;AACf;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAA2F;AAC9D;AACI;;AAEjC;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA,UAAU,gDAAI;AACd;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,gDAAO,SAAS,gDAAO;AACnC,eAAe,oDA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","file":"src-app-pages-dashboard-dashboard-module.js","sourcesContent":["export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","export var slice = Array.prototype.slice;\n","export {default as chord} from \"./chord\";\nexport {default as ribbon} from \"./ribbon\";\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.interpolator(domain); break;\n    default: this.interpolator(interpolator).domain(domain); break;\n  }\n  return this;\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { AntdModule } from 'src/app/antd/antd.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [DashboardComponent],\r\n  imports: [\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    SharedModule,\r\n    AntdModule\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n","export var name = \"d3\";\nexport var version = \"5.16.0\";\nexport var description = \"Data-Driven Documents\";\nexport var keywords = [\"dom\",\"visualization\",\"svg\",\"animation\",\"canvas\"];\nexport var homepage = \"https://d3js.org\";\nexport var license = \"BSD-3-Clause\";\nexport var author = {\"name\":\"Mike Bostock\",\"url\":\"https://bost.ocks.org/mike\"};\nexport var main = \"dist/d3.node.js\";\nexport var unpkg = \"dist/d3.min.js\";\nexport var jsdelivr = \"dist/d3.min.js\";\nexport var module = \"index.js\";\nexport var repository = {\"type\":\"git\",\"url\":\"https://github.com/d3/d3.git\"};\nexport var files = [\"dist/**/*.js\",\"index.js\"];\nexport var scripts = {\"pretest\":\"rimraf dist && mkdir dist && json2module package.json > dist/package.js && rollup -c\",\"test\":\"tape 'test/**/*-test.js'\",\"prepublishOnly\":\"yarn test\",\"postpublish\":\"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \\\"d3 ${npm_package_version}\\\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \\\"${npm_package_version}\\\" && git tag -am \\\"${npm_package_version}\\\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\"};\nexport var devDependencies = {\"json2module\":\"0.0\",\"rimraf\":\"2\",\"rollup\":\"1\",\"rollup-plugin-ascii\":\"0.0\",\"rollup-plugin-node-resolve\":\"3\",\"rollup-plugin-terser\":\"5\",\"tape\":\"4\"};\nexport var dependencies = {\"d3-array\":\"1\",\"d3-axis\":\"1\",\"d3-brush\":\"1\",\"d3-chord\":\"1\",\"d3-collection\":\"1\",\"d3-color\":\"1\",\"d3-contour\":\"1\",\"d3-dispatch\":\"1\",\"d3-drag\":\"1\",\"d3-dsv\":\"1\",\"d3-ease\":\"1\",\"d3-fetch\":\"1\",\"d3-force\":\"1\",\"d3-format\":\"1\",\"d3-geo\":\"1\",\"d3-hierarchy\":\"1\",\"d3-interpolate\":\"1\",\"d3-path\":\"1\",\"d3-polygon\":\"1\",\"d3-quadtree\":\"1\",\"d3-random\":\"1\",\"d3-scale\":\"2\",\"d3-scale-chromatic\":\"1\",\"d3-selection\":\"1\",\"d3-shape\":\"1\",\"d3-time\":\"1\",\"d3-time-format\":\"2\",\"d3-timer\":\"1\",\"d3-transition\":\"1\",\"d3-voronoi\":\"1\",\"d3-zoom\":\"1\"};\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { DashboardDTO } from '../Model/DashboardDTO';\r\nimport { API_ENDPOINTS, API_URL } from '../Model/Global';\r\nimport { BaseApiHandlerService } from './base-api-handler.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashboardService extends BaseApiHandlerService{\r\n  dashboardObserver$:Observable<DashboardDTO>;\r\n  private dashboardSubject$: BehaviorSubject<DashboardDTO> = new BehaviorSubject<DashboardDTO>(undefined);\r\n  overallInfoObserver$:Observable<any>;\r\n  private overalllSubject$:BehaviorSubject<any> =new BehaviorSubject<any>(undefined);\r\n\r\n  constructor(private http:HttpClient) {\r\n\r\n    super(http);\r\n    this.dashboardObserver$= this.dashboardSubject$.asObservable();\r\n    this.overallInfoObserver$=this.overalllSubject$.asObservable();\r\n  }\r\n\r\n  GetAnalytics()\r\n  {\r\n    this.GetAll(API_URL+API_ENDPOINTS.Transaction+\"/GetAnalytics\").subscribe(res=>{\r\n      this.dashboardSubject$.next(res.dynamicResult);\r\n    });\r\n  }\r\n  GetOverAllInfo(){\r\n    this.GetAll(API_URL+API_ENDPOINTS.Transaction+\"/OverallInfo\").subscribe(res=>{\r\n      this.overalllSubject$.next(res.dynamicResult);\r\n    })\r\n  }\r\n  getRevenuePerMonthData(date)\r\n  {\r\n    var url = API_URL + API_ENDPOINTS.Transaction + `/GetRevenuePerMonthData?date=${date}`;\r\n    return this.GetAll(url);\r\n  }\r\n}\r\n","export default function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","export default function() {\n  return Math.random();\n}\n","export default function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","import constant from \"./constant\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import colors from \"../colors.js\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","import {range} from \"d3-array\";\nimport {max, tau} from \"./math\";\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","export {default as zoom} from \"./zoom.js\";\nexport {default as zoomTransform, identity as zoomIdentity} from \"./transform.js\";\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","export {\n  default as scaleBand,\n  point as scalePoint\n} from \"./band\";\n\nexport {\n  default as scaleIdentity\n} from \"./identity\";\n\nexport {\n  default as scaleLinear\n} from \"./linear\";\n\nexport {\n  default as scaleLog\n} from \"./log\";\n\nexport {\n  default as scaleSymlog\n} from \"./symlog\";\n\nexport {\n  default as scaleOrdinal,\n  implicit as scaleImplicit\n} from \"./ordinal\";\n\nexport {\n  default as scalePow,\n  sqrt as scaleSqrt\n} from \"./pow\";\n\nexport {\n  default as scaleQuantile\n} from \"./quantile\";\n\nexport {\n  default as scaleQuantize\n} from \"./quantize\";\n\nexport {\n  default as scaleThreshold\n} from \"./threshold\";\n\nexport {\n  default as scaleTime\n} from \"./time\";\n\nexport {\n  default as scaleUtc\n} from \"./utcTime\";\n\nexport {\n  default as scaleSequential,\n  sequentialLog as scaleSequentialLog,\n  sequentialPow as scaleSequentialPow,\n  sequentialSqrt as scaleSequentialSqrt,\n  sequentialSymlog as scaleSequentialSymlog\n} from \"./sequential\";\n\nexport {\n  default as scaleSequentialQuantile\n} from \"./sequentialQuantile\";\n\nexport {\n  default as scaleDiverging,\n  divergingLog as scaleDivergingLog,\n  divergingPow as scaleDivergingPow,\n  divergingSqrt as scaleDivergingSqrt,\n  divergingSymlog as scaleDivergingSymlog\n} from \"./diverging\";\n\nexport {\n  default as tickFormat\n} from \"./tickFormat\";\n","import {identity} from \"./continuous\";\nimport {initInterpolator} from \"./init\";\nimport {linearish} from \"./linear\";\nimport {loggish} from \"./log\";\nimport {symlogish} from \"./symlog\";\nimport {powish} from \"./pow\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport default function sequential() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialLog() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pi, pow, sign, sin, sqrt, tan} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {mercatorRaw} from \"./mercator.js\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy),\n      l = atan2(x, abs(fy)) * sign(fy);\n    if (fy * n < 0)\n      l -= pi * sign(x) * sign(fy);\n    return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import clipRectangle from \"./rectangle.js\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","export {default as dsvFormat} from \"./dsv.js\";\nexport {csvParse, csvParseRows, csvFormat, csvFormatBody, csvFormatRows, csvFormatRow, csvFormatValue} from \"./csv.js\";\nexport {tsvParse, tsvParseRows, tsvFormat, tsvFormatBody, tsvFormatRows, tsvFormatRow, tsvFormatValue} from \"./tsv.js\";\nexport {default as autoType} from \"./autoType.js\";\n","import adder from \"./adder.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nvar sum = adder();\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi)\n    return point[0];\n  else\n    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","export {default as randomUniform} from \"./uniform\";\nexport {default as randomNormal} from \"./normal\";\nexport {default as randomLogNormal} from \"./logNormal\";\nexport {default as randomBates} from \"./bates\";\nexport {default as randomIrwinHall} from \"./irwinHall\";\nexport {default as randomExponential} from \"./exponential\";\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {slice} from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport {tickStep} from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {map} from \"d3-collection\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text.js\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","export var slice = Array.prototype.slice;\n","import text from \"./text.js\";\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text) {\n      return (new DOMParser).parseFromString(text, type);\n    });\n  };\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n","import projection from \"./index.js\";\nimport {abs, epsilon} from \"../math.js\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import deviation from \"../deviation\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport nice from \"./nice\";\nimport {copy, transformer} from \"./continuous\";\nimport {initRange} from \"./init\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport function loggish(transform) {\n  var scale = transform(transformLog, transformExp),\n      domain = scale.domain,\n      base = 10,\n      logs,\n      pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, log()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(domain) {\n  var a = domain[0], b = domain[domain.length - 1], t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous(transform, untransform) {\n  return transformer()(transform, untransform);\n}\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import dsv from \"./dsv.js\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\nexport var tsvFormatRow = tsv.formatRow;\nexport var tsvFormatValue = tsv.formatValue;\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {linearish} from \"./linear\";\nimport {copy, identity, transformer} from \"./continuous\";\nimport {initRange} from \"./init\";\n\nfunction transformPow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nexport function powish(transform) {\n  var scale = transform(identity, identity),\n      exponent = 1;\n\n  function rescale() {\n    return exponent === 1 ? transform(identity, identity)\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\n        : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\n\nexport default function pow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, pow()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nexport function sqrt() {\n  return pow.apply(null, arguments).exponent(0.5);\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors.js\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","export {default as forceCenter} from \"./center\";\nexport {default as forceCollide} from \"./collide\";\nexport {default as forceLink} from \"./link\";\nexport {default as forceManyBody} from \"./manyBody\";\nexport {default as forceRadial} from \"./radial\";\nexport {default as forceSimulation} from \"./simulation\";\nexport {default as forceX} from \"./x\";\nexport {default as forceY} from \"./y\";\n","import {acos, sin} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {bisector, tickStep} from \"d3-array\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport continuous, {copy, identity} from \"./continuous\";\nimport {initRange} from \"./init\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(identity, identity),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return initRange.apply(calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\nimport {initRange} from \"./init\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n\n  function scale(x) {\n    return x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import adder from \"../adder.js\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {initRange} from \"./init\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\n\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n","export default function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","export default function(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","import {default as polygonContains} from \"./polygonContains.js\";\nimport {default as distance} from \"./distance.js\";\nimport {epsilon2, radians} from \"./math.js\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (\n        ab > 0 &&\n        ao <= ab &&\n        bo <= ab &&\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\n      )\n        return true;\n    }\n    ao = bo;\n  }\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n","export default function(x) {\n  return x;\n}\n","import {range as sequence} from \"d3-array\";\nimport {initRange} from \"./init\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n","import colors from \"../colors.js\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","/* @license C3.js v0.7.20 | (c) C3 Team and other contributors | http://c3js.org/ */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.c3 = factory());\n}(this, (function () { 'use strict';\n\n  function ChartInternal(api) {\r\n      var $$ = this;\r\n      // Note: This part will be replaced by rollup-plugin-modify\r\n      // When bundling esm output. Beware of changing this line.\r\n      // TODO: Maybe we should check that the modification by rollup-plugin-modify\r\n      // is valid during unit tests.\r\n      $$.d3 = window.d3\r\n          ? window.d3\r\n          : typeof require !== 'undefined'\r\n              ? require('d3')\r\n              : undefined;\r\n      $$.api = api;\r\n      $$.config = $$.getDefaultConfig();\r\n      $$.data = {};\r\n      $$.cache = {};\r\n      $$.axes = {};\r\n  }\n\n  /**\r\n   * The Chart class\r\n   *\r\n   * The methods of this class is the public APIs of the chart object.\r\n   */\r\n  function Chart(config) {\r\n      this.internal = new ChartInternal(this);\r\n      this.internal.loadConfig(config);\r\n      this.internal.beforeInit(config);\r\n      this.internal.init();\r\n      this.internal.afterInit(config);\r\n      (function bindThis(fn, target, argThis) {\r\n          Object.keys(fn).forEach(function (key) {\r\n              target[key] = fn[key].bind(argThis);\r\n              if (Object.keys(fn[key]).length > 0) {\r\n                  bindThis(fn[key], target[key], argThis);\r\n              }\r\n          });\r\n      })(Chart.prototype, this, this);\r\n  }\n\n  var asHalfPixel = function (n) {\r\n      return Math.ceil(n) + 0.5;\r\n  };\r\n  var ceil10 = function (v) {\r\n      return Math.ceil(v / 10) * 10;\r\n  };\r\n  var diffDomain = function (d) {\r\n      return d[1] - d[0];\r\n  };\r\n  var getOption = function (options, key, defaultValue) {\r\n      return isDefined(options[key]) ? options[key] : defaultValue;\r\n  };\r\n  var getPathBox = function (path) {\r\n      var box = getBBox(path), items = [path.pathSegList.getItem(0), path.pathSegList.getItem(1)], minX = items[0].x, minY = Math.min(items[0].y, items[1].y);\r\n      return { x: minX, y: minY, width: box.width, height: box.height };\r\n  };\r\n  var getBBox = function (element) {\r\n      try {\r\n          return element.getBBox();\r\n      }\r\n      catch (ignore) {\r\n          // Firefox will throw an exception if getBBox() is called whereas the\r\n          // element is rendered with display:none\r\n          // See https://github.com/c3js/c3/issues/2692\r\n          // The previous code was using `getBoundingClientRect` which was returning\r\n          // everything at 0 in this case so let's reproduce this behavior here.\r\n          return { x: 0, y: 0, width: 0, height: 0 };\r\n      }\r\n  };\r\n  var hasValue = function (dict, value) {\r\n      var found = false;\r\n      Object.keys(dict).forEach(function (key) {\r\n          if (dict[key] === value) {\r\n              found = true;\r\n          }\r\n      });\r\n      return found;\r\n  };\r\n  var isArray = function (o) {\r\n      return Array.isArray(o);\r\n  };\r\n  var isDefined = function (v) {\r\n      return typeof v !== 'undefined';\r\n  };\r\n  var isEmpty = function (o) {\r\n      return (typeof o === 'undefined' ||\r\n          o === null ||\r\n          (isString(o) && o.length === 0) ||\r\n          (typeof o === 'object' && Object.keys(o).length === 0));\r\n  };\r\n  var isFunction = function (o) {\r\n      return typeof o === 'function';\r\n  };\r\n  var isNumber = function (o) {\r\n      return typeof o === 'number';\r\n  };\r\n  var isString = function (o) {\r\n      return typeof o === 'string';\r\n  };\r\n  var isUndefined = function (v) {\r\n      return typeof v === 'undefined';\r\n  };\r\n  var isValue = function (v) {\r\n      return v || v === 0;\r\n  };\r\n  var notEmpty = function (o) {\r\n      return !isEmpty(o);\r\n  };\r\n  var sanitise = function (str) {\r\n      return typeof str === 'string'\r\n          ? str.replace(/</g, '&lt;').replace(/>/g, '&gt;')\r\n          : str;\r\n  };\r\n  var flattenArray = function (arr) {\r\n      return Array.isArray(arr) ? [].concat.apply([], arr) : [];\r\n  };\r\n  /**\r\n   * Returns whether the point is within the given box.\r\n   *\r\n   * @param {Array} point An [x,y] coordinate\r\n   * @param {Object} box An object with {x, y, width, height} keys\r\n   * @param {Number} sensitivity An offset to ease check on very small boxes\r\n   */\r\n  var isWithinBox = function (point, box, sensitivity) {\r\n      if (sensitivity === void 0) { sensitivity = 0; }\r\n      var xStart = box.x - sensitivity;\r\n      var xEnd = box.x + box.width + sensitivity;\r\n      var yStart = box.y + box.height + sensitivity;\r\n      var yEnd = box.y - sensitivity;\r\n      return (xStart < point[0] && point[0] < xEnd && yEnd < point[1] && point[1] < yStart);\r\n  };\r\n  /**\r\n   * Returns Internet Explorer version number (or false if no Internet Explorer used).\r\n   *\r\n   * @param string agent Optional parameter to specify user agent\r\n   */\r\n  var getIEVersion = function (agent) {\r\n      // https://stackoverflow.com/questions/19999388/check-if-user-is-using-ie\r\n      if (typeof agent === 'undefined') {\r\n          agent = window.navigator.userAgent;\r\n      }\r\n      var pos = agent.indexOf('MSIE '); // up to IE10\r\n      if (pos > 0) {\r\n          return parseInt(agent.substring(pos + 5, agent.indexOf('.', pos)), 10);\r\n      }\r\n      pos = agent.indexOf('Trident/'); // IE11\r\n      if (pos > 0) {\r\n          pos = agent.indexOf('rv:');\r\n          return parseInt(agent.substring(pos + 3, agent.indexOf('.', pos)), 10);\r\n      }\r\n      return false;\r\n  };\r\n  /**\r\n   * Returns whether the used browser is Internet Explorer.\r\n   *\r\n   * @param version Optional parameter to specify IE version\r\n   */\r\n  var isIE = function (version) {\r\n      var ver = getIEVersion();\r\n      if (typeof version === 'undefined') {\r\n          return !!ver;\r\n      }\r\n      return version === ver;\r\n  };\n\n  function AxisInternal(component, params) {\r\n      var internal = this;\r\n      internal.component = component;\r\n      internal.params = params || {};\r\n      internal.d3 = component.d3;\r\n      internal.scale = internal.d3.scaleLinear();\r\n      internal.range;\r\n      internal.orient = 'bottom';\r\n      internal.innerTickSize = 6;\r\n      internal.outerTickSize = this.params.withOuterTick ? 6 : 0;\r\n      internal.tickPadding = 3;\r\n      internal.tickValues = null;\r\n      internal.tickFormat;\r\n      internal.tickArguments;\r\n      internal.tickOffset = 0;\r\n      internal.tickCulling = true;\r\n      internal.tickCentered;\r\n      internal.tickTextCharSize;\r\n      internal.tickTextRotate = internal.params.tickTextRotate;\r\n      internal.tickLength;\r\n      internal.axis = internal.generateAxis();\r\n  }\r\n  AxisInternal.prototype.axisX = function (selection, x, tickOffset) {\r\n      selection.attr('transform', function (d) {\r\n          return 'translate(' + Math.ceil(x(d) + tickOffset) + ', 0)';\r\n      });\r\n  };\r\n  AxisInternal.prototype.axisY = function (selection, y) {\r\n      selection.attr('transform', function (d) {\r\n          return 'translate(0,' + Math.ceil(y(d)) + ')';\r\n      });\r\n  };\r\n  AxisInternal.prototype.scaleExtent = function (domain) {\r\n      var start = domain[0], stop = domain[domain.length - 1];\r\n      return start < stop ? [start, stop] : [stop, start];\r\n  };\r\n  AxisInternal.prototype.generateTicks = function (scale) {\r\n      var internal = this;\r\n      var i, domain, ticks = [];\r\n      if (scale.ticks) {\r\n          return scale.ticks.apply(scale, internal.tickArguments);\r\n      }\r\n      domain = scale.domain();\r\n      for (i = Math.ceil(domain[0]); i < domain[1]; i++) {\r\n          ticks.push(i);\r\n      }\r\n      if (ticks.length > 0 && ticks[0] > 0) {\r\n          ticks.unshift(ticks[0] - (ticks[1] - ticks[0]));\r\n      }\r\n      return ticks;\r\n  };\r\n  AxisInternal.prototype.copyScale = function () {\r\n      var internal = this;\r\n      var newScale = internal.scale.copy(), domain;\r\n      if (internal.params.isCategory) {\r\n          domain = internal.scale.domain();\r\n          newScale.domain([domain[0], domain[1] - 1]);\r\n      }\r\n      return newScale;\r\n  };\r\n  AxisInternal.prototype.textFormatted = function (v) {\r\n      var internal = this, formatted = internal.tickFormat ? internal.tickFormat(v) : v;\r\n      return typeof formatted !== 'undefined' ? formatted : '';\r\n  };\r\n  AxisInternal.prototype.updateRange = function () {\r\n      var internal = this;\r\n      internal.range = internal.scale.rangeExtent\r\n          ? internal.scale.rangeExtent()\r\n          : internal.scaleExtent(internal.scale.range());\r\n      return internal.range;\r\n  };\r\n  AxisInternal.prototype.updateTickTextCharSize = function (tick) {\r\n      var internal = this;\r\n      if (internal.tickTextCharSize) {\r\n          return internal.tickTextCharSize;\r\n      }\r\n      var size = {\r\n          h: 11.5,\r\n          w: 5.5\r\n      };\r\n      tick\r\n          .select('text')\r\n          .text(function (d) {\r\n          return internal.textFormatted(d);\r\n      })\r\n          .each(function (d) {\r\n          var box = getBBox(this), text = internal.textFormatted(d), h = box.height, w = text ? box.width / text.length : undefined;\r\n          if (h && w) {\r\n              size.h = h;\r\n              size.w = w;\r\n          }\r\n      })\r\n          .text('');\r\n      internal.tickTextCharSize = size;\r\n      return size;\r\n  };\r\n  AxisInternal.prototype.isVertical = function () {\r\n      return this.orient === 'left' || this.orient === 'right';\r\n  };\r\n  AxisInternal.prototype.tspanData = function (d, i, scale) {\r\n      var internal = this;\r\n      var splitted = internal.params.tickMultiline\r\n          ? internal.splitTickText(d, scale)\r\n          : [].concat(internal.textFormatted(d));\r\n      if (internal.params.tickMultiline && internal.params.tickMultilineMax > 0) {\r\n          splitted = internal.ellipsify(splitted, internal.params.tickMultilineMax);\r\n      }\r\n      return splitted.map(function (s) {\r\n          return { index: i, splitted: s, length: splitted.length };\r\n      });\r\n  };\r\n  AxisInternal.prototype.splitTickText = function (d, scale) {\r\n      var internal = this, tickText = internal.textFormatted(d), maxWidth = internal.params.tickWidth, subtext, spaceIndex, textWidth, splitted = [];\r\n      if (Object.prototype.toString.call(tickText) === '[object Array]') {\r\n          return tickText;\r\n      }\r\n      if (!maxWidth || maxWidth <= 0) {\r\n          maxWidth = internal.isVertical()\r\n              ? 95\r\n              : internal.params.isCategory\r\n                  ? Math.ceil(scale(1) - scale(0)) - 12\r\n                  : 110;\r\n      }\r\n      function split(splitted, text) {\r\n          spaceIndex = undefined;\r\n          for (var i = 1; i < text.length; i++) {\r\n              if (text.charAt(i) === ' ') {\r\n                  spaceIndex = i;\r\n              }\r\n              subtext = text.substr(0, i + 1);\r\n              textWidth = internal.tickTextCharSize.w * subtext.length;\r\n              // if text width gets over tick width, split by space index or crrent index\r\n              if (maxWidth < textWidth) {\r\n                  return split(splitted.concat(text.substr(0, spaceIndex ? spaceIndex : i)), text.slice(spaceIndex ? spaceIndex + 1 : i));\r\n              }\r\n          }\r\n          return splitted.concat(text);\r\n      }\r\n      return split(splitted, tickText + '');\r\n  };\r\n  AxisInternal.prototype.ellipsify = function (splitted, max) {\r\n      if (splitted.length <= max) {\r\n          return splitted;\r\n      }\r\n      var ellipsified = splitted.slice(0, max);\r\n      var remaining = 3;\r\n      for (var i = max - 1; i >= 0; i--) {\r\n          var available = ellipsified[i].length;\r\n          ellipsified[i] = ellipsified[i]\r\n              .substr(0, available - remaining)\r\n              .padEnd(available, '.');\r\n          remaining -= available;\r\n          if (remaining <= 0) {\r\n              break;\r\n          }\r\n      }\r\n      return ellipsified;\r\n  };\r\n  AxisInternal.prototype.updateTickLength = function () {\r\n      var internal = this;\r\n      internal.tickLength =\r\n          Math.max(internal.innerTickSize, 0) + internal.tickPadding;\r\n  };\r\n  AxisInternal.prototype.lineY2 = function (d) {\r\n      var internal = this, tickPosition = internal.scale(d) + (internal.tickCentered ? 0 : internal.tickOffset);\r\n      return internal.range[0] < tickPosition && tickPosition < internal.range[1]\r\n          ? internal.innerTickSize\r\n          : 0;\r\n  };\r\n  AxisInternal.prototype.textY = function () {\r\n      var internal = this, rotate = internal.tickTextRotate;\r\n      return rotate\r\n          ? 11.5 - 2.5 * (rotate / 15) * (rotate > 0 ? 1 : -1)\r\n          : internal.tickLength;\r\n  };\r\n  AxisInternal.prototype.textTransform = function () {\r\n      var internal = this, rotate = internal.tickTextRotate;\r\n      return rotate ? 'rotate(' + rotate + ')' : '';\r\n  };\r\n  AxisInternal.prototype.textTextAnchor = function () {\r\n      var internal = this, rotate = internal.tickTextRotate;\r\n      return rotate ? (rotate > 0 ? 'start' : 'end') : 'middle';\r\n  };\r\n  AxisInternal.prototype.tspanDx = function () {\r\n      var internal = this, rotate = internal.tickTextRotate;\r\n      return rotate ? 8 * Math.sin(Math.PI * (rotate / 180)) : 0;\r\n  };\r\n  AxisInternal.prototype.tspanDy = function (d, i) {\r\n      var internal = this, dy = internal.tickTextCharSize.h;\r\n      if (i === 0) {\r\n          if (internal.isVertical()) {\r\n              dy = -((d.length - 1) * (internal.tickTextCharSize.h / 2) - 3);\r\n          }\r\n          else {\r\n              dy = '.71em';\r\n          }\r\n      }\r\n      return dy;\r\n  };\r\n  AxisInternal.prototype.generateAxis = function () {\r\n      var internal = this, d3 = internal.d3, params = internal.params;\r\n      function axis(g, transition) {\r\n          var self;\r\n          g.each(function () {\r\n              var g = (axis.g = d3.select(this));\r\n              var scale0 = this.__chart__ || internal.scale, scale1 = (this.__chart__ = internal.copyScale());\r\n              var ticksValues = internal.tickValues\r\n                  ? internal.tickValues\r\n                  : internal.generateTicks(scale1), ticks = g.selectAll('.tick').data(ticksValues, scale1), tickEnter = ticks\r\n                  .enter()\r\n                  .insert('g', '.domain')\r\n                  .attr('class', 'tick')\r\n                  .style('opacity', 1e-6), \r\n              // MEMO: No exit transition. The reason is this transition affects max tick width calculation because old tick will be included in the ticks.\r\n              tickExit = ticks.exit().remove(), tickUpdate = ticks.merge(tickEnter), tickTransform, tickX, tickY;\r\n              if (params.isCategory) {\r\n                  internal.tickOffset = Math.ceil((scale1(1) - scale1(0)) / 2);\r\n                  tickX = internal.tickCentered ? 0 : internal.tickOffset;\r\n                  tickY = internal.tickCentered ? internal.tickOffset : 0;\r\n              }\r\n              else {\r\n                  internal.tickOffset = tickX = 0;\r\n              }\r\n              internal.updateRange();\r\n              internal.updateTickLength();\r\n              internal.updateTickTextCharSize(g.select('.tick'));\r\n              var lineUpdate = tickUpdate\r\n                  .select('line')\r\n                  .merge(tickEnter.append('line')), textUpdate = tickUpdate.select('text').merge(tickEnter.append('text'));\r\n              var tspans = tickUpdate\r\n                  .selectAll('text')\r\n                  .selectAll('tspan')\r\n                  .data(function (d, i) {\r\n                  return internal.tspanData(d, i, scale1);\r\n              }), tspanEnter = tspans.enter().append('tspan'), tspanUpdate = tspanEnter.merge(tspans).text(function (d) {\r\n                  return d.splitted;\r\n              });\r\n              tspans.exit().remove();\r\n              var path = g.selectAll('.domain').data([0]), pathUpdate = path\r\n                  .enter()\r\n                  .append('path')\r\n                  .merge(path)\r\n                  .attr('class', 'domain');\r\n              // TODO: each attr should be one function and change its behavior by internal.orient, probably\r\n              switch (internal.orient) {\r\n                  case 'bottom': {\r\n                      tickTransform = internal.axisX;\r\n                      lineUpdate\r\n                          .attr('x1', tickX)\r\n                          .attr('x2', tickX)\r\n                          .attr('y2', function (d, i) {\r\n                          return internal.lineY2(d, i);\r\n                      });\r\n                      textUpdate\r\n                          .attr('x', 0)\r\n                          .attr('y', function (d, i) {\r\n                          return internal.textY(d, i);\r\n                      })\r\n                          .attr('transform', function (d, i) {\r\n                          return internal.textTransform(d, i);\r\n                      })\r\n                          .style('text-anchor', function (d, i) {\r\n                          return internal.textTextAnchor(d, i);\r\n                      });\r\n                      tspanUpdate\r\n                          .attr('x', 0)\r\n                          .attr('dy', function (d, i) {\r\n                          return internal.tspanDy(d, i);\r\n                      })\r\n                          .attr('dx', function (d, i) {\r\n                          return internal.tspanDx(d, i);\r\n                      });\r\n                      pathUpdate.attr('d', 'M' +\r\n                          internal.range[0] +\r\n                          ',' +\r\n                          internal.outerTickSize +\r\n                          'V0H' +\r\n                          internal.range[1] +\r\n                          'V' +\r\n                          internal.outerTickSize);\r\n                      break;\r\n                  }\r\n                  case 'top': {\r\n                      // TODO: rotated tick text\r\n                      tickTransform = internal.axisX;\r\n                      lineUpdate\r\n                          .attr('x1', tickX)\r\n                          .attr('x2', tickX)\r\n                          .attr('y2', function (d, i) {\r\n                          return -1 * internal.lineY2(d, i);\r\n                      });\r\n                      textUpdate\r\n                          .attr('x', 0)\r\n                          .attr('y', function (d, i) {\r\n                          return (-1 * internal.textY(d, i) -\r\n                              (params.isCategory ? 2 : internal.tickLength - 2));\r\n                      })\r\n                          .attr('transform', function (d, i) {\r\n                          return internal.textTransform(d, i);\r\n                      })\r\n                          .style('text-anchor', function (d, i) {\r\n                          return internal.textTextAnchor(d, i);\r\n                      });\r\n                      tspanUpdate\r\n                          .attr('x', 0)\r\n                          .attr('dy', function (d, i) {\r\n                          return internal.tspanDy(d, i);\r\n                      })\r\n                          .attr('dx', function (d, i) {\r\n                          return internal.tspanDx(d, i);\r\n                      });\r\n                      pathUpdate.attr('d', 'M' +\r\n                          internal.range[0] +\r\n                          ',' +\r\n                          -internal.outerTickSize +\r\n                          'V0H' +\r\n                          internal.range[1] +\r\n                          'V' +\r\n                          -internal.outerTickSize);\r\n                      break;\r\n                  }\r\n                  case 'left': {\r\n                      tickTransform = internal.axisY;\r\n                      lineUpdate\r\n                          .attr('x2', -internal.innerTickSize)\r\n                          .attr('y1', tickY)\r\n                          .attr('y2', tickY);\r\n                      textUpdate\r\n                          .attr('x', -internal.tickLength)\r\n                          .attr('y', internal.tickOffset)\r\n                          .style('text-anchor', 'end');\r\n                      tspanUpdate\r\n                          .attr('x', -internal.tickLength)\r\n                          .attr('dy', function (d, i) {\r\n                          return internal.tspanDy(d, i);\r\n                      });\r\n                      pathUpdate.attr('d', 'M' +\r\n                          -internal.outerTickSize +\r\n                          ',' +\r\n                          internal.range[0] +\r\n                          'H0V' +\r\n                          internal.range[1] +\r\n                          'H' +\r\n                          -internal.outerTickSize);\r\n                      break;\r\n                  }\r\n                  case 'right': {\r\n                      tickTransform = internal.axisY;\r\n                      lineUpdate\r\n                          .attr('x2', internal.innerTickSize)\r\n                          .attr('y1', tickY)\r\n                          .attr('y2', tickY);\r\n                      textUpdate\r\n                          .attr('x', internal.tickLength)\r\n                          .attr('y', internal.tickOffset)\r\n                          .style('text-anchor', 'start');\r\n                      tspanUpdate.attr('x', internal.tickLength).attr('dy', function (d, i) {\r\n                          return internal.tspanDy(d, i);\r\n                      });\r\n                      pathUpdate.attr('d', 'M' +\r\n                          internal.outerTickSize +\r\n                          ',' +\r\n                          internal.range[0] +\r\n                          'H0V' +\r\n                          internal.range[1] +\r\n                          'H' +\r\n                          internal.outerTickSize);\r\n                      break;\r\n                  }\r\n              }\r\n              if (scale1.rangeBand) {\r\n                  var x = scale1, dx = x.rangeBand() / 2;\r\n                  scale0 = scale1 = function (d) {\r\n                      return x(d) + dx;\r\n                  };\r\n              }\r\n              else if (scale0.rangeBand) {\r\n                  scale0 = scale1;\r\n              }\r\n              else {\r\n                  tickExit.call(tickTransform, scale1, internal.tickOffset);\r\n              }\r\n              tickEnter.call(tickTransform, scale0, internal.tickOffset);\r\n              self = (transition ? tickUpdate.transition(transition) : tickUpdate)\r\n                  .style('opacity', 1)\r\n                  .call(tickTransform, scale1, internal.tickOffset);\r\n          });\r\n          return self;\r\n      }\r\n      axis.scale = function (x) {\r\n          if (!arguments.length) {\r\n              return internal.scale;\r\n          }\r\n          internal.scale = x;\r\n          return axis;\r\n      };\r\n      axis.orient = function (x) {\r\n          if (!arguments.length) {\r\n              return internal.orient;\r\n          }\r\n          internal.orient =\r\n              x in { top: 1, right: 1, bottom: 1, left: 1 } ? x + '' : 'bottom';\r\n          return axis;\r\n      };\r\n      axis.tickFormat = function (format) {\r\n          if (!arguments.length) {\r\n              return internal.tickFormat;\r\n          }\r\n          internal.tickFormat = format;\r\n          return axis;\r\n      };\r\n      axis.tickCentered = function (isCentered) {\r\n          if (!arguments.length) {\r\n              return internal.tickCentered;\r\n          }\r\n          internal.tickCentered = isCentered;\r\n          return axis;\r\n      };\r\n      axis.tickOffset = function () {\r\n          return internal.tickOffset;\r\n      };\r\n      axis.tickInterval = function () {\r\n          var interval, length;\r\n          if (params.isCategory) {\r\n              interval = internal.tickOffset * 2;\r\n          }\r\n          else {\r\n              length =\r\n                  axis.g\r\n                      .select('path.domain')\r\n                      .node()\r\n                      .getTotalLength() -\r\n                      internal.outerTickSize * 2;\r\n              interval = length / axis.g.selectAll('line').size();\r\n          }\r\n          return interval === Infinity ? 0 : interval;\r\n      };\r\n      axis.ticks = function () {\r\n          if (!arguments.length) {\r\n              return internal.tickArguments;\r\n          }\r\n          internal.tickArguments = arguments;\r\n          return axis;\r\n      };\r\n      axis.tickCulling = function (culling) {\r\n          if (!arguments.length) {\r\n              return internal.tickCulling;\r\n          }\r\n          internal.tickCulling = culling;\r\n          return axis;\r\n      };\r\n      axis.tickValues = function (x) {\r\n          if (typeof x === 'function') {\r\n              internal.tickValues = function () {\r\n                  return x(internal.scale.domain());\r\n              };\r\n          }\r\n          else {\r\n              if (!arguments.length) {\r\n                  return internal.tickValues;\r\n              }\r\n              internal.tickValues = x;\r\n          }\r\n          return axis;\r\n      };\r\n      return axis;\r\n  };\n\n  var CLASS = {\r\n      target: 'c3-target',\r\n      chart: 'c3-chart',\r\n      chartLine: 'c3-chart-line',\r\n      chartLines: 'c3-chart-lines',\r\n      chartBar: 'c3-chart-bar',\r\n      chartBars: 'c3-chart-bars',\r\n      chartText: 'c3-chart-text',\r\n      chartTexts: 'c3-chart-texts',\r\n      chartArc: 'c3-chart-arc',\r\n      chartArcs: 'c3-chart-arcs',\r\n      chartArcsTitle: 'c3-chart-arcs-title',\r\n      chartArcsBackground: 'c3-chart-arcs-background',\r\n      chartArcsGaugeUnit: 'c3-chart-arcs-gauge-unit',\r\n      chartArcsGaugeMax: 'c3-chart-arcs-gauge-max',\r\n      chartArcsGaugeMin: 'c3-chart-arcs-gauge-min',\r\n      selectedCircle: 'c3-selected-circle',\r\n      selectedCircles: 'c3-selected-circles',\r\n      eventRect: 'c3-event-rect',\r\n      eventRects: 'c3-event-rects',\r\n      eventRectsSingle: 'c3-event-rects-single',\r\n      eventRectsMultiple: 'c3-event-rects-multiple',\r\n      zoomRect: 'c3-zoom-rect',\r\n      brush: 'c3-brush',\r\n      dragZoom: 'c3-drag-zoom',\r\n      focused: 'c3-focused',\r\n      defocused: 'c3-defocused',\r\n      region: 'c3-region',\r\n      regions: 'c3-regions',\r\n      title: 'c3-title',\r\n      tooltipContainer: 'c3-tooltip-container',\r\n      tooltip: 'c3-tooltip',\r\n      tooltipName: 'c3-tooltip-name',\r\n      shape: 'c3-shape',\r\n      shapes: 'c3-shapes',\r\n      line: 'c3-line',\r\n      lines: 'c3-lines',\r\n      bar: 'c3-bar',\r\n      bars: 'c3-bars',\r\n      circle: 'c3-circle',\r\n      circles: 'c3-circles',\r\n      arc: 'c3-arc',\r\n      arcLabelLine: 'c3-arc-label-line',\r\n      arcs: 'c3-arcs',\r\n      area: 'c3-area',\r\n      areas: 'c3-areas',\r\n      empty: 'c3-empty',\r\n      text: 'c3-text',\r\n      texts: 'c3-texts',\r\n      gaugeValue: 'c3-gauge-value',\r\n      grid: 'c3-grid',\r\n      gridLines: 'c3-grid-lines',\r\n      xgrid: 'c3-xgrid',\r\n      xgrids: 'c3-xgrids',\r\n      xgridLine: 'c3-xgrid-line',\r\n      xgridLines: 'c3-xgrid-lines',\r\n      xgridFocus: 'c3-xgrid-focus',\r\n      ygrid: 'c3-ygrid',\r\n      ygrids: 'c3-ygrids',\r\n      ygridLine: 'c3-ygrid-line',\r\n      ygridLines: 'c3-ygrid-lines',\r\n      colorScale: 'c3-colorscale',\r\n      stanfordElements: 'c3-stanford-elements',\r\n      stanfordLine: 'c3-stanford-line',\r\n      stanfordLines: 'c3-stanford-lines',\r\n      stanfordRegion: 'c3-stanford-region',\r\n      stanfordRegions: 'c3-stanford-regions',\r\n      stanfordText: 'c3-stanford-text',\r\n      stanfordTexts: 'c3-stanford-texts',\r\n      axis: 'c3-axis',\r\n      axisX: 'c3-axis-x',\r\n      axisXLabel: 'c3-axis-x-label',\r\n      axisY: 'c3-axis-y',\r\n      axisYLabel: 'c3-axis-y-label',\r\n      axisY2: 'c3-axis-y2',\r\n      axisY2Label: 'c3-axis-y2-label',\r\n      legendBackground: 'c3-legend-background',\r\n      legendItem: 'c3-legend-item',\r\n      legendItemEvent: 'c3-legend-item-event',\r\n      legendItemTile: 'c3-legend-item-tile',\r\n      legendItemHidden: 'c3-legend-item-hidden',\r\n      legendItemFocused: 'c3-legend-item-focused',\r\n      dragarea: 'c3-dragarea',\r\n      EXPANDED: '_expanded_',\r\n      SELECTED: '_selected_',\r\n      INCLUDED: '_included_'\r\n  };\n\n  var AxisClass = /** @class */ (function () {\r\n      function AxisClass(owner) {\r\n          this.owner = owner;\r\n          this.d3 = owner.d3;\r\n          this.internal = AxisInternal;\r\n      }\r\n      return AxisClass;\r\n  }());\r\n  var Axis = AxisClass;\r\n  Axis.prototype.init = function init() {\r\n      var $$ = this.owner, config = $$.config, main = $$.main;\r\n      $$.axes.x = main\r\n          .append('g')\r\n          .attr('class', CLASS.axis + ' ' + CLASS.axisX)\r\n          .attr('clip-path', config.axis_x_inner ? '' : $$.clipPathForXAxis)\r\n          .attr('transform', $$.getTranslate('x'))\r\n          .style('visibility', config.axis_x_show ? 'visible' : 'hidden');\r\n      $$.axes.x\r\n          .append('text')\r\n          .attr('class', CLASS.axisXLabel)\r\n          .attr('transform', config.axis_rotated ? 'rotate(-90)' : '')\r\n          .style('text-anchor', this.textAnchorForXAxisLabel.bind(this));\r\n      $$.axes.y = main\r\n          .append('g')\r\n          .attr('class', CLASS.axis + ' ' + CLASS.axisY)\r\n          .attr('clip-path', config.axis_y_inner ? '' : $$.clipPathForYAxis)\r\n          .attr('transform', $$.getTranslate('y'))\r\n          .style('visibility', config.axis_y_show ? 'visible' : 'hidden');\r\n      $$.axes.y\r\n          .append('text')\r\n          .attr('class', CLASS.axisYLabel)\r\n          .attr('transform', config.axis_rotated ? '' : 'rotate(-90)')\r\n          .style('text-anchor', this.textAnchorForYAxisLabel.bind(this));\r\n      $$.axes.y2 = main\r\n          .append('g')\r\n          .attr('class', CLASS.axis + ' ' + CLASS.axisY2)\r\n          // clip-path?\r\n          .attr('transform', $$.getTranslate('y2'))\r\n          .style('visibility', config.axis_y2_show ? 'visible' : 'hidden');\r\n      $$.axes.y2\r\n          .append('text')\r\n          .attr('class', CLASS.axisY2Label)\r\n          .attr('transform', config.axis_rotated ? '' : 'rotate(-90)')\r\n          .style('text-anchor', this.textAnchorForY2AxisLabel.bind(this));\r\n  };\r\n  Axis.prototype.getXAxis = function getXAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\r\n      var $$ = this.owner, config = $$.config, axisParams = {\r\n          isCategory: $$.isCategorized(),\r\n          withOuterTick: withOuterTick,\r\n          tickMultiline: config.axis_x_tick_multiline,\r\n          tickMultilineMax: config.axis_x_tick_multiline\r\n              ? Number(config.axis_x_tick_multilineMax)\r\n              : 0,\r\n          tickWidth: config.axis_x_tick_width,\r\n          tickTextRotate: withoutRotateTickText ? 0 : config.axis_x_tick_rotate,\r\n          withoutTransition: withoutTransition\r\n      }, axis = new this.internal(this, axisParams).axis.scale(scale).orient(orient);\r\n      if ($$.isTimeSeries() && tickValues && typeof tickValues !== 'function') {\r\n          tickValues = tickValues.map(function (v) {\r\n              return $$.parseDate(v);\r\n          });\r\n      }\r\n      // Set tick\r\n      axis.tickFormat(tickFormat).tickValues(tickValues);\r\n      if ($$.isCategorized()) {\r\n          axis.tickCentered(config.axis_x_tick_centered);\r\n          if (isEmpty(config.axis_x_tick_culling)) {\r\n              config.axis_x_tick_culling = false;\r\n          }\r\n      }\r\n      return axis;\r\n  };\r\n  Axis.prototype.updateXAxisTickValues = function updateXAxisTickValues(targets, axis) {\r\n      var $$ = this.owner, config = $$.config, tickValues;\r\n      if (config.axis_x_tick_fit || config.axis_x_tick_count) {\r\n          tickValues = this.generateTickValues($$.mapTargetsToUniqueXs(targets), config.axis_x_tick_count, $$.isTimeSeries());\r\n      }\r\n      if (axis) {\r\n          axis.tickValues(tickValues);\r\n      }\r\n      else {\r\n          $$.xAxis.tickValues(tickValues);\r\n          $$.subXAxis.tickValues(tickValues);\r\n      }\r\n      return tickValues;\r\n  };\r\n  Axis.prototype.getYAxis = function getYAxis(axisId, scale, orient, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\r\n      var $$ = this.owner;\r\n      var config = $$.config;\r\n      var tickFormat = config[\"axis_\" + axisId + \"_tick_format\"];\r\n      if (!tickFormat && $$.isAxisNormalized(axisId)) {\r\n          tickFormat = function (x) { return x + \"%\"; };\r\n      }\r\n      var axis = new this.internal(this, {\r\n          withOuterTick: withOuterTick,\r\n          withoutTransition: withoutTransition,\r\n          tickTextRotate: withoutRotateTickText ? 0 : config.axis_y_tick_rotate\r\n      }).axis\r\n          .scale(scale)\r\n          .orient(orient);\r\n      if (tickFormat) {\r\n          axis.tickFormat(tickFormat);\r\n      }\r\n      if ($$.isTimeSeriesY()) {\r\n          axis.ticks(config.axis_y_tick_time_type, config.axis_y_tick_time_interval);\r\n      }\r\n      else {\r\n          axis.tickValues(tickValues);\r\n      }\r\n      return axis;\r\n  };\r\n  Axis.prototype.getId = function getId(id) {\r\n      var config = this.owner.config;\r\n      return id in config.data_axes ? config.data_axes[id] : 'y';\r\n  };\r\n  Axis.prototype.getXAxisTickFormat = function getXAxisTickFormat() {\r\n      // #2251 previously set any negative values to a whole number,\r\n      // however both should be truncated according to the users format specification\r\n      var $$ = this.owner, config = $$.config;\r\n      var format = $$.isTimeSeries()\r\n          ? $$.defaultAxisTimeFormat\r\n          : $$.isCategorized()\r\n              ? $$.categoryName\r\n              : function (v) {\r\n                  return v;\r\n              };\r\n      if (config.axis_x_tick_format) {\r\n          if (isFunction(config.axis_x_tick_format)) {\r\n              format = config.axis_x_tick_format;\r\n          }\r\n          else if ($$.isTimeSeries()) {\r\n              format = function (date) {\r\n                  return date ? $$.axisTimeFormat(config.axis_x_tick_format)(date) : '';\r\n              };\r\n          }\r\n      }\r\n      return isFunction(format)\r\n          ? function (v) {\r\n              return format.call($$, v);\r\n          }\r\n          : format;\r\n  };\r\n  Axis.prototype.getTickValues = function getTickValues(tickValues, axis) {\r\n      return tickValues ? tickValues : axis ? axis.tickValues() : undefined;\r\n  };\r\n  Axis.prototype.getXAxisTickValues = function getXAxisTickValues() {\r\n      return this.getTickValues(this.owner.config.axis_x_tick_values, this.owner.xAxis);\r\n  };\r\n  Axis.prototype.getYAxisTickValues = function getYAxisTickValues() {\r\n      return this.getTickValues(this.owner.config.axis_y_tick_values, this.owner.yAxis);\r\n  };\r\n  Axis.prototype.getY2AxisTickValues = function getY2AxisTickValues() {\r\n      return this.getTickValues(this.owner.config.axis_y2_tick_values, this.owner.y2Axis);\r\n  };\r\n  Axis.prototype.getLabelOptionByAxisId = function getLabelOptionByAxisId(axisId) {\r\n      var $$ = this.owner, config = $$.config, option;\r\n      if (axisId === 'y') {\r\n          option = config.axis_y_label;\r\n      }\r\n      else if (axisId === 'y2') {\r\n          option = config.axis_y2_label;\r\n      }\r\n      else if (axisId === 'x') {\r\n          option = config.axis_x_label;\r\n      }\r\n      return option;\r\n  };\r\n  Axis.prototype.getLabelText = function getLabelText(axisId) {\r\n      var option = this.getLabelOptionByAxisId(axisId);\r\n      return isString(option) ? option : option ? option.text : null;\r\n  };\r\n  Axis.prototype.setLabelText = function setLabelText(axisId, text) {\r\n      var $$ = this.owner, config = $$.config, option = this.getLabelOptionByAxisId(axisId);\r\n      if (isString(option)) {\r\n          if (axisId === 'y') {\r\n              config.axis_y_label = text;\r\n          }\r\n          else if (axisId === 'y2') {\r\n              config.axis_y2_label = text;\r\n          }\r\n          else if (axisId === 'x') {\r\n              config.axis_x_label = text;\r\n          }\r\n      }\r\n      else if (option) {\r\n          option.text = text;\r\n      }\r\n  };\r\n  Axis.prototype.getLabelPosition = function getLabelPosition(axisId, defaultPosition) {\r\n      var option = this.getLabelOptionByAxisId(axisId), position = option && typeof option === 'object' && option.position\r\n          ? option.position\r\n          : defaultPosition;\r\n      return {\r\n          isInner: position.indexOf('inner') >= 0,\r\n          isOuter: position.indexOf('outer') >= 0,\r\n          isLeft: position.indexOf('left') >= 0,\r\n          isCenter: position.indexOf('center') >= 0,\r\n          isRight: position.indexOf('right') >= 0,\r\n          isTop: position.indexOf('top') >= 0,\r\n          isMiddle: position.indexOf('middle') >= 0,\r\n          isBottom: position.indexOf('bottom') >= 0\r\n      };\r\n  };\r\n  Axis.prototype.getXAxisLabelPosition = function getXAxisLabelPosition() {\r\n      return this.getLabelPosition('x', this.owner.config.axis_rotated ? 'inner-top' : 'inner-right');\r\n  };\r\n  Axis.prototype.getYAxisLabelPosition = function getYAxisLabelPosition() {\r\n      return this.getLabelPosition('y', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\r\n  };\r\n  Axis.prototype.getY2AxisLabelPosition = function getY2AxisLabelPosition() {\r\n      return this.getLabelPosition('y2', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\r\n  };\r\n  Axis.prototype.getLabelPositionById = function getLabelPositionById(id) {\r\n      return id === 'y2'\r\n          ? this.getY2AxisLabelPosition()\r\n          : id === 'y'\r\n              ? this.getYAxisLabelPosition()\r\n              : this.getXAxisLabelPosition();\r\n  };\r\n  Axis.prototype.textForXAxisLabel = function textForXAxisLabel() {\r\n      return this.getLabelText('x');\r\n  };\r\n  Axis.prototype.textForYAxisLabel = function textForYAxisLabel() {\r\n      return this.getLabelText('y');\r\n  };\r\n  Axis.prototype.textForY2AxisLabel = function textForY2AxisLabel() {\r\n      return this.getLabelText('y2');\r\n  };\r\n  Axis.prototype.xForAxisLabel = function xForAxisLabel(forHorizontal, position) {\r\n      var $$ = this.owner;\r\n      if (forHorizontal) {\r\n          return position.isLeft ? 0 : position.isCenter ? $$.width / 2 : $$.width;\r\n      }\r\n      else {\r\n          return position.isBottom\r\n              ? -$$.height\r\n              : position.isMiddle\r\n                  ? -$$.height / 2\r\n                  : 0;\r\n      }\r\n  };\r\n  Axis.prototype.dxForAxisLabel = function dxForAxisLabel(forHorizontal, position) {\r\n      if (forHorizontal) {\r\n          return position.isLeft ? '0.5em' : position.isRight ? '-0.5em' : '0';\r\n      }\r\n      else {\r\n          return position.isTop ? '-0.5em' : position.isBottom ? '0.5em' : '0';\r\n      }\r\n  };\r\n  Axis.prototype.textAnchorForAxisLabel = function textAnchorForAxisLabel(forHorizontal, position) {\r\n      if (forHorizontal) {\r\n          return position.isLeft ? 'start' : position.isCenter ? 'middle' : 'end';\r\n      }\r\n      else {\r\n          return position.isBottom ? 'start' : position.isMiddle ? 'middle' : 'end';\r\n      }\r\n  };\r\n  Axis.prototype.xForXAxisLabel = function xForXAxisLabel() {\r\n      return this.xForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\r\n  };\r\n  Axis.prototype.xForYAxisLabel = function xForYAxisLabel() {\r\n      return this.xForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\r\n  };\r\n  Axis.prototype.xForY2AxisLabel = function xForY2AxisLabel() {\r\n      return this.xForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\r\n  };\r\n  Axis.prototype.dxForXAxisLabel = function dxForXAxisLabel() {\r\n      return this.dxForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\r\n  };\r\n  Axis.prototype.dxForYAxisLabel = function dxForYAxisLabel() {\r\n      return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\r\n  };\r\n  Axis.prototype.dxForY2AxisLabel = function dxForY2AxisLabel() {\r\n      return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\r\n  };\r\n  Axis.prototype.dyForXAxisLabel = function dyForXAxisLabel() {\r\n      var $$ = this.owner, config = $$.config, position = this.getXAxisLabelPosition();\r\n      if (config.axis_rotated) {\r\n          return position.isInner\r\n              ? '1.2em'\r\n              : -25 - ($$.config.axis_x_inner ? 0 : this.getMaxTickWidth('x'));\r\n      }\r\n      else {\r\n          return position.isInner ? '-0.5em' : $$.getHorizontalAxisHeight('x') - 10;\r\n      }\r\n  };\r\n  Axis.prototype.dyForYAxisLabel = function dyForYAxisLabel() {\r\n      var $$ = this.owner, position = this.getYAxisLabelPosition();\r\n      if ($$.config.axis_rotated) {\r\n          return position.isInner ? '-0.5em' : '3em';\r\n      }\r\n      else {\r\n          return position.isInner\r\n              ? '1.2em'\r\n              : -10 - ($$.config.axis_y_inner ? 0 : this.getMaxTickWidth('y') + 10);\r\n      }\r\n  };\r\n  Axis.prototype.dyForY2AxisLabel = function dyForY2AxisLabel() {\r\n      var $$ = this.owner, position = this.getY2AxisLabelPosition();\r\n      if ($$.config.axis_rotated) {\r\n          return position.isInner ? '1.2em' : '-2.2em';\r\n      }\r\n      else {\r\n          return position.isInner\r\n              ? '-0.5em'\r\n              : 15 + ($$.config.axis_y2_inner ? 0 : this.getMaxTickWidth('y2') + 15);\r\n      }\r\n  };\r\n  Axis.prototype.textAnchorForXAxisLabel = function textAnchorForXAxisLabel() {\r\n      var $$ = this.owner;\r\n      return this.textAnchorForAxisLabel(!$$.config.axis_rotated, this.getXAxisLabelPosition());\r\n  };\r\n  Axis.prototype.textAnchorForYAxisLabel = function textAnchorForYAxisLabel() {\r\n      var $$ = this.owner;\r\n      return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getYAxisLabelPosition());\r\n  };\r\n  Axis.prototype.textAnchorForY2AxisLabel = function textAnchorForY2AxisLabel() {\r\n      var $$ = this.owner;\r\n      return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getY2AxisLabelPosition());\r\n  };\r\n  Axis.prototype.getMaxTickWidth = function getMaxTickWidth(id, withoutRecompute) {\r\n      var $$ = this.owner, maxWidth = 0, targetsToShow, scale, axis, dummy, svg;\r\n      if (withoutRecompute && $$.currentMaxTickWidths[id]) {\r\n          return $$.currentMaxTickWidths[id];\r\n      }\r\n      if ($$.svg) {\r\n          targetsToShow = $$.filterTargetsToShow($$.data.targets);\r\n          if (id === 'y') {\r\n              scale = $$.y.copy().domain($$.getYDomain(targetsToShow, 'y'));\r\n              axis = this.getYAxis(id, scale, $$.yOrient, $$.yAxisTickValues, false, true, true);\r\n          }\r\n          else if (id === 'y2') {\r\n              scale = $$.y2.copy().domain($$.getYDomain(targetsToShow, 'y2'));\r\n              axis = this.getYAxis(id, scale, $$.y2Orient, $$.y2AxisTickValues, false, true, true);\r\n          }\r\n          else {\r\n              scale = $$.x.copy().domain($$.getXDomain(targetsToShow));\r\n              axis = this.getXAxis(scale, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, false, true, true);\r\n              this.updateXAxisTickValues(targetsToShow, axis);\r\n          }\r\n          dummy = $$.d3\r\n              .select('body')\r\n              .append('div')\r\n              .classed('c3', true);\r\n          (svg = dummy\r\n              .append('svg')\r\n              .style('visibility', 'hidden')\r\n              .style('position', 'fixed')\r\n              .style('top', 0)\r\n              .style('left', 0)),\r\n              svg\r\n                  .append('g')\r\n                  .call(axis)\r\n                  .each(function () {\r\n                  $$.d3\r\n                      .select(this)\r\n                      .selectAll('text')\r\n                      .each(function () {\r\n                      var box = getBBox(this);\r\n                      if (maxWidth < box.width) {\r\n                          maxWidth = box.width;\r\n                      }\r\n                  });\r\n                  dummy.remove();\r\n              });\r\n      }\r\n      $$.currentMaxTickWidths[id] =\r\n          maxWidth <= 0 ? $$.currentMaxTickWidths[id] : maxWidth;\r\n      return $$.currentMaxTickWidths[id];\r\n  };\r\n  Axis.prototype.updateLabels = function updateLabels(withTransition) {\r\n      var $$ = this.owner;\r\n      var axisXLabel = $$.main.select('.' + CLASS.axisX + ' .' + CLASS.axisXLabel), axisYLabel = $$.main.select('.' + CLASS.axisY + ' .' + CLASS.axisYLabel), axisY2Label = $$.main.select('.' + CLASS.axisY2 + ' .' + CLASS.axisY2Label);\r\n      (withTransition ? axisXLabel.transition() : axisXLabel)\r\n          .attr('x', this.xForXAxisLabel.bind(this))\r\n          .attr('dx', this.dxForXAxisLabel.bind(this))\r\n          .attr('dy', this.dyForXAxisLabel.bind(this))\r\n          .text(this.textForXAxisLabel.bind(this));\r\n      (withTransition ? axisYLabel.transition() : axisYLabel)\r\n          .attr('x', this.xForYAxisLabel.bind(this))\r\n          .attr('dx', this.dxForYAxisLabel.bind(this))\r\n          .attr('dy', this.dyForYAxisLabel.bind(this))\r\n          .text(this.textForYAxisLabel.bind(this));\r\n      (withTransition ? axisY2Label.transition() : axisY2Label)\r\n          .attr('x', this.xForY2AxisLabel.bind(this))\r\n          .attr('dx', this.dxForY2AxisLabel.bind(this))\r\n          .attr('dy', this.dyForY2AxisLabel.bind(this))\r\n          .text(this.textForY2AxisLabel.bind(this));\r\n  };\r\n  Axis.prototype.getPadding = function getPadding(padding, key, defaultValue, domainLength) {\r\n      var p = typeof padding === 'number' ? padding : padding[key];\r\n      if (!isValue(p)) {\r\n          return defaultValue;\r\n      }\r\n      if (padding.unit === 'ratio') {\r\n          return padding[key] * domainLength;\r\n      }\r\n      // assume padding is pixels if unit is not specified\r\n      return this.convertPixelsToAxisPadding(p, domainLength);\r\n  };\r\n  Axis.prototype.convertPixelsToAxisPadding = function convertPixelsToAxisPadding(pixels, domainLength) {\r\n      var $$ = this.owner, length = $$.config.axis_rotated ? $$.width : $$.height;\r\n      return domainLength * (pixels / length);\r\n  };\r\n  Axis.prototype.generateTickValues = function generateTickValues(values, tickCount, forTimeSeries) {\r\n      var tickValues = values, targetCount, start, end, count, interval, i, tickValue;\r\n      if (tickCount) {\r\n          targetCount = isFunction(tickCount) ? tickCount() : tickCount;\r\n          // compute ticks according to tickCount\r\n          if (targetCount === 1) {\r\n              tickValues = [values[0]];\r\n          }\r\n          else if (targetCount === 2) {\r\n              tickValues = [values[0], values[values.length - 1]];\r\n          }\r\n          else if (targetCount > 2) {\r\n              count = targetCount - 2;\r\n              start = values[0];\r\n              end = values[values.length - 1];\r\n              interval = (end - start) / (count + 1);\r\n              // re-construct unique values\r\n              tickValues = [start];\r\n              for (i = 0; i < count; i++) {\r\n                  tickValue = +start + interval * (i + 1);\r\n                  tickValues.push(forTimeSeries ? new Date(tickValue) : tickValue);\r\n              }\r\n              tickValues.push(end);\r\n          }\r\n      }\r\n      if (!forTimeSeries) {\r\n          tickValues = tickValues.sort(function (a, b) {\r\n              return a - b;\r\n          });\r\n      }\r\n      return tickValues;\r\n  };\r\n  Axis.prototype.generateTransitions = function generateTransitions(duration) {\r\n      var $$ = this.owner, axes = $$.axes;\r\n      return {\r\n          axisX: duration ? axes.x.transition().duration(duration) : axes.x,\r\n          axisY: duration ? axes.y.transition().duration(duration) : axes.y,\r\n          axisY2: duration ? axes.y2.transition().duration(duration) : axes.y2,\r\n          axisSubX: duration ? axes.subx.transition().duration(duration) : axes.subx\r\n      };\r\n  };\r\n  Axis.prototype.redraw = function redraw(duration, isHidden) {\r\n      var $$ = this.owner, transition = duration ? $$.d3.transition().duration(duration) : null;\r\n      $$.axes.x.style('opacity', isHidden ? 0 : 1).call($$.xAxis, transition);\r\n      $$.axes.y.style('opacity', isHidden ? 0 : 1).call($$.yAxis, transition);\r\n      $$.axes.y2.style('opacity', isHidden ? 0 : 1).call($$.y2Axis, transition);\r\n      $$.axes.subx.style('opacity', isHidden ? 0 : 1).call($$.subXAxis, transition);\r\n  };\n\n  var c3 = {\r\n      version: '0.7.20',\r\n      chart: {\r\n          fn: Chart.prototype,\r\n          internal: {\r\n              fn: ChartInternal.prototype,\r\n              axis: {\r\n                  fn: AxisClass.prototype,\r\n                  internal: {\r\n                      fn: AxisInternal.prototype\r\n                  }\r\n              }\r\n          }\r\n      },\r\n      generate: function (config) {\r\n          return new Chart(config);\r\n      }\r\n  };\r\n  ChartInternal.prototype.beforeInit = function () {\r\n      // can do something\r\n  };\r\n  ChartInternal.prototype.afterInit = function () {\r\n      // can do something\r\n  };\r\n  ChartInternal.prototype.init = function () {\r\n      var $$ = this, config = $$.config;\r\n      $$.initParams();\r\n      if (config.data_url) {\r\n          $$.convertUrlToData(config.data_url, config.data_mimeType, config.data_headers, config.data_keys, $$.initWithData);\r\n      }\r\n      else if (config.data_json) {\r\n          $$.initWithData($$.convertJsonToData(config.data_json, config.data_keys));\r\n      }\r\n      else if (config.data_rows) {\r\n          $$.initWithData($$.convertRowsToData(config.data_rows));\r\n      }\r\n      else if (config.data_columns) {\r\n          $$.initWithData($$.convertColumnsToData(config.data_columns));\r\n      }\r\n      else {\r\n          throw Error('url or json or rows or columns is required.');\r\n      }\r\n  };\r\n  ChartInternal.prototype.initParams = function () {\r\n      var $$ = this, d3 = $$.d3, config = $$.config;\r\n      // MEMO: clipId needs to be unique because it conflicts when multiple charts exist\r\n      $$.clipId = 'c3-' + new Date().valueOf() + '-clip';\r\n      $$.clipIdForXAxis = $$.clipId + '-xaxis';\r\n      $$.clipIdForYAxis = $$.clipId + '-yaxis';\r\n      $$.clipIdForGrid = $$.clipId + '-grid';\r\n      $$.clipIdForSubchart = $$.clipId + '-subchart';\r\n      $$.clipPath = $$.getClipPath($$.clipId);\r\n      $$.clipPathForXAxis = $$.getClipPath($$.clipIdForXAxis);\r\n      $$.clipPathForYAxis = $$.getClipPath($$.clipIdForYAxis);\r\n      $$.clipPathForGrid = $$.getClipPath($$.clipIdForGrid);\r\n      $$.clipPathForSubchart = $$.getClipPath($$.clipIdForSubchart);\r\n      $$.dragStart = null;\r\n      $$.dragging = false;\r\n      $$.flowing = false;\r\n      $$.cancelClick = false;\r\n      $$.mouseover = undefined;\r\n      $$.transiting = false;\r\n      $$.color = $$.generateColor();\r\n      $$.levelColor = $$.generateLevelColor();\r\n      $$.dataTimeParse = (config.data_xLocaltime ? d3.timeParse : d3.utcParse)($$.config.data_xFormat);\r\n      $$.axisTimeFormat = config.axis_x_localtime ? d3.timeFormat : d3.utcFormat;\r\n      $$.defaultAxisTimeFormat = function (date) {\r\n          if (date.getMilliseconds()) {\r\n              return d3.timeFormat('.%L')(date);\r\n          }\r\n          if (date.getSeconds()) {\r\n              return d3.timeFormat(':%S')(date);\r\n          }\r\n          if (date.getMinutes()) {\r\n              return d3.timeFormat('%I:%M')(date);\r\n          }\r\n          if (date.getHours()) {\r\n              return d3.timeFormat('%I %p')(date);\r\n          }\r\n          if (date.getDay() && date.getDate() !== 1) {\r\n              return d3.timeFormat('%-m/%-d')(date);\r\n          }\r\n          if (date.getDate() !== 1) {\r\n              return d3.timeFormat('%-m/%-d')(date);\r\n          }\r\n          if (date.getMonth()) {\r\n              return d3.timeFormat('%-m/%-d')(date);\r\n          }\r\n          return d3.timeFormat('%Y/%-m/%-d')(date);\r\n      };\r\n      $$.hiddenTargetIds = [];\r\n      $$.hiddenLegendIds = [];\r\n      $$.focusedTargetIds = [];\r\n      $$.defocusedTargetIds = [];\r\n      $$.xOrient = config.axis_rotated\r\n          ? config.axis_x_inner\r\n              ? 'right'\r\n              : 'left'\r\n          : config.axis_x_inner\r\n              ? 'top'\r\n              : 'bottom';\r\n      $$.yOrient = config.axis_rotated\r\n          ? config.axis_y_inner\r\n              ? 'top'\r\n              : 'bottom'\r\n          : config.axis_y_inner\r\n              ? 'right'\r\n              : 'left';\r\n      $$.y2Orient = config.axis_rotated\r\n          ? config.axis_y2_inner\r\n              ? 'bottom'\r\n              : 'top'\r\n          : config.axis_y2_inner\r\n              ? 'left'\r\n              : 'right';\r\n      $$.subXOrient = config.axis_rotated ? 'left' : 'bottom';\r\n      $$.isLegendRight = config.legend_position === 'right';\r\n      $$.isLegendInset = config.legend_position === 'inset';\r\n      $$.isLegendTop =\r\n          config.legend_inset_anchor === 'top-left' ||\r\n              config.legend_inset_anchor === 'top-right';\r\n      $$.isLegendLeft =\r\n          config.legend_inset_anchor === 'top-left' ||\r\n              config.legend_inset_anchor === 'bottom-left';\r\n      $$.legendStep = 0;\r\n      $$.legendItemWidth = 0;\r\n      $$.legendItemHeight = 0;\r\n      $$.currentMaxTickWidths = {\r\n          x: 0,\r\n          y: 0,\r\n          y2: 0\r\n      };\r\n      $$.rotated_padding_left = 30;\r\n      $$.rotated_padding_right = config.axis_rotated && !config.axis_x_show ? 0 : 30;\r\n      $$.rotated_padding_top = 5;\r\n      $$.withoutFadeIn = {};\r\n      $$.intervalForObserveInserted = undefined;\r\n      $$.axes.subx = d3.selectAll([]); // needs when excluding subchart.js\r\n  };\r\n  ChartInternal.prototype.initChartElements = function () {\r\n      if (this.initBar) {\r\n          this.initBar();\r\n      }\r\n      if (this.initLine) {\r\n          this.initLine();\r\n      }\r\n      if (this.initArc) {\r\n          this.initArc();\r\n      }\r\n      if (this.initGauge) {\r\n          this.initGauge();\r\n      }\r\n      if (this.initText) {\r\n          this.initText();\r\n      }\r\n  };\r\n  ChartInternal.prototype.initWithData = function (data) {\r\n      var $$ = this, d3 = $$.d3, config = $$.config;\r\n      var defs, main, binding = true;\r\n      $$.axis = new AxisClass($$);\r\n      if (!config.bindto) {\r\n          $$.selectChart = d3.selectAll([]);\r\n      }\r\n      else if (typeof config.bindto.node === 'function') {\r\n          $$.selectChart = config.bindto;\r\n      }\r\n      else {\r\n          $$.selectChart = d3.select(config.bindto);\r\n      }\r\n      if ($$.selectChart.empty()) {\r\n          $$.selectChart = d3\r\n              .select(document.createElement('div'))\r\n              .style('opacity', 0);\r\n          $$.observeInserted($$.selectChart);\r\n          binding = false;\r\n      }\r\n      $$.selectChart.html('').classed('c3', true);\r\n      // Init data as targets\r\n      $$.data.xs = {};\r\n      $$.data.targets = $$.convertDataToTargets(data);\r\n      if (config.data_filter) {\r\n          $$.data.targets = $$.data.targets.filter(config.data_filter);\r\n      }\r\n      // Set targets to hide if needed\r\n      if (config.data_hide) {\r\n          $$.addHiddenTargetIds(config.data_hide === true\r\n              ? $$.mapToIds($$.data.targets)\r\n              : config.data_hide);\r\n      }\r\n      if (config.legend_hide) {\r\n          $$.addHiddenLegendIds(config.legend_hide === true\r\n              ? $$.mapToIds($$.data.targets)\r\n              : config.legend_hide);\r\n      }\r\n      if ($$.isStanfordGraphType()) {\r\n          $$.initStanfordData();\r\n      }\r\n      // Init sizes and scales\r\n      $$.updateSizes();\r\n      $$.updateScales();\r\n      // Set domains for each scale\r\n      $$.x.domain(d3.extent($$.getXDomain($$.data.targets)));\r\n      $$.y.domain($$.getYDomain($$.data.targets, 'y'));\r\n      $$.y2.domain($$.getYDomain($$.data.targets, 'y2'));\r\n      $$.subX.domain($$.x.domain());\r\n      $$.subY.domain($$.y.domain());\r\n      $$.subY2.domain($$.y2.domain());\r\n      // Save original x domain for zoom update\r\n      $$.orgXDomain = $$.x.domain();\r\n      /*-- Basic Elements --*/\r\n      // Define svgs\r\n      $$.svg = $$.selectChart\r\n          .append('svg')\r\n          .style('overflow', 'hidden')\r\n          .on('mouseenter', function () {\r\n          return config.onmouseover.call($$);\r\n      })\r\n          .on('mouseleave', function () {\r\n          return config.onmouseout.call($$);\r\n      });\r\n      if ($$.config.svg_classname) {\r\n          $$.svg.attr('class', $$.config.svg_classname);\r\n      }\r\n      // Define defs\r\n      defs = $$.svg.append('defs');\r\n      $$.clipChart = $$.appendClip(defs, $$.clipId);\r\n      $$.clipXAxis = $$.appendClip(defs, $$.clipIdForXAxis);\r\n      $$.clipYAxis = $$.appendClip(defs, $$.clipIdForYAxis);\r\n      $$.clipGrid = $$.appendClip(defs, $$.clipIdForGrid);\r\n      $$.clipSubchart = $$.appendClip(defs, $$.clipIdForSubchart);\r\n      $$.updateSvgSize();\r\n      // Define regions\r\n      main = $$.main = $$.svg.append('g').attr('transform', $$.getTranslate('main'));\r\n      if ($$.initPie) {\r\n          $$.initPie();\r\n      }\r\n      if ($$.initDragZoom) {\r\n          $$.initDragZoom();\r\n      }\r\n      if (config.subchart_show && $$.initSubchart) {\r\n          $$.initSubchart();\r\n      }\r\n      if ($$.initTooltip) {\r\n          $$.initTooltip();\r\n      }\r\n      if ($$.initLegend) {\r\n          $$.initLegend();\r\n      }\r\n      if ($$.initTitle) {\r\n          $$.initTitle();\r\n      }\r\n      if ($$.initZoom) {\r\n          $$.initZoom();\r\n      }\r\n      if ($$.isStanfordGraphType()) {\r\n          $$.drawColorScale();\r\n      }\r\n      // Update selection based on size and scale\r\n      // TODO: currently this must be called after initLegend because of update of sizes, but it should be done in initSubchart.\r\n      if (config.subchart_show && $$.initSubchartBrush) {\r\n          $$.initSubchartBrush();\r\n      }\r\n      /*-- Main Region --*/\r\n      // text when empty\r\n      main\r\n          .append('text')\r\n          .attr('class', CLASS.text + ' ' + CLASS.empty)\r\n          .attr('text-anchor', 'middle') // horizontal centering of text at x position in all browsers.\r\n          .attr('dominant-baseline', 'middle'); // vertical centering of text at y position in all browsers, except IE.\r\n      // Regions\r\n      $$.initRegion();\r\n      // Grids\r\n      $$.initGrid();\r\n      // Define g for chart area\r\n      main\r\n          .append('g')\r\n          .attr('clip-path', $$.clipPath)\r\n          .attr('class', CLASS.chart);\r\n      // Grid lines\r\n      if (config.grid_lines_front) {\r\n          $$.initGridLines();\r\n      }\r\n      $$.initStanfordElements();\r\n      // Cover whole with rects for events\r\n      $$.initEventRect();\r\n      // Define g for chart\r\n      $$.initChartElements();\r\n      // Add Axis\r\n      $$.axis.init();\r\n      // Set targets\r\n      $$.updateTargets($$.data.targets);\r\n      // Set default extent if defined\r\n      if (config.axis_x_selection) {\r\n          $$.brush.selectionAsValue($$.getDefaultSelection());\r\n      }\r\n      // Draw with targets\r\n      if (binding) {\r\n          $$.updateDimension();\r\n          $$.config.oninit.call($$);\r\n          $$.redraw({\r\n              withTransition: false,\r\n              withTransform: true,\r\n              withUpdateXDomain: true,\r\n              withUpdateOrgXDomain: true,\r\n              withTransitionForAxis: false\r\n          });\r\n      }\r\n      // Bind to resize event\r\n      $$.bindResize();\r\n      // Bind to window focus event\r\n      $$.bindWindowFocus();\r\n      // export element of the chart\r\n      $$.api.element = $$.selectChart.node();\r\n  };\r\n  ChartInternal.prototype.smoothLines = function (el, type) {\r\n      var $$ = this;\r\n      if (type === 'grid') {\r\n          el.each(function () {\r\n              var g = $$.d3.select(this), x1 = g.attr('x1'), x2 = g.attr('x2'), y1 = g.attr('y1'), y2 = g.attr('y2');\r\n              g.attr({\r\n                  x1: Math.ceil(x1),\r\n                  x2: Math.ceil(x2),\r\n                  y1: Math.ceil(y1),\r\n                  y2: Math.ceil(y2)\r\n              });\r\n          });\r\n      }\r\n  };\r\n  ChartInternal.prototype.updateSizes = function () {\r\n      var $$ = this, config = $$.config;\r\n      var legendHeight = $$.legend ? $$.getLegendHeight() : 0, legendWidth = $$.legend ? $$.getLegendWidth() : 0, legendHeightForBottom = $$.isLegendRight || $$.isLegendInset ? 0 : legendHeight, hasArc = $$.hasArcType(), xAxisHeight = config.axis_rotated || hasArc ? 0 : $$.getHorizontalAxisHeight('x'), subchartXAxisHeight = config.axis_rotated || hasArc ? 0 : $$.getHorizontalAxisHeight('x', true), subchartHeight = config.subchart_show && !hasArc\r\n          ? config.subchart_size_height + subchartXAxisHeight\r\n          : 0;\r\n      $$.currentWidth = $$.getCurrentWidth();\r\n      $$.currentHeight = $$.getCurrentHeight();\r\n      // for main\r\n      $$.margin = config.axis_rotated\r\n          ? {\r\n              top: $$.getHorizontalAxisHeight('y2') + $$.getCurrentPaddingTop(),\r\n              right: hasArc ? 0 : $$.getCurrentPaddingRight(),\r\n              bottom: $$.getHorizontalAxisHeight('y') +\r\n                  legendHeightForBottom +\r\n                  $$.getCurrentPaddingBottom(),\r\n              left: subchartHeight + (hasArc ? 0 : $$.getCurrentPaddingLeft())\r\n          }\r\n          : {\r\n              top: 4 + $$.getCurrentPaddingTop(),\r\n              right: hasArc ? 0 : $$.getCurrentPaddingRight(),\r\n              bottom: xAxisHeight +\r\n                  subchartHeight +\r\n                  legendHeightForBottom +\r\n                  $$.getCurrentPaddingBottom(),\r\n              left: hasArc ? 0 : $$.getCurrentPaddingLeft()\r\n          };\r\n      // for subchart\r\n      $$.margin2 = config.axis_rotated\r\n          ? {\r\n              top: $$.margin.top,\r\n              right: NaN,\r\n              bottom: 20 + legendHeightForBottom,\r\n              left: $$.rotated_padding_left\r\n          }\r\n          : {\r\n              top: $$.currentHeight - subchartHeight - legendHeightForBottom,\r\n              right: NaN,\r\n              bottom: subchartXAxisHeight + legendHeightForBottom,\r\n              left: $$.margin.left\r\n          };\r\n      // for legend\r\n      $$.margin3 = {\r\n          top: 0,\r\n          right: NaN,\r\n          bottom: 0,\r\n          left: 0\r\n      };\r\n      if ($$.updateSizeForLegend) {\r\n          $$.updateSizeForLegend(legendHeight, legendWidth);\r\n      }\r\n      $$.width = $$.currentWidth - $$.margin.left - $$.margin.right;\r\n      $$.height = $$.currentHeight - $$.margin.top - $$.margin.bottom;\r\n      if ($$.width < 0) {\r\n          $$.width = 0;\r\n      }\r\n      if ($$.height < 0) {\r\n          $$.height = 0;\r\n      }\r\n      $$.width2 = config.axis_rotated\r\n          ? $$.margin.left - $$.rotated_padding_left - $$.rotated_padding_right\r\n          : $$.width;\r\n      $$.height2 = config.axis_rotated\r\n          ? $$.height\r\n          : $$.currentHeight - $$.margin2.top - $$.margin2.bottom;\r\n      if ($$.width2 < 0) {\r\n          $$.width2 = 0;\r\n      }\r\n      if ($$.height2 < 0) {\r\n          $$.height2 = 0;\r\n      }\r\n      // for arc\r\n      $$.arcWidth = $$.width - ($$.isLegendRight ? legendWidth + 10 : 0);\r\n      $$.arcHeight = $$.height - ($$.isLegendRight ? 0 : 10);\r\n      if ($$.hasType('gauge') && !config.gauge_fullCircle) {\r\n          $$.arcHeight += $$.height - $$.getGaugeLabelHeight();\r\n      }\r\n      if ($$.updateRadius) {\r\n          $$.updateRadius();\r\n      }\r\n      if ($$.isLegendRight && hasArc) {\r\n          $$.margin3.left = $$.arcWidth / 2 + $$.radiusExpanded * 1.1;\r\n      }\r\n  };\r\n  ChartInternal.prototype.updateTargets = function (targets) {\r\n      var $$ = this, config = $$.config;\r\n      /*-- Main --*/\r\n      //-- Text --//\r\n      $$.updateTargetsForText(targets);\r\n      //-- Bar --//\r\n      $$.updateTargetsForBar(targets);\r\n      //-- Line --//\r\n      $$.updateTargetsForLine(targets);\r\n      //-- Arc --//\r\n      if ($$.hasArcType() && $$.updateTargetsForArc) {\r\n          $$.updateTargetsForArc(targets);\r\n      }\r\n      /*-- Sub --*/\r\n      if (config.subchart_show && $$.updateTargetsForSubchart) {\r\n          $$.updateTargetsForSubchart(targets);\r\n      }\r\n      // Fade-in each chart\r\n      $$.showTargets();\r\n  };\r\n  ChartInternal.prototype.showTargets = function () {\r\n      var $$ = this;\r\n      $$.svg\r\n          .selectAll('.' + CLASS.target)\r\n          .filter(function (d) {\r\n          return $$.isTargetToShow(d.id);\r\n      })\r\n          .transition()\r\n          .duration($$.config.transition_duration)\r\n          .style('opacity', 1);\r\n  };\r\n  ChartInternal.prototype.redraw = function (options, transitions) {\r\n      var $$ = this, main = $$.main, d3 = $$.d3, config = $$.config;\r\n      var areaIndices = $$.getShapeIndices($$.isAreaType), barIndices = $$.getShapeIndices($$.isBarType), lineIndices = $$.getShapeIndices($$.isLineType);\r\n      var withY, withSubchart, withTransition, withTransitionForExit, withTransitionForAxis, withTransform, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain, withLegend, withEventRect, withDimension, withUpdateXAxis;\r\n      var hideAxis = $$.hasArcType();\r\n      var drawArea, drawBar, drawLine, xForText, yForText;\r\n      var duration, durationForExit, durationForAxis;\r\n      var transitionsToWait, waitForDraw, flow, transition;\r\n      var targetsToShow = $$.filterTargetsToShow($$.data.targets), tickValues, i, intervalForCulling, xDomainForZoom;\r\n      var xv = $$.xv.bind($$), cx, cy;\r\n      options = options || {};\r\n      withY = getOption(options, 'withY', true);\r\n      withSubchart = getOption(options, 'withSubchart', true);\r\n      withTransition = getOption(options, 'withTransition', true);\r\n      withTransform = getOption(options, 'withTransform', false);\r\n      withUpdateXDomain = getOption(options, 'withUpdateXDomain', false);\r\n      withUpdateOrgXDomain = getOption(options, 'withUpdateOrgXDomain', false);\r\n      withTrimXDomain = getOption(options, 'withTrimXDomain', true);\r\n      withUpdateXAxis = getOption(options, 'withUpdateXAxis', withUpdateXDomain);\r\n      withLegend = getOption(options, 'withLegend', false);\r\n      withEventRect = getOption(options, 'withEventRect', true);\r\n      withDimension = getOption(options, 'withDimension', true);\r\n      withTransitionForExit = getOption(options, 'withTransitionForExit', withTransition);\r\n      withTransitionForAxis = getOption(options, 'withTransitionForAxis', withTransition);\r\n      duration = withTransition ? config.transition_duration : 0;\r\n      durationForExit = withTransitionForExit ? duration : 0;\r\n      durationForAxis = withTransitionForAxis ? duration : 0;\r\n      transitions = transitions || $$.axis.generateTransitions(durationForAxis);\r\n      // update legend and transform each g\r\n      if (withLegend && config.legend_show) {\r\n          $$.updateLegend($$.mapToIds($$.data.targets), options, transitions);\r\n      }\r\n      else if (withDimension) {\r\n          // need to update dimension (e.g. axis.y.tick.values) because y tick values should change\r\n          // no need to update axis in it because they will be updated in redraw()\r\n          $$.updateDimension(true);\r\n      }\r\n      // MEMO: needed for grids calculation\r\n      if ($$.isCategorized() && targetsToShow.length === 0) {\r\n          $$.x.domain([0, $$.axes.x.selectAll('.tick').size()]);\r\n      }\r\n      if (targetsToShow.length) {\r\n          $$.updateXDomain(targetsToShow, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain);\r\n          if (!config.axis_x_tick_values) {\r\n              tickValues = $$.axis.updateXAxisTickValues(targetsToShow);\r\n          }\r\n      }\r\n      else {\r\n          $$.xAxis.tickValues([]);\r\n          $$.subXAxis.tickValues([]);\r\n      }\r\n      if (config.zoom_rescale && !options.flow) {\r\n          xDomainForZoom = $$.x.orgDomain();\r\n      }\r\n      $$.y.domain($$.getYDomain(targetsToShow, 'y', xDomainForZoom));\r\n      $$.y2.domain($$.getYDomain(targetsToShow, 'y2', xDomainForZoom));\r\n      if (!config.axis_y_tick_values && config.axis_y_tick_count) {\r\n          $$.yAxis.tickValues($$.axis.generateTickValues($$.y.domain(), config.axis_y_tick_count));\r\n      }\r\n      if (!config.axis_y2_tick_values && config.axis_y2_tick_count) {\r\n          $$.y2Axis.tickValues($$.axis.generateTickValues($$.y2.domain(), config.axis_y2_tick_count));\r\n      }\r\n      // axes\r\n      $$.axis.redraw(durationForAxis, hideAxis);\r\n      // Update axis label\r\n      $$.axis.updateLabels(withTransition);\r\n      // show/hide if manual culling needed\r\n      if ((withUpdateXDomain || withUpdateXAxis) && targetsToShow.length) {\r\n          if (config.axis_x_tick_culling && tickValues) {\r\n              for (i = 1; i < tickValues.length; i++) {\r\n                  if (tickValues.length / i < config.axis_x_tick_culling_max) {\r\n                      intervalForCulling = i;\r\n                      break;\r\n                  }\r\n              }\r\n              $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').each(function (e) {\r\n                  var index = tickValues.indexOf(e);\r\n                  if (index >= 0) {\r\n                      d3.select(this).style('display', index % intervalForCulling ? 'none' : 'block');\r\n                  }\r\n              });\r\n          }\r\n          else {\r\n              $$.svg\r\n                  .selectAll('.' + CLASS.axisX + ' .tick text')\r\n                  .style('display', 'block');\r\n          }\r\n      }\r\n      // setup drawer - MEMO: these must be called after axis updated\r\n      drawArea = $$.generateDrawArea\r\n          ? $$.generateDrawArea(areaIndices, false)\r\n          : undefined;\r\n      drawBar = $$.generateDrawBar ? $$.generateDrawBar(barIndices) : undefined;\r\n      drawLine = $$.generateDrawLine\r\n          ? $$.generateDrawLine(lineIndices, false)\r\n          : undefined;\r\n      xForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, true);\r\n      yForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, false);\r\n      // update circleY based on updated parameters\r\n      $$.updateCircleY();\r\n      // generate circle x/y functions depending on updated params\r\n      cx = ($$.config.axis_rotated ? $$.circleY : $$.circleX).bind($$);\r\n      cy = ($$.config.axis_rotated ? $$.circleX : $$.circleY).bind($$);\r\n      // Update sub domain\r\n      if (withY) {\r\n          $$.subY.domain($$.getYDomain(targetsToShow, 'y'));\r\n          $$.subY2.domain($$.getYDomain(targetsToShow, 'y2'));\r\n      }\r\n      // xgrid focus\r\n      $$.updateXgridFocus();\r\n      // Data empty label positioning and text.\r\n      main\r\n          .select('text.' + CLASS.text + '.' + CLASS.empty)\r\n          .attr('x', $$.width / 2)\r\n          .attr('y', $$.height / 2)\r\n          .text(config.data_empty_label_text)\r\n          .transition()\r\n          .style('opacity', targetsToShow.length ? 0 : 1);\r\n      // event rect\r\n      if (withEventRect) {\r\n          $$.redrawEventRect();\r\n      }\r\n      // grid\r\n      $$.updateGrid(duration);\r\n      $$.updateStanfordElements(duration);\r\n      // rect for regions\r\n      $$.updateRegion(duration);\r\n      // bars\r\n      $$.updateBar(durationForExit);\r\n      // lines, areas and circles\r\n      $$.updateLine(durationForExit);\r\n      $$.updateArea(durationForExit);\r\n      $$.updateCircle(cx, cy);\r\n      // text\r\n      if ($$.hasDataLabel()) {\r\n          $$.updateText(xForText, yForText, durationForExit);\r\n      }\r\n      // title\r\n      if ($$.redrawTitle) {\r\n          $$.redrawTitle();\r\n      }\r\n      // arc\r\n      if ($$.redrawArc) {\r\n          $$.redrawArc(duration, durationForExit, withTransform);\r\n      }\r\n      // subchart\r\n      if (config.subchart_show && $$.redrawSubchart) {\r\n          $$.redrawSubchart(withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices);\r\n      }\r\n      if ($$.isStanfordGraphType()) {\r\n          $$.drawColorScale();\r\n      }\r\n      // circles for select\r\n      main\r\n          .selectAll('.' + CLASS.selectedCircles)\r\n          .filter($$.isBarType.bind($$))\r\n          .selectAll('circle')\r\n          .remove();\r\n      if (options.flow) {\r\n          flow = $$.generateFlow({\r\n              targets: targetsToShow,\r\n              flow: options.flow,\r\n              duration: options.flow.duration,\r\n              drawBar: drawBar,\r\n              drawLine: drawLine,\r\n              drawArea: drawArea,\r\n              cx: cx,\r\n              cy: cy,\r\n              xv: xv,\r\n              xForText: xForText,\r\n              yForText: yForText\r\n          });\r\n      }\r\n      if (duration && $$.isTabVisible()) {\r\n          // Only use transition if tab visible. See #938.\r\n          // transition should be derived from one transition\r\n          transition = d3.transition().duration(duration);\r\n          transitionsToWait = [];\r\n          [\r\n              $$.redrawBar(drawBar, true, transition),\r\n              $$.redrawLine(drawLine, true, transition),\r\n              $$.redrawArea(drawArea, true, transition),\r\n              $$.redrawCircle(cx, cy, true, transition),\r\n              $$.redrawText(xForText, yForText, options.flow, true, transition),\r\n              $$.redrawRegion(true, transition),\r\n              $$.redrawGrid(true, transition)\r\n          ].forEach(function (transitions) {\r\n              transitions.forEach(function (transition) {\r\n                  transitionsToWait.push(transition);\r\n              });\r\n          });\r\n          // Wait for end of transitions to call flow and onrendered callback\r\n          waitForDraw = $$.generateWait();\r\n          transitionsToWait.forEach(function (t) {\r\n              waitForDraw.add(t);\r\n          });\r\n          waitForDraw(function () {\r\n              if (flow) {\r\n                  flow();\r\n              }\r\n              if (config.onrendered) {\r\n                  config.onrendered.call($$);\r\n              }\r\n          });\r\n      }\r\n      else {\r\n          $$.redrawBar(drawBar);\r\n          $$.redrawLine(drawLine);\r\n          $$.redrawArea(drawArea);\r\n          $$.redrawCircle(cx, cy);\r\n          $$.redrawText(xForText, yForText, options.flow);\r\n          $$.redrawRegion();\r\n          $$.redrawGrid();\r\n          if (flow) {\r\n              flow();\r\n          }\r\n          if (config.onrendered) {\r\n              config.onrendered.call($$);\r\n          }\r\n      }\r\n      // update fadein condition\r\n      $$.mapToIds($$.data.targets).forEach(function (id) {\r\n          $$.withoutFadeIn[id] = true;\r\n      });\r\n  };\r\n  ChartInternal.prototype.updateAndRedraw = function (options) {\r\n      var $$ = this, config = $$.config, transitions;\r\n      options = options || {};\r\n      // same with redraw\r\n      options.withTransition = getOption(options, 'withTransition', true);\r\n      options.withTransform = getOption(options, 'withTransform', false);\r\n      options.withLegend = getOption(options, 'withLegend', false);\r\n      // NOT same with redraw\r\n      options.withUpdateXDomain = getOption(options, 'withUpdateXDomain', true);\r\n      options.withUpdateOrgXDomain = getOption(options, 'withUpdateOrgXDomain', true);\r\n      options.withTransitionForExit = false;\r\n      options.withTransitionForTransform = getOption(options, 'withTransitionForTransform', options.withTransition);\r\n      // MEMO: this needs to be called before updateLegend and it means this ALWAYS needs to be called)\r\n      $$.updateSizes();\r\n      // MEMO: called in updateLegend in redraw if withLegend\r\n      if (!(options.withLegend && config.legend_show)) {\r\n          transitions = $$.axis.generateTransitions(options.withTransitionForAxis ? config.transition_duration : 0);\r\n          // Update scales\r\n          $$.updateScales();\r\n          $$.updateSvgSize();\r\n          // Update g positions\r\n          $$.transformAll(options.withTransitionForTransform, transitions);\r\n      }\r\n      // Draw with new sizes & scales\r\n      $$.redraw(options, transitions);\r\n  };\r\n  ChartInternal.prototype.redrawWithoutRescale = function () {\r\n      this.redraw({\r\n          withY: false,\r\n          withSubchart: false,\r\n          withEventRect: false,\r\n          withTransitionForAxis: false\r\n      });\r\n  };\r\n  ChartInternal.prototype.isTimeSeries = function () {\r\n      return this.config.axis_x_type === 'timeseries';\r\n  };\r\n  ChartInternal.prototype.isCategorized = function () {\r\n      return this.config.axis_x_type.indexOf('categor') >= 0;\r\n  };\r\n  ChartInternal.prototype.isCustomX = function () {\r\n      var $$ = this, config = $$.config;\r\n      return !$$.isTimeSeries() && (config.data_x || notEmpty(config.data_xs));\r\n  };\r\n  ChartInternal.prototype.isTimeSeriesY = function () {\r\n      return this.config.axis_y_type === 'timeseries';\r\n  };\r\n  ChartInternal.prototype.getTranslate = function (target) {\r\n      var $$ = this, config = $$.config, x, y;\r\n      if (target === 'main') {\r\n          x = asHalfPixel($$.margin.left);\r\n          y = asHalfPixel($$.margin.top);\r\n      }\r\n      else if (target === 'context') {\r\n          x = asHalfPixel($$.margin2.left);\r\n          y = asHalfPixel($$.margin2.top);\r\n      }\r\n      else if (target === 'legend') {\r\n          x = $$.margin3.left;\r\n          y = $$.margin3.top;\r\n      }\r\n      else if (target === 'x') {\r\n          x = 0;\r\n          y = config.axis_rotated ? 0 : $$.height;\r\n      }\r\n      else if (target === 'y') {\r\n          x = 0;\r\n          y = config.axis_rotated ? $$.height : 0;\r\n      }\r\n      else if (target === 'y2') {\r\n          x = config.axis_rotated ? 0 : $$.width;\r\n          y = config.axis_rotated ? 1 : 0;\r\n      }\r\n      else if (target === 'subx') {\r\n          x = 0;\r\n          y = config.axis_rotated ? 0 : $$.height2;\r\n      }\r\n      else if (target === 'arc') {\r\n          x = $$.arcWidth / 2;\r\n          y = $$.arcHeight / 2 - ($$.hasType('gauge') ? 6 : 0); // to prevent wrong display of min and max label\r\n      }\r\n      return 'translate(' + x + ',' + y + ')';\r\n  };\r\n  ChartInternal.prototype.initialOpacity = function (d) {\r\n      return d.value !== null && this.withoutFadeIn[d.id] ? 1 : 0;\r\n  };\r\n  ChartInternal.prototype.initialOpacityForCircle = function (d) {\r\n      return d.value !== null && this.withoutFadeIn[d.id]\r\n          ? this.opacityForCircle(d)\r\n          : 0;\r\n  };\r\n  ChartInternal.prototype.opacityForCircle = function (d) {\r\n      var isPointShouldBeShown = isFunction(this.config.point_show)\r\n          ? this.config.point_show(d)\r\n          : this.config.point_show;\r\n      var opacity = isPointShouldBeShown || this.isStanfordType(d) ? 1 : 0;\r\n      return isValue(d.value) ? (this.isScatterType(d) ? 0.5 : opacity) : 0;\r\n  };\r\n  ChartInternal.prototype.opacityForText = function () {\r\n      return this.hasDataLabel() ? 1 : 0;\r\n  };\r\n  ChartInternal.prototype.xx = function (d) {\r\n      return d ? this.x(d.x) : null;\r\n  };\r\n  ChartInternal.prototype.xvCustom = function (d, xyValue) {\r\n      var $$ = this, value = xyValue ? d[xyValue] : d.value;\r\n      if ($$.isTimeSeries()) {\r\n          value = $$.parseDate(d.value);\r\n      }\r\n      else if ($$.isCategorized() && typeof d.value === 'string') {\r\n          value = $$.config.axis_x_categories.indexOf(d.value);\r\n      }\r\n      return Math.ceil($$.x(value));\r\n  };\r\n  ChartInternal.prototype.yvCustom = function (d, xyValue) {\r\n      var $$ = this, yScale = d.axis && d.axis === 'y2' ? $$.y2 : $$.y, value = xyValue ? d[xyValue] : d.value;\r\n      return Math.ceil(yScale(value));\r\n  };\r\n  ChartInternal.prototype.xv = function (d) {\r\n      var $$ = this, value = d.value;\r\n      if ($$.isTimeSeries()) {\r\n          value = $$.parseDate(d.value);\r\n      }\r\n      else if ($$.isCategorized() && typeof d.value === 'string') {\r\n          value = $$.config.axis_x_categories.indexOf(d.value);\r\n      }\r\n      return Math.ceil($$.x(value));\r\n  };\r\n  ChartInternal.prototype.yv = function (d) {\r\n      var $$ = this, yScale = d.axis && d.axis === 'y2' ? $$.y2 : $$.y;\r\n      return Math.ceil(yScale(d.value));\r\n  };\r\n  ChartInternal.prototype.subxx = function (d) {\r\n      return d ? this.subX(d.x) : null;\r\n  };\r\n  ChartInternal.prototype.transformMain = function (withTransition, transitions) {\r\n      var $$ = this, xAxis, yAxis, y2Axis;\r\n      if (transitions && transitions.axisX) {\r\n          xAxis = transitions.axisX;\r\n      }\r\n      else {\r\n          xAxis = $$.main.select('.' + CLASS.axisX);\r\n          if (withTransition) {\r\n              xAxis = xAxis.transition();\r\n          }\r\n      }\r\n      if (transitions && transitions.axisY) {\r\n          yAxis = transitions.axisY;\r\n      }\r\n      else {\r\n          yAxis = $$.main.select('.' + CLASS.axisY);\r\n          if (withTransition) {\r\n              yAxis = yAxis.transition();\r\n          }\r\n      }\r\n      if (transitions && transitions.axisY2) {\r\n          y2Axis = transitions.axisY2;\r\n      }\r\n      else {\r\n          y2Axis = $$.main.select('.' + CLASS.axisY2);\r\n          if (withTransition) {\r\n              y2Axis = y2Axis.transition();\r\n          }\r\n      }\r\n      (withTransition ? $$.main.transition() : $$.main).attr('transform', $$.getTranslate('main'));\r\n      xAxis.attr('transform', $$.getTranslate('x'));\r\n      yAxis.attr('transform', $$.getTranslate('y'));\r\n      y2Axis.attr('transform', $$.getTranslate('y2'));\r\n      $$.main\r\n          .select('.' + CLASS.chartArcs)\r\n          .attr('transform', $$.getTranslate('arc'));\r\n  };\r\n  ChartInternal.prototype.transformAll = function (withTransition, transitions) {\r\n      var $$ = this;\r\n      $$.transformMain(withTransition, transitions);\r\n      if ($$.config.subchart_show) {\r\n          $$.transformContext(withTransition, transitions);\r\n      }\r\n      if ($$.legend) {\r\n          $$.transformLegend(withTransition);\r\n      }\r\n  };\r\n  ChartInternal.prototype.updateSvgSize = function () {\r\n      var $$ = this, brush = $$.svg.select(\".\" + CLASS.brush + \" .overlay\");\r\n      $$.svg.attr('width', $$.currentWidth).attr('height', $$.currentHeight);\r\n      $$.svg\r\n          .selectAll(['#' + $$.clipId, '#' + $$.clipIdForGrid])\r\n          .select('rect')\r\n          .attr('width', $$.width)\r\n          .attr('height', $$.height);\r\n      $$.svg\r\n          .select('#' + $$.clipIdForXAxis)\r\n          .select('rect')\r\n          .attr('x', $$.getXAxisClipX.bind($$))\r\n          .attr('y', $$.getXAxisClipY.bind($$))\r\n          .attr('width', $$.getXAxisClipWidth.bind($$))\r\n          .attr('height', $$.getXAxisClipHeight.bind($$));\r\n      $$.svg\r\n          .select('#' + $$.clipIdForYAxis)\r\n          .select('rect')\r\n          .attr('x', $$.getYAxisClipX.bind($$))\r\n          .attr('y', $$.getYAxisClipY.bind($$))\r\n          .attr('width', $$.getYAxisClipWidth.bind($$))\r\n          .attr('height', $$.getYAxisClipHeight.bind($$));\r\n      $$.svg\r\n          .select('#' + $$.clipIdForSubchart)\r\n          .select('rect')\r\n          .attr('width', $$.width)\r\n          .attr('height', (brush.size() && brush.attr('height')) || 0);\r\n      // MEMO: parent div's height will be bigger than svg when <!DOCTYPE html>\r\n      $$.selectChart.style('max-height', $$.currentHeight + 'px');\r\n  };\r\n  ChartInternal.prototype.updateDimension = function (withoutAxis) {\r\n      var $$ = this;\r\n      if (!withoutAxis) {\r\n          if ($$.config.axis_rotated) {\r\n              $$.axes.x.call($$.xAxis);\r\n              $$.axes.subx.call($$.subXAxis);\r\n          }\r\n          else {\r\n              $$.axes.y.call($$.yAxis);\r\n              $$.axes.y2.call($$.y2Axis);\r\n          }\r\n      }\r\n      $$.updateSizes();\r\n      $$.updateScales();\r\n      $$.updateSvgSize();\r\n      $$.transformAll(false);\r\n  };\r\n  ChartInternal.prototype.observeInserted = function (selection) {\r\n      var $$ = this, observer;\r\n      if (typeof MutationObserver === 'undefined') {\r\n          window.console.error('MutationObserver not defined.');\r\n          return;\r\n      }\r\n      observer = new MutationObserver(function (mutations) {\r\n          mutations.forEach(function (mutation) {\r\n              if (mutation.type === 'childList' && mutation.previousSibling) {\r\n                  observer.disconnect();\r\n                  // need to wait for completion of load because size calculation requires the actual sizes determined after that completion\r\n                  $$.intervalForObserveInserted = window.setInterval(function () {\r\n                      // parentNode will NOT be null when completed\r\n                      if (selection.node().parentNode) {\r\n                          window.clearInterval($$.intervalForObserveInserted);\r\n                          $$.updateDimension();\r\n                          if ($$.brush) {\r\n                              $$.brush.update();\r\n                          }\r\n                          $$.config.oninit.call($$);\r\n                          $$.redraw({\r\n                              withTransform: true,\r\n                              withUpdateXDomain: true,\r\n                              withUpdateOrgXDomain: true,\r\n                              withTransition: false,\r\n                              withTransitionForTransform: false,\r\n                              withLegend: true\r\n                          });\r\n                          selection.transition().style('opacity', 1);\r\n                      }\r\n                  }, 10);\r\n              }\r\n          });\r\n      });\r\n      observer.observe(selection.node(), {\r\n          attributes: true,\r\n          childList: true,\r\n          characterData: true\r\n      });\r\n  };\r\n  /**\r\n   * Binds handlers to the window resize event.\r\n   */\r\n  ChartInternal.prototype.bindResize = function () {\r\n      var $$ = this, config = $$.config;\r\n      $$.resizeFunction = $$.generateResize(); // need to call .remove\r\n      $$.resizeFunction.add(function () {\r\n          config.onresize.call($$);\r\n      });\r\n      if (config.resize_auto) {\r\n          $$.resizeFunction.add(function () {\r\n              if ($$.resizeTimeout !== undefined) {\r\n                  window.clearTimeout($$.resizeTimeout);\r\n              }\r\n              $$.resizeTimeout = window.setTimeout(function () {\r\n                  delete $$.resizeTimeout;\r\n                  $$.updateAndRedraw({\r\n                      withUpdateXDomain: false,\r\n                      withUpdateOrgXDomain: false,\r\n                      withTransition: false,\r\n                      withTransitionForTransform: false,\r\n                      withLegend: true\r\n                  });\r\n                  if ($$.brush) {\r\n                      $$.brush.update();\r\n                  }\r\n              }, 100);\r\n          });\r\n      }\r\n      $$.resizeFunction.add(function () {\r\n          config.onresized.call($$);\r\n      });\r\n      $$.resizeIfElementDisplayed = function () {\r\n          // if element not displayed skip it\r\n          if ($$.api == null || !$$.api.element.offsetParent) {\r\n              return;\r\n          }\r\n          $$.resizeFunction();\r\n      };\r\n      window.addEventListener('resize', $$.resizeIfElementDisplayed, false);\r\n  };\r\n  /**\r\n   * Binds handlers to the window focus event.\r\n   */\r\n  ChartInternal.prototype.bindWindowFocus = function () {\r\n      var _this = this;\r\n      if (this.windowFocusHandler) {\r\n          // The handler is already set\r\n          return;\r\n      }\r\n      this.windowFocusHandler = function () {\r\n          _this.redraw();\r\n      };\r\n      window.addEventListener('focus', this.windowFocusHandler);\r\n  };\r\n  /**\r\n   * Unbinds from the window focus event.\r\n   */\r\n  ChartInternal.prototype.unbindWindowFocus = function () {\r\n      window.removeEventListener('focus', this.windowFocusHandler);\r\n      delete this.windowFocusHandler;\r\n  };\r\n  ChartInternal.prototype.generateResize = function () {\r\n      var resizeFunctions = [];\r\n      function callResizeFunctions() {\r\n          resizeFunctions.forEach(function (f) {\r\n              f();\r\n          });\r\n      }\r\n      callResizeFunctions.add = function (f) {\r\n          resizeFunctions.push(f);\r\n      };\r\n      callResizeFunctions.remove = function (f) {\r\n          for (var i = 0; i < resizeFunctions.length; i++) {\r\n              if (resizeFunctions[i] === f) {\r\n                  resizeFunctions.splice(i, 1);\r\n                  break;\r\n              }\r\n          }\r\n      };\r\n      return callResizeFunctions;\r\n  };\r\n  ChartInternal.prototype.endall = function (transition, callback) {\r\n      var n = 0;\r\n      transition\r\n          .each(function () {\r\n          ++n;\r\n      })\r\n          .on('end', function () {\r\n          if (!--n) {\r\n              callback.apply(this, arguments);\r\n          }\r\n      });\r\n  };\r\n  ChartInternal.prototype.generateWait = function () {\r\n      var $$ = this;\r\n      var transitionsToWait = [], f = function (callback) {\r\n          var timer = setInterval(function () {\r\n              if (!$$.isTabVisible()) {\r\n                  return;\r\n              }\r\n              var done = 0;\r\n              transitionsToWait.forEach(function (t) {\r\n                  if (t.empty()) {\r\n                      done += 1;\r\n                      return;\r\n                  }\r\n                  try {\r\n                      t.transition();\r\n                  }\r\n                  catch (e) {\r\n                      done += 1;\r\n                  }\r\n              });\r\n              if (done === transitionsToWait.length) {\r\n                  clearInterval(timer);\r\n                  if (callback) {\r\n                      callback();\r\n                  }\r\n              }\r\n          }, 50);\r\n      };\r\n      f.add = function (transition) {\r\n          transitionsToWait.push(transition);\r\n      };\r\n      return f;\r\n  };\r\n  ChartInternal.prototype.parseDate = function (date) {\r\n      var $$ = this, parsedDate;\r\n      if (date instanceof Date) {\r\n          parsedDate = date;\r\n      }\r\n      else if (typeof date === 'string') {\r\n          parsedDate = $$.dataTimeParse(date);\r\n      }\r\n      else if (typeof date === 'object') {\r\n          parsedDate = new Date(+date);\r\n      }\r\n      else if (typeof date === 'number' && !isNaN(date)) {\r\n          parsedDate = new Date(+date);\r\n      }\r\n      if (!parsedDate || isNaN(+parsedDate)) {\r\n          window.console.error(\"Failed to parse x '\" + date + \"' to Date object\");\r\n      }\r\n      return parsedDate;\r\n  };\r\n  ChartInternal.prototype.isTabVisible = function () {\r\n      return !document.hidden;\r\n  };\r\n  ChartInternal.prototype.getPathBox = getPathBox;\r\n  ChartInternal.prototype.CLASS = CLASS;\n\n  /* jshint ignore:start */\r\n  (function () {\r\n      if (!('SVGPathSeg' in window)) {\r\n          // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSeg\r\n          window.SVGPathSeg = function (type, typeAsLetter, owningPathSegList) {\r\n              this.pathSegType = type;\r\n              this.pathSegTypeAsLetter = typeAsLetter;\r\n              this._owningPathSegList = owningPathSegList;\r\n          };\r\n          window.SVGPathSeg.prototype.classname = 'SVGPathSeg';\r\n          window.SVGPathSeg.PATHSEG_UNKNOWN = 0;\r\n          window.SVGPathSeg.PATHSEG_CLOSEPATH = 1;\r\n          window.SVGPathSeg.PATHSEG_MOVETO_ABS = 2;\r\n          window.SVGPathSeg.PATHSEG_MOVETO_REL = 3;\r\n          window.SVGPathSeg.PATHSEG_LINETO_ABS = 4;\r\n          window.SVGPathSeg.PATHSEG_LINETO_REL = 5;\r\n          window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS = 6;\r\n          window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL = 7;\r\n          window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS = 8;\r\n          window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL = 9;\r\n          window.SVGPathSeg.PATHSEG_ARC_ABS = 10;\r\n          window.SVGPathSeg.PATHSEG_ARC_REL = 11;\r\n          window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS = 12;\r\n          window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL = 13;\r\n          window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS = 14;\r\n          window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL = 15;\r\n          window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16;\r\n          window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17;\r\n          window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18;\r\n          window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19;\r\n          // Notify owning PathSegList on any changes so they can be synchronized back to the path element.\r\n          window.SVGPathSeg.prototype._segmentChanged = function () {\r\n              if (this._owningPathSegList)\r\n                  this._owningPathSegList.segmentChanged(this);\r\n          };\r\n          window.SVGPathSegClosePath = function (owningPathSegList) {\r\n              window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CLOSEPATH, 'z', owningPathSegList);\r\n          };\r\n          window.SVGPathSegClosePath.prototype = Object.create(window.SVGPathSeg.prototype);\r\n          window.SVGPathSegClosePath.prototype.toString = function () {\r\n              return '[object SVGPathSegClosePath]';\r\n          };\r\n          window.SVGPathSegClosePath.prototype._asPathString = function () {\r\n              return this.pathSegTypeAsLetter;\r\n          };\r\n          window.SVGPathSegClosePath.prototype.clone = function () {\r\n              return new window.SVGPathSegClosePath(undefined);\r\n          };\r\n          window.SVGPathSegMovetoAbs = function (owningPathSegList, x, y) {\r\n              window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_ABS, 'M', owningPathSegList);\r\n              this._x = x;\r\n              this._y = y;\r\n          };\r\n          window.SVGPathSegMovetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n          window.SVGPathSegMovetoAbs.prototype.toString = function () {\r\n              return '[object SVGPathSegMovetoAbs]';\r\n          };\r\n          window.SVGPathSegMovetoAbs.prototype._asPathString = function () {\r\n              return this.pathSegTypeAsLetter + ' ' + this._x + ' ' + this._y;\r\n          };\r\n          window.SVGPathSegMovetoAbs.prototype.clone = function () {\r\n              return new window.SVGPathSegMovetoAbs(undefined, this._x, this._y);\r\n          };\r\n          Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, 'x', {\r\n              get: function () {\r\n                  return this._x;\r\n              },\r\n              set: function (x) {\r\n                  this._x = x;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, 'y', {\r\n              get: function () {\r\n                  return this._y;\r\n              },\r\n              set: function (y) {\r\n                  this._y = y;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          window.SVGPathSegMovetoRel = function (owningPathSegList, x, y) {\r\n              window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_REL, 'm', owningPathSegList);\r\n              this._x = x;\r\n              this._y = y;\r\n          };\r\n          window.SVGPathSegMovetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n          window.SVGPathSegMovetoRel.prototype.toString = function () {\r\n              return '[object SVGPathSegMovetoRel]';\r\n          };\r\n          window.SVGPathSegMovetoRel.prototype._asPathString = function () {\r\n              return this.pathSegTypeAsLetter + ' ' + this._x + ' ' + this._y;\r\n          };\r\n          window.SVGPathSegMovetoRel.prototype.clone = function () {\r\n              return new window.SVGPathSegMovetoRel(undefined, this._x, this._y);\r\n          };\r\n          Object.defineProperty(window.SVGPathSegMovetoRel.prototype, 'x', {\r\n              get: function () {\r\n                  return this._x;\r\n              },\r\n              set: function (x) {\r\n                  this._x = x;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegMovetoRel.prototype, 'y', {\r\n              get: function () {\r\n                  return this._y;\r\n              },\r\n              set: function (y) {\r\n                  this._y = y;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          window.SVGPathSegLinetoAbs = function (owningPathSegList, x, y) {\r\n              window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_ABS, 'L', owningPathSegList);\r\n              this._x = x;\r\n              this._y = y;\r\n          };\r\n          window.SVGPathSegLinetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n          window.SVGPathSegLinetoAbs.prototype.toString = function () {\r\n              return '[object SVGPathSegLinetoAbs]';\r\n          };\r\n          window.SVGPathSegLinetoAbs.prototype._asPathString = function () {\r\n              return this.pathSegTypeAsLetter + ' ' + this._x + ' ' + this._y;\r\n          };\r\n          window.SVGPathSegLinetoAbs.prototype.clone = function () {\r\n              return new window.SVGPathSegLinetoAbs(undefined, this._x, this._y);\r\n          };\r\n          Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, 'x', {\r\n              get: function () {\r\n                  return this._x;\r\n              },\r\n              set: function (x) {\r\n                  this._x = x;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, 'y', {\r\n              get: function () {\r\n                  return this._y;\r\n              },\r\n              set: function (y) {\r\n                  this._y = y;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          window.SVGPathSegLinetoRel = function (owningPathSegList, x, y) {\r\n              window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_REL, 'l', owningPathSegList);\r\n              this._x = x;\r\n              this._y = y;\r\n          };\r\n          window.SVGPathSegLinetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n          window.SVGPathSegLinetoRel.prototype.toString = function () {\r\n              return '[object SVGPathSegLinetoRel]';\r\n          };\r\n          window.SVGPathSegLinetoRel.prototype._asPathString = function () {\r\n              return this.pathSegTypeAsLetter + ' ' + this._x + ' ' + this._y;\r\n          };\r\n          window.SVGPathSegLinetoRel.prototype.clone = function () {\r\n              return new window.SVGPathSegLinetoRel(undefined, this._x, this._y);\r\n          };\r\n          Object.defineProperty(window.SVGPathSegLinetoRel.prototype, 'x', {\r\n              get: function () {\r\n                  return this._x;\r\n              },\r\n              set: function (x) {\r\n                  this._x = x;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegLinetoRel.prototype, 'y', {\r\n              get: function () {\r\n                  return this._y;\r\n              },\r\n              set: function (y) {\r\n                  this._y = y;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          window.SVGPathSegCurvetoCubicAbs = function (owningPathSegList, x, y, x1, y1, x2, y2) {\r\n              window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS, 'C', owningPathSegList);\r\n              this._x = x;\r\n              this._y = y;\r\n              this._x1 = x1;\r\n              this._y1 = y1;\r\n              this._x2 = x2;\r\n              this._y2 = y2;\r\n          };\r\n          window.SVGPathSegCurvetoCubicAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n          window.SVGPathSegCurvetoCubicAbs.prototype.toString = function () {\r\n              return '[object SVGPathSegCurvetoCubicAbs]';\r\n          };\r\n          window.SVGPathSegCurvetoCubicAbs.prototype._asPathString = function () {\r\n              return (this.pathSegTypeAsLetter +\r\n                  ' ' +\r\n                  this._x1 +\r\n                  ' ' +\r\n                  this._y1 +\r\n                  ' ' +\r\n                  this._x2 +\r\n                  ' ' +\r\n                  this._y2 +\r\n                  ' ' +\r\n                  this._x +\r\n                  ' ' +\r\n                  this._y);\r\n          };\r\n          window.SVGPathSegCurvetoCubicAbs.prototype.clone = function () {\r\n              return new window.SVGPathSegCurvetoCubicAbs(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\r\n          };\r\n          Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, 'x', {\r\n              get: function () {\r\n                  return this._x;\r\n              },\r\n              set: function (x) {\r\n                  this._x = x;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, 'y', {\r\n              get: function () {\r\n                  return this._y;\r\n              },\r\n              set: function (y) {\r\n                  this._y = y;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, 'x1', {\r\n              get: function () {\r\n                  return this._x1;\r\n              },\r\n              set: function (x1) {\r\n                  this._x1 = x1;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, 'y1', {\r\n              get: function () {\r\n                  return this._y1;\r\n              },\r\n              set: function (y1) {\r\n                  this._y1 = y1;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, 'x2', {\r\n              get: function () {\r\n                  return this._x2;\r\n              },\r\n              set: function (x2) {\r\n                  this._x2 = x2;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, 'y2', {\r\n              get: function () {\r\n                  return this._y2;\r\n              },\r\n              set: function (y2) {\r\n                  this._y2 = y2;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          window.SVGPathSegCurvetoCubicRel = function (owningPathSegList, x, y, x1, y1, x2, y2) {\r\n              window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL, 'c', owningPathSegList);\r\n              this._x = x;\r\n              this._y = y;\r\n              this._x1 = x1;\r\n              this._y1 = y1;\r\n              this._x2 = x2;\r\n              this._y2 = y2;\r\n          };\r\n          window.SVGPathSegCurvetoCubicRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n          window.SVGPathSegCurvetoCubicRel.prototype.toString = function () {\r\n              return '[object SVGPathSegCurvetoCubicRel]';\r\n          };\r\n          window.SVGPathSegCurvetoCubicRel.prototype._asPathString = function () {\r\n              return (this.pathSegTypeAsLetter +\r\n                  ' ' +\r\n                  this._x1 +\r\n                  ' ' +\r\n                  this._y1 +\r\n                  ' ' +\r\n                  this._x2 +\r\n                  ' ' +\r\n                  this._y2 +\r\n                  ' ' +\r\n                  this._x +\r\n                  ' ' +\r\n                  this._y);\r\n          };\r\n          window.SVGPathSegCurvetoCubicRel.prototype.clone = function () {\r\n              return new window.SVGPathSegCurvetoCubicRel(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\r\n          };\r\n          Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, 'x', {\r\n              get: function () {\r\n                  return this._x;\r\n              },\r\n              set: function (x) {\r\n                  this._x = x;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, 'y', {\r\n              get: function () {\r\n                  return this._y;\r\n              },\r\n              set: function (y) {\r\n                  this._y = y;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, 'x1', {\r\n              get: function () {\r\n                  return this._x1;\r\n              },\r\n              set: function (x1) {\r\n                  this._x1 = x1;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, 'y1', {\r\n              get: function () {\r\n                  return this._y1;\r\n              },\r\n              set: function (y1) {\r\n                  this._y1 = y1;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, 'x2', {\r\n              get: function () {\r\n                  return this._x2;\r\n              },\r\n              set: function (x2) {\r\n                  this._x2 = x2;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, 'y2', {\r\n              get: function () {\r\n                  return this._y2;\r\n              },\r\n              set: function (y2) {\r\n                  this._y2 = y2;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          window.SVGPathSegCurvetoQuadraticAbs = function (owningPathSegList, x, y, x1, y1) {\r\n              window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS, 'Q', owningPathSegList);\r\n              this._x = x;\r\n              this._y = y;\r\n              this._x1 = x1;\r\n              this._y1 = y1;\r\n          };\r\n          window.SVGPathSegCurvetoQuadraticAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n          window.SVGPathSegCurvetoQuadraticAbs.prototype.toString = function () {\r\n              return '[object SVGPathSegCurvetoQuadraticAbs]';\r\n          };\r\n          window.SVGPathSegCurvetoQuadraticAbs.prototype._asPathString = function () {\r\n              return (this.pathSegTypeAsLetter +\r\n                  ' ' +\r\n                  this._x1 +\r\n                  ' ' +\r\n                  this._y1 +\r\n                  ' ' +\r\n                  this._x +\r\n                  ' ' +\r\n                  this._y);\r\n          };\r\n          window.SVGPathSegCurvetoQuadraticAbs.prototype.clone = function () {\r\n              return new window.SVGPathSegCurvetoQuadraticAbs(undefined, this._x, this._y, this._x1, this._y1);\r\n          };\r\n          Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, 'x', {\r\n              get: function () {\r\n                  return this._x;\r\n              },\r\n              set: function (x) {\r\n                  this._x = x;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, 'y', {\r\n              get: function () {\r\n                  return this._y;\r\n              },\r\n              set: function (y) {\r\n                  this._y = y;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, 'x1', {\r\n              get: function () {\r\n                  return this._x1;\r\n              },\r\n              set: function (x1) {\r\n                  this._x1 = x1;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, 'y1', {\r\n              get: function () {\r\n                  return this._y1;\r\n              },\r\n              set: function (y1) {\r\n                  this._y1 = y1;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          window.SVGPathSegCurvetoQuadraticRel = function (owningPathSegList, x, y, x1, y1) {\r\n              window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL, 'q', owningPathSegList);\r\n              this._x = x;\r\n              this._y = y;\r\n              this._x1 = x1;\r\n              this._y1 = y1;\r\n          };\r\n          window.SVGPathSegCurvetoQuadraticRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n          window.SVGPathSegCurvetoQuadraticRel.prototype.toString = function () {\r\n              return '[object SVGPathSegCurvetoQuadraticRel]';\r\n          };\r\n          window.SVGPathSegCurvetoQuadraticRel.prototype._asPathString = function () {\r\n              return (this.pathSegTypeAsLetter +\r\n                  ' ' +\r\n                  this._x1 +\r\n                  ' ' +\r\n                  this._y1 +\r\n                  ' ' +\r\n                  this._x +\r\n                  ' ' +\r\n                  this._y);\r\n          };\r\n          window.SVGPathSegCurvetoQuadraticRel.prototype.clone = function () {\r\n              return new window.SVGPathSegCurvetoQuadraticRel(undefined, this._x, this._y, this._x1, this._y1);\r\n          };\r\n          Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, 'x', {\r\n              get: function () {\r\n                  return this._x;\r\n              },\r\n              set: function (x) {\r\n                  this._x = x;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, 'y', {\r\n              get: function () {\r\n                  return this._y;\r\n              },\r\n              set: function (y) {\r\n                  this._y = y;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, 'x1', {\r\n              get: function () {\r\n                  return this._x1;\r\n              },\r\n              set: function (x1) {\r\n                  this._x1 = x1;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, 'y1', {\r\n              get: function () {\r\n                  return this._y1;\r\n              },\r\n              set: function (y1) {\r\n                  this._y1 = y1;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          window.SVGPathSegArcAbs = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\r\n              window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_ABS, 'A', owningPathSegList);\r\n              this._x = x;\r\n              this._y = y;\r\n              this._r1 = r1;\r\n              this._r2 = r2;\r\n              this._angle = angle;\r\n              this._largeArcFlag = largeArcFlag;\r\n              this._sweepFlag = sweepFlag;\r\n          };\r\n          window.SVGPathSegArcAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n          window.SVGPathSegArcAbs.prototype.toString = function () {\r\n              return '[object SVGPathSegArcAbs]';\r\n          };\r\n          window.SVGPathSegArcAbs.prototype._asPathString = function () {\r\n              return (this.pathSegTypeAsLetter +\r\n                  ' ' +\r\n                  this._r1 +\r\n                  ' ' +\r\n                  this._r2 +\r\n                  ' ' +\r\n                  this._angle +\r\n                  ' ' +\r\n                  (this._largeArcFlag ? '1' : '0') +\r\n                  ' ' +\r\n                  (this._sweepFlag ? '1' : '0') +\r\n                  ' ' +\r\n                  this._x +\r\n                  ' ' +\r\n                  this._y);\r\n          };\r\n          window.SVGPathSegArcAbs.prototype.clone = function () {\r\n              return new window.SVGPathSegArcAbs(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\r\n          };\r\n          Object.defineProperty(window.SVGPathSegArcAbs.prototype, 'x', {\r\n              get: function () {\r\n                  return this._x;\r\n              },\r\n              set: function (x) {\r\n                  this._x = x;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegArcAbs.prototype, 'y', {\r\n              get: function () {\r\n                  return this._y;\r\n              },\r\n              set: function (y) {\r\n                  this._y = y;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegArcAbs.prototype, 'r1', {\r\n              get: function () {\r\n                  return this._r1;\r\n              },\r\n              set: function (r1) {\r\n                  this._r1 = r1;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegArcAbs.prototype, 'r2', {\r\n              get: function () {\r\n                  return this._r2;\r\n              },\r\n              set: function (r2) {\r\n                  this._r2 = r2;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegArcAbs.prototype, 'angle', {\r\n              get: function () {\r\n                  return this._angle;\r\n              },\r\n              set: function (angle) {\r\n                  this._angle = angle;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegArcAbs.prototype, 'largeArcFlag', {\r\n              get: function () {\r\n                  return this._largeArcFlag;\r\n              },\r\n              set: function (largeArcFlag) {\r\n                  this._largeArcFlag = largeArcFlag;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegArcAbs.prototype, 'sweepFlag', {\r\n              get: function () {\r\n                  return this._sweepFlag;\r\n              },\r\n              set: function (sweepFlag) {\r\n                  this._sweepFlag = sweepFlag;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          window.SVGPathSegArcRel = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\r\n              window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_REL, 'a', owningPathSegList);\r\n              this._x = x;\r\n              this._y = y;\r\n              this._r1 = r1;\r\n              this._r2 = r2;\r\n              this._angle = angle;\r\n              this._largeArcFlag = largeArcFlag;\r\n              this._sweepFlag = sweepFlag;\r\n          };\r\n          window.SVGPathSegArcRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n          window.SVGPathSegArcRel.prototype.toString = function () {\r\n              return '[object SVGPathSegArcRel]';\r\n          };\r\n          window.SVGPathSegArcRel.prototype._asPathString = function () {\r\n              return (this.pathSegTypeAsLetter +\r\n                  ' ' +\r\n                  this._r1 +\r\n                  ' ' +\r\n                  this._r2 +\r\n                  ' ' +\r\n                  this._angle +\r\n                  ' ' +\r\n                  (this._largeArcFlag ? '1' : '0') +\r\n                  ' ' +\r\n                  (this._sweepFlag ? '1' : '0') +\r\n                  ' ' +\r\n                  this._x +\r\n                  ' ' +\r\n                  this._y);\r\n          };\r\n          window.SVGPathSegArcRel.prototype.clone = function () {\r\n              return new window.SVGPathSegArcRel(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\r\n          };\r\n          Object.defineProperty(window.SVGPathSegArcRel.prototype, 'x', {\r\n              get: function () {\r\n                  return this._x;\r\n              },\r\n              set: function (x) {\r\n                  this._x = x;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegArcRel.prototype, 'y', {\r\n              get: function () {\r\n                  return this._y;\r\n              },\r\n              set: function (y) {\r\n                  this._y = y;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegArcRel.prototype, 'r1', {\r\n              get: function () {\r\n                  return this._r1;\r\n              },\r\n              set: function (r1) {\r\n                  this._r1 = r1;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegArcRel.prototype, 'r2', {\r\n              get: function () {\r\n                  return this._r2;\r\n              },\r\n              set: function (r2) {\r\n                  this._r2 = r2;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegArcRel.prototype, 'angle', {\r\n              get: function () {\r\n                  return this._angle;\r\n              },\r\n              set: function (angle) {\r\n                  this._angle = angle;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegArcRel.prototype, 'largeArcFlag', {\r\n              get: function () {\r\n                  return this._largeArcFlag;\r\n              },\r\n              set: function (largeArcFlag) {\r\n                  this._largeArcFlag = largeArcFlag;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegArcRel.prototype, 'sweepFlag', {\r\n              get: function () {\r\n                  return this._sweepFlag;\r\n              },\r\n              set: function (sweepFlag) {\r\n                  this._sweepFlag = sweepFlag;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          window.SVGPathSegLinetoHorizontalAbs = function (owningPathSegList, x) {\r\n              window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS, 'H', owningPathSegList);\r\n              this._x = x;\r\n          };\r\n          window.SVGPathSegLinetoHorizontalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n          window.SVGPathSegLinetoHorizontalAbs.prototype.toString = function () {\r\n              return '[object SVGPathSegLinetoHorizontalAbs]';\r\n          };\r\n          window.SVGPathSegLinetoHorizontalAbs.prototype._asPathString = function () {\r\n              return this.pathSegTypeAsLetter + ' ' + this._x;\r\n          };\r\n          window.SVGPathSegLinetoHorizontalAbs.prototype.clone = function () {\r\n              return new window.SVGPathSegLinetoHorizontalAbs(undefined, this._x);\r\n          };\r\n          Object.defineProperty(window.SVGPathSegLinetoHorizontalAbs.prototype, 'x', {\r\n              get: function () {\r\n                  return this._x;\r\n              },\r\n              set: function (x) {\r\n                  this._x = x;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          window.SVGPathSegLinetoHorizontalRel = function (owningPathSegList, x) {\r\n              window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL, 'h', owningPathSegList);\r\n              this._x = x;\r\n          };\r\n          window.SVGPathSegLinetoHorizontalRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n          window.SVGPathSegLinetoHorizontalRel.prototype.toString = function () {\r\n              return '[object SVGPathSegLinetoHorizontalRel]';\r\n          };\r\n          window.SVGPathSegLinetoHorizontalRel.prototype._asPathString = function () {\r\n              return this.pathSegTypeAsLetter + ' ' + this._x;\r\n          };\r\n          window.SVGPathSegLinetoHorizontalRel.prototype.clone = function () {\r\n              return new window.SVGPathSegLinetoHorizontalRel(undefined, this._x);\r\n          };\r\n          Object.defineProperty(window.SVGPathSegLinetoHorizontalRel.prototype, 'x', {\r\n              get: function () {\r\n                  return this._x;\r\n              },\r\n              set: function (x) {\r\n                  this._x = x;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          window.SVGPathSegLinetoVerticalAbs = function (owningPathSegList, y) {\r\n              window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS, 'V', owningPathSegList);\r\n              this._y = y;\r\n          };\r\n          window.SVGPathSegLinetoVerticalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n          window.SVGPathSegLinetoVerticalAbs.prototype.toString = function () {\r\n              return '[object SVGPathSegLinetoVerticalAbs]';\r\n          };\r\n          window.SVGPathSegLinetoVerticalAbs.prototype._asPathString = function () {\r\n              return this.pathSegTypeAsLetter + ' ' + this._y;\r\n          };\r\n          window.SVGPathSegLinetoVerticalAbs.prototype.clone = function () {\r\n              return new window.SVGPathSegLinetoVerticalAbs(undefined, this._y);\r\n          };\r\n          Object.defineProperty(window.SVGPathSegLinetoVerticalAbs.prototype, 'y', {\r\n              get: function () {\r\n                  return this._y;\r\n              },\r\n              set: function (y) {\r\n                  this._y = y;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          window.SVGPathSegLinetoVerticalRel = function (owningPathSegList, y) {\r\n              window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL, 'v', owningPathSegList);\r\n              this._y = y;\r\n          };\r\n          window.SVGPathSegLinetoVerticalRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n          window.SVGPathSegLinetoVerticalRel.prototype.toString = function () {\r\n              return '[object SVGPathSegLinetoVerticalRel]';\r\n          };\r\n          window.SVGPathSegLinetoVerticalRel.prototype._asPathString = function () {\r\n              return this.pathSegTypeAsLetter + ' ' + this._y;\r\n          };\r\n          window.SVGPathSegLinetoVerticalRel.prototype.clone = function () {\r\n              return new window.SVGPathSegLinetoVerticalRel(undefined, this._y);\r\n          };\r\n          Object.defineProperty(window.SVGPathSegLinetoVerticalRel.prototype, 'y', {\r\n              get: function () {\r\n                  return this._y;\r\n              },\r\n              set: function (y) {\r\n                  this._y = y;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          window.SVGPathSegCurvetoCubicSmoothAbs = function (owningPathSegList, x, y, x2, y2) {\r\n              window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS, 'S', owningPathSegList);\r\n              this._x = x;\r\n              this._y = y;\r\n              this._x2 = x2;\r\n              this._y2 = y2;\r\n          };\r\n          window.SVGPathSegCurvetoCubicSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n          window.SVGPathSegCurvetoCubicSmoothAbs.prototype.toString = function () {\r\n              return '[object SVGPathSegCurvetoCubicSmoothAbs]';\r\n          };\r\n          window.SVGPathSegCurvetoCubicSmoothAbs.prototype._asPathString = function () {\r\n              return (this.pathSegTypeAsLetter +\r\n                  ' ' +\r\n                  this._x2 +\r\n                  ' ' +\r\n                  this._y2 +\r\n                  ' ' +\r\n                  this._x +\r\n                  ' ' +\r\n                  this._y);\r\n          };\r\n          window.SVGPathSegCurvetoCubicSmoothAbs.prototype.clone = function () {\r\n              return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, this._x, this._y, this._x2, this._y2);\r\n          };\r\n          Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, 'x', {\r\n              get: function () {\r\n                  return this._x;\r\n              },\r\n              set: function (x) {\r\n                  this._x = x;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, 'y', {\r\n              get: function () {\r\n                  return this._y;\r\n              },\r\n              set: function (y) {\r\n                  this._y = y;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, 'x2', {\r\n              get: function () {\r\n                  return this._x2;\r\n              },\r\n              set: function (x2) {\r\n                  this._x2 = x2;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, 'y2', {\r\n              get: function () {\r\n                  return this._y2;\r\n              },\r\n              set: function (y2) {\r\n                  this._y2 = y2;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          window.SVGPathSegCurvetoCubicSmoothRel = function (owningPathSegList, x, y, x2, y2) {\r\n              window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL, 's', owningPathSegList);\r\n              this._x = x;\r\n              this._y = y;\r\n              this._x2 = x2;\r\n              this._y2 = y2;\r\n          };\r\n          window.SVGPathSegCurvetoCubicSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n          window.SVGPathSegCurvetoCubicSmoothRel.prototype.toString = function () {\r\n              return '[object SVGPathSegCurvetoCubicSmoothRel]';\r\n          };\r\n          window.SVGPathSegCurvetoCubicSmoothRel.prototype._asPathString = function () {\r\n              return (this.pathSegTypeAsLetter +\r\n                  ' ' +\r\n                  this._x2 +\r\n                  ' ' +\r\n                  this._y2 +\r\n                  ' ' +\r\n                  this._x +\r\n                  ' ' +\r\n                  this._y);\r\n          };\r\n          window.SVGPathSegCurvetoCubicSmoothRel.prototype.clone = function () {\r\n              return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, this._x, this._y, this._x2, this._y2);\r\n          };\r\n          Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, 'x', {\r\n              get: function () {\r\n                  return this._x;\r\n              },\r\n              set: function (x) {\r\n                  this._x = x;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, 'y', {\r\n              get: function () {\r\n                  return this._y;\r\n              },\r\n              set: function (y) {\r\n                  this._y = y;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, 'x2', {\r\n              get: function () {\r\n                  return this._x2;\r\n              },\r\n              set: function (x2) {\r\n                  this._x2 = x2;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, 'y2', {\r\n              get: function () {\r\n                  return this._y2;\r\n              },\r\n              set: function (y2) {\r\n                  this._y2 = y2;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          window.SVGPathSegCurvetoQuadraticSmoothAbs = function (owningPathSegList, x, y) {\r\n              window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS, 'T', owningPathSegList);\r\n              this._x = x;\r\n              this._y = y;\r\n          };\r\n          window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n          window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.toString = function () {\r\n              return '[object SVGPathSegCurvetoQuadraticSmoothAbs]';\r\n          };\r\n          window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype._asPathString = function () {\r\n              return this.pathSegTypeAsLetter + ' ' + this._x + ' ' + this._y;\r\n          };\r\n          window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.clone = function () {\r\n              return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, this._x, this._y);\r\n          };\r\n          Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, 'x', {\r\n              get: function () {\r\n                  return this._x;\r\n              },\r\n              set: function (x) {\r\n                  this._x = x;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, 'y', {\r\n              get: function () {\r\n                  return this._y;\r\n              },\r\n              set: function (y) {\r\n                  this._y = y;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          window.SVGPathSegCurvetoQuadraticSmoothRel = function (owningPathSegList, x, y) {\r\n              window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL, 't', owningPathSegList);\r\n              this._x = x;\r\n              this._y = y;\r\n          };\r\n          window.SVGPathSegCurvetoQuadraticSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n          window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.toString = function () {\r\n              return '[object SVGPathSegCurvetoQuadraticSmoothRel]';\r\n          };\r\n          window.SVGPathSegCurvetoQuadraticSmoothRel.prototype._asPathString = function () {\r\n              return this.pathSegTypeAsLetter + ' ' + this._x + ' ' + this._y;\r\n          };\r\n          window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.clone = function () {\r\n              return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, this._x, this._y);\r\n          };\r\n          Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, 'x', {\r\n              get: function () {\r\n                  return this._x;\r\n              },\r\n              set: function (x) {\r\n                  this._x = x;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, 'y', {\r\n              get: function () {\r\n                  return this._y;\r\n              },\r\n              set: function (y) {\r\n                  this._y = y;\r\n                  this._segmentChanged();\r\n              },\r\n              enumerable: true\r\n          });\r\n          // Add createSVGPathSeg* functions to window.SVGPathElement.\r\n          // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-Interfacewindow.SVGPathElement.\r\n          window.SVGPathElement.prototype.createSVGPathSegClosePath = function () {\r\n              return new window.SVGPathSegClosePath(undefined);\r\n          };\r\n          window.SVGPathElement.prototype.createSVGPathSegMovetoAbs = function (x, y) {\r\n              return new window.SVGPathSegMovetoAbs(undefined, x, y);\r\n          };\r\n          window.SVGPathElement.prototype.createSVGPathSegMovetoRel = function (x, y) {\r\n              return new window.SVGPathSegMovetoRel(undefined, x, y);\r\n          };\r\n          window.SVGPathElement.prototype.createSVGPathSegLinetoAbs = function (x, y) {\r\n              return new window.SVGPathSegLinetoAbs(undefined, x, y);\r\n          };\r\n          window.SVGPathElement.prototype.createSVGPathSegLinetoRel = function (x, y) {\r\n              return new window.SVGPathSegLinetoRel(undefined, x, y);\r\n          };\r\n          window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs = function (x, y, x1, y1, x2, y2) {\r\n              return new window.SVGPathSegCurvetoCubicAbs(undefined, x, y, x1, y1, x2, y2);\r\n          };\r\n          window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel = function (x, y, x1, y1, x2, y2) {\r\n              return new window.SVGPathSegCurvetoCubicRel(undefined, x, y, x1, y1, x2, y2);\r\n          };\r\n          window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs = function (x, y, x1, y1) {\r\n              return new window.SVGPathSegCurvetoQuadraticAbs(undefined, x, y, x1, y1);\r\n          };\r\n          window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel = function (x, y, x1, y1) {\r\n              return new window.SVGPathSegCurvetoQuadraticRel(undefined, x, y, x1, y1);\r\n          };\r\n          window.SVGPathElement.prototype.createSVGPathSegArcAbs = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\r\n              return new window.SVGPathSegArcAbs(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\r\n          };\r\n          window.SVGPathElement.prototype.createSVGPathSegArcRel = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\r\n              return new window.SVGPathSegArcRel(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\r\n          };\r\n          window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs = function (x) {\r\n              return new window.SVGPathSegLinetoHorizontalAbs(undefined, x);\r\n          };\r\n          window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel = function (x) {\r\n              return new window.SVGPathSegLinetoHorizontalRel(undefined, x);\r\n          };\r\n          window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs = function (y) {\r\n              return new window.SVGPathSegLinetoVerticalAbs(undefined, y);\r\n          };\r\n          window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel = function (y) {\r\n              return new window.SVGPathSegLinetoVerticalRel(undefined, y);\r\n          };\r\n          window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs = function (x, y, x2, y2) {\r\n              return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, x, y, x2, y2);\r\n          };\r\n          window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel = function (x, y, x2, y2) {\r\n              return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, x, y, x2, y2);\r\n          };\r\n          window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs = function (x, y) {\r\n              return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, x, y);\r\n          };\r\n          window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel = function (x, y) {\r\n              return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, x, y);\r\n          };\r\n          if (!('getPathSegAtLength' in window.SVGPathElement.prototype)) {\r\n              // Add getPathSegAtLength to SVGPathElement.\r\n              // Spec: https://www.w3.org/TR/SVG11/single-page.html#paths-__svg__SVGPathElement__getPathSegAtLength\r\n              // This polyfill requires SVGPathElement.getTotalLength to implement the distance-along-a-path algorithm.\r\n              window.SVGPathElement.prototype.getPathSegAtLength = function (distance) {\r\n                  if (distance === undefined || !isFinite(distance))\r\n                      throw 'Invalid arguments.';\r\n                  var measurementElement = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n                  measurementElement.setAttribute('d', this.getAttribute('d'));\r\n                  var lastPathSegment = measurementElement.pathSegList.numberOfItems - 1;\r\n                  // If the path is empty, return 0.\r\n                  if (lastPathSegment <= 0)\r\n                      return 0;\r\n                  do {\r\n                      measurementElement.pathSegList.removeItem(lastPathSegment);\r\n                      if (distance > measurementElement.getTotalLength())\r\n                          break;\r\n                      lastPathSegment--;\r\n                  } while (lastPathSegment > 0);\r\n                  return lastPathSegment;\r\n              };\r\n          }\r\n      }\r\n      if (!('SVGPathSegList' in window)) {\r\n          // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSegList\r\n          window.SVGPathSegList = function (pathElement) {\r\n              this._pathElement = pathElement;\r\n              this._list = this._parsePath(this._pathElement.getAttribute('d'));\r\n              // Use a MutationObserver to catch changes to the path's \"d\" attribute.\r\n              this._mutationObserverConfig = {\r\n                  attributes: true,\r\n                  attributeFilter: ['d']\r\n              };\r\n              this._pathElementMutationObserver = new MutationObserver(this._updateListFromPathMutations.bind(this));\r\n              this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\r\n          };\r\n          window.SVGPathSegList.prototype.classname = 'SVGPathSegList';\r\n          Object.defineProperty(window.SVGPathSegList.prototype, 'numberOfItems', {\r\n              get: function () {\r\n                  this._checkPathSynchronizedToList();\r\n                  return this._list.length;\r\n              },\r\n              enumerable: true\r\n          });\r\n          // Add the pathSegList accessors to window.SVGPathElement.\r\n          // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGAnimatedPathData\r\n          Object.defineProperty(window.SVGPathElement.prototype, 'pathSegList', {\r\n              get: function () {\r\n                  if (!this._pathSegList)\r\n                      this._pathSegList = new window.SVGPathSegList(this);\r\n                  return this._pathSegList;\r\n              },\r\n              enumerable: true\r\n          });\r\n          // FIXME: The following are not implemented and simply return window.SVGPathElement.pathSegList.\r\n          Object.defineProperty(window.SVGPathElement.prototype, 'normalizedPathSegList', {\r\n              get: function () {\r\n                  return this.pathSegList;\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathElement.prototype, 'animatedPathSegList', {\r\n              get: function () {\r\n                  return this.pathSegList;\r\n              },\r\n              enumerable: true\r\n          });\r\n          Object.defineProperty(window.SVGPathElement.prototype, 'animatedNormalizedPathSegList', {\r\n              get: function () {\r\n                  return this.pathSegList;\r\n              },\r\n              enumerable: true\r\n          });\r\n          // Process any pending mutations to the path element and update the list as needed.\r\n          // This should be the first call of all public functions and is needed because\r\n          // MutationObservers are not synchronous so we can have pending asynchronous mutations.\r\n          window.SVGPathSegList.prototype._checkPathSynchronizedToList = function () {\r\n              this._updateListFromPathMutations(this._pathElementMutationObserver.takeRecords());\r\n          };\r\n          window.SVGPathSegList.prototype._updateListFromPathMutations = function (mutationRecords) {\r\n              if (!this._pathElement)\r\n                  return;\r\n              var hasPathMutations = false;\r\n              mutationRecords.forEach(function (record) {\r\n                  if (record.attributeName == 'd')\r\n                      hasPathMutations = true;\r\n              });\r\n              if (hasPathMutations)\r\n                  this._list = this._parsePath(this._pathElement.getAttribute('d'));\r\n          };\r\n          // Serialize the list and update the path's 'd' attribute.\r\n          window.SVGPathSegList.prototype._writeListToPath = function () {\r\n              this._pathElementMutationObserver.disconnect();\r\n              this._pathElement.setAttribute('d', window.SVGPathSegList._pathSegArrayAsString(this._list));\r\n              this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\r\n          };\r\n          // When a path segment changes the list needs to be synchronized back to the path element.\r\n          window.SVGPathSegList.prototype.segmentChanged = function (pathSeg) {\r\n              this._writeListToPath();\r\n          };\r\n          window.SVGPathSegList.prototype.clear = function () {\r\n              this._checkPathSynchronizedToList();\r\n              this._list.forEach(function (pathSeg) {\r\n                  pathSeg._owningPathSegList = null;\r\n              });\r\n              this._list = [];\r\n              this._writeListToPath();\r\n          };\r\n          window.SVGPathSegList.prototype.initialize = function (newItem) {\r\n              this._checkPathSynchronizedToList();\r\n              this._list = [newItem];\r\n              newItem._owningPathSegList = this;\r\n              this._writeListToPath();\r\n              return newItem;\r\n          };\r\n          window.SVGPathSegList.prototype._checkValidIndex = function (index) {\r\n              if (isNaN(index) || index < 0 || index >= this.numberOfItems)\r\n                  throw 'INDEX_SIZE_ERR';\r\n          };\r\n          window.SVGPathSegList.prototype.getItem = function (index) {\r\n              this._checkPathSynchronizedToList();\r\n              this._checkValidIndex(index);\r\n              return this._list[index];\r\n          };\r\n          window.SVGPathSegList.prototype.insertItemBefore = function (newItem, index) {\r\n              this._checkPathSynchronizedToList();\r\n              // Spec: If the index is greater than or equal to numberOfItems, then the new item is appended to the end of the list.\r\n              if (index > this.numberOfItems)\r\n                  index = this.numberOfItems;\r\n              if (newItem._owningPathSegList) {\r\n                  // SVG2 spec says to make a copy.\r\n                  newItem = newItem.clone();\r\n              }\r\n              this._list.splice(index, 0, newItem);\r\n              newItem._owningPathSegList = this;\r\n              this._writeListToPath();\r\n              return newItem;\r\n          };\r\n          window.SVGPathSegList.prototype.replaceItem = function (newItem, index) {\r\n              this._checkPathSynchronizedToList();\r\n              if (newItem._owningPathSegList) {\r\n                  // SVG2 spec says to make a copy.\r\n                  newItem = newItem.clone();\r\n              }\r\n              this._checkValidIndex(index);\r\n              this._list[index] = newItem;\r\n              newItem._owningPathSegList = this;\r\n              this._writeListToPath();\r\n              return newItem;\r\n          };\r\n          window.SVGPathSegList.prototype.removeItem = function (index) {\r\n              this._checkPathSynchronizedToList();\r\n              this._checkValidIndex(index);\r\n              var item = this._list[index];\r\n              this._list.splice(index, 1);\r\n              this._writeListToPath();\r\n              return item;\r\n          };\r\n          window.SVGPathSegList.prototype.appendItem = function (newItem) {\r\n              this._checkPathSynchronizedToList();\r\n              if (newItem._owningPathSegList) {\r\n                  // SVG2 spec says to make a copy.\r\n                  newItem = newItem.clone();\r\n              }\r\n              this._list.push(newItem);\r\n              newItem._owningPathSegList = this;\r\n              // TODO: Optimize this to just append to the existing attribute.\r\n              this._writeListToPath();\r\n              return newItem;\r\n          };\r\n          window.SVGPathSegList._pathSegArrayAsString = function (pathSegArray) {\r\n              var string = '';\r\n              var first = true;\r\n              pathSegArray.forEach(function (pathSeg) {\r\n                  if (first) {\r\n                      first = false;\r\n                      string += pathSeg._asPathString();\r\n                  }\r\n                  else {\r\n                      string += ' ' + pathSeg._asPathString();\r\n                  }\r\n              });\r\n              return string;\r\n          };\r\n          // This closely follows SVGPathParser::parsePath from Source/core/svg/SVGPathParser.cpp.\r\n          window.SVGPathSegList.prototype._parsePath = function (string) {\r\n              if (!string || string.length == 0)\r\n                  return [];\r\n              var owningPathSegList = this;\r\n              var Builder = function () {\r\n                  this.pathSegList = [];\r\n              };\r\n              Builder.prototype.appendSegment = function (pathSeg) {\r\n                  this.pathSegList.push(pathSeg);\r\n              };\r\n              var Source = function (string) {\r\n                  this._string = string;\r\n                  this._currentIndex = 0;\r\n                  this._endIndex = this._string.length;\r\n                  this._previousCommand = window.SVGPathSeg.PATHSEG_UNKNOWN;\r\n                  this._skipOptionalSpaces();\r\n              };\r\n              Source.prototype._isCurrentSpace = function () {\r\n                  var character = this._string[this._currentIndex];\r\n                  return (character <= ' ' &&\r\n                      (character == ' ' ||\r\n                          character == '\\n' ||\r\n                          character == '\\t' ||\r\n                          character == '\\r' ||\r\n                          character == '\\f'));\r\n              };\r\n              Source.prototype._skipOptionalSpaces = function () {\r\n                  while (this._currentIndex < this._endIndex && this._isCurrentSpace())\r\n                      this._currentIndex++;\r\n                  return this._currentIndex < this._endIndex;\r\n              };\r\n              Source.prototype._skipOptionalSpacesOrDelimiter = function () {\r\n                  if (this._currentIndex < this._endIndex &&\r\n                      !this._isCurrentSpace() &&\r\n                      this._string.charAt(this._currentIndex) != ',')\r\n                      return false;\r\n                  if (this._skipOptionalSpaces()) {\r\n                      if (this._currentIndex < this._endIndex &&\r\n                          this._string.charAt(this._currentIndex) == ',') {\r\n                          this._currentIndex++;\r\n                          this._skipOptionalSpaces();\r\n                      }\r\n                  }\r\n                  return this._currentIndex < this._endIndex;\r\n              };\r\n              Source.prototype.hasMoreData = function () {\r\n                  return this._currentIndex < this._endIndex;\r\n              };\r\n              Source.prototype.peekSegmentType = function () {\r\n                  var lookahead = this._string[this._currentIndex];\r\n                  return this._pathSegTypeFromChar(lookahead);\r\n              };\r\n              Source.prototype._pathSegTypeFromChar = function (lookahead) {\r\n                  switch (lookahead) {\r\n                      case 'Z':\r\n                      case 'z':\r\n                          return window.SVGPathSeg.PATHSEG_CLOSEPATH;\r\n                      case 'M':\r\n                          return window.SVGPathSeg.PATHSEG_MOVETO_ABS;\r\n                      case 'm':\r\n                          return window.SVGPathSeg.PATHSEG_MOVETO_REL;\r\n                      case 'L':\r\n                          return window.SVGPathSeg.PATHSEG_LINETO_ABS;\r\n                      case 'l':\r\n                          return window.SVGPathSeg.PATHSEG_LINETO_REL;\r\n                      case 'C':\r\n                          return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS;\r\n                      case 'c':\r\n                          return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL;\r\n                      case 'Q':\r\n                          return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS;\r\n                      case 'q':\r\n                          return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL;\r\n                      case 'A':\r\n                          return window.SVGPathSeg.PATHSEG_ARC_ABS;\r\n                      case 'a':\r\n                          return window.SVGPathSeg.PATHSEG_ARC_REL;\r\n                      case 'H':\r\n                          return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS;\r\n                      case 'h':\r\n                          return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL;\r\n                      case 'V':\r\n                          return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS;\r\n                      case 'v':\r\n                          return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL;\r\n                      case 'S':\r\n                          return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS;\r\n                      case 's':\r\n                          return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL;\r\n                      case 'T':\r\n                          return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS;\r\n                      case 't':\r\n                          return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL;\r\n                      default:\r\n                          return window.SVGPathSeg.PATHSEG_UNKNOWN;\r\n                  }\r\n              };\r\n              Source.prototype._nextCommandHelper = function (lookahead, previousCommand) {\r\n                  // Check for remaining coordinates in the current command.\r\n                  if ((lookahead == '+' ||\r\n                      lookahead == '-' ||\r\n                      lookahead == '.' ||\r\n                      (lookahead >= '0' && lookahead <= '9')) &&\r\n                      previousCommand != window.SVGPathSeg.PATHSEG_CLOSEPATH) {\r\n                      if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_ABS)\r\n                          return window.SVGPathSeg.PATHSEG_LINETO_ABS;\r\n                      if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_REL)\r\n                          return window.SVGPathSeg.PATHSEG_LINETO_REL;\r\n                      return previousCommand;\r\n                  }\r\n                  return window.SVGPathSeg.PATHSEG_UNKNOWN;\r\n              };\r\n              Source.prototype.initialCommandIsMoveTo = function () {\r\n                  // If the path is empty it is still valid, so return true.\r\n                  if (!this.hasMoreData())\r\n                      return true;\r\n                  var command = this.peekSegmentType();\r\n                  // Path must start with moveTo.\r\n                  return (command == window.SVGPathSeg.PATHSEG_MOVETO_ABS ||\r\n                      command == window.SVGPathSeg.PATHSEG_MOVETO_REL);\r\n              };\r\n              // Parse a number from an SVG path. This very closely follows genericParseNumber(...) from Source/core/svg/SVGParserUtilities.cpp.\r\n              // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-PathDataBNF\r\n              Source.prototype._parseNumber = function () {\r\n                  var exponent = 0;\r\n                  var integer = 0;\r\n                  var frac = 1;\r\n                  var decimal = 0;\r\n                  var sign = 1;\r\n                  var expsign = 1;\r\n                  var startIndex = this._currentIndex;\r\n                  this._skipOptionalSpaces();\r\n                  // Read the sign.\r\n                  if (this._currentIndex < this._endIndex &&\r\n                      this._string.charAt(this._currentIndex) == '+')\r\n                      this._currentIndex++;\r\n                  else if (this._currentIndex < this._endIndex &&\r\n                      this._string.charAt(this._currentIndex) == '-') {\r\n                      this._currentIndex++;\r\n                      sign = -1;\r\n                  }\r\n                  if (this._currentIndex == this._endIndex ||\r\n                      ((this._string.charAt(this._currentIndex) < '0' ||\r\n                          this._string.charAt(this._currentIndex) > '9') &&\r\n                          this._string.charAt(this._currentIndex) != '.'))\r\n                      // The first character of a number must be one of [0-9+-.].\r\n                      return undefined;\r\n                  // Read the integer part, build right-to-left.\r\n                  var startIntPartIndex = this._currentIndex;\r\n                  while (this._currentIndex < this._endIndex &&\r\n                      this._string.charAt(this._currentIndex) >= '0' &&\r\n                      this._string.charAt(this._currentIndex) <= '9')\r\n                      this._currentIndex++; // Advance to first non-digit.\r\n                  if (this._currentIndex != startIntPartIndex) {\r\n                      var scanIntPartIndex = this._currentIndex - 1;\r\n                      var multiplier = 1;\r\n                      while (scanIntPartIndex >= startIntPartIndex) {\r\n                          integer +=\r\n                              multiplier * (this._string.charAt(scanIntPartIndex--) - '0');\r\n                          multiplier *= 10;\r\n                      }\r\n                  }\r\n                  // Read the decimals.\r\n                  if (this._currentIndex < this._endIndex &&\r\n                      this._string.charAt(this._currentIndex) == '.') {\r\n                      this._currentIndex++;\r\n                      // There must be a least one digit following the .\r\n                      if (this._currentIndex >= this._endIndex ||\r\n                          this._string.charAt(this._currentIndex) < '0' ||\r\n                          this._string.charAt(this._currentIndex) > '9')\r\n                          return undefined;\r\n                      while (this._currentIndex < this._endIndex &&\r\n                          this._string.charAt(this._currentIndex) >= '0' &&\r\n                          this._string.charAt(this._currentIndex) <= '9') {\r\n                          frac *= 10;\r\n                          decimal += (this._string.charAt(this._currentIndex) - '0') / frac;\r\n                          this._currentIndex += 1;\r\n                      }\r\n                  }\r\n                  // Read the exponent part.\r\n                  if (this._currentIndex != startIndex &&\r\n                      this._currentIndex + 1 < this._endIndex &&\r\n                      (this._string.charAt(this._currentIndex) == 'e' ||\r\n                          this._string.charAt(this._currentIndex) == 'E') &&\r\n                      this._string.charAt(this._currentIndex + 1) != 'x' &&\r\n                      this._string.charAt(this._currentIndex + 1) != 'm') {\r\n                      this._currentIndex++;\r\n                      // Read the sign of the exponent.\r\n                      if (this._string.charAt(this._currentIndex) == '+') {\r\n                          this._currentIndex++;\r\n                      }\r\n                      else if (this._string.charAt(this._currentIndex) == '-') {\r\n                          this._currentIndex++;\r\n                          expsign = -1;\r\n                      }\r\n                      // There must be an exponent.\r\n                      if (this._currentIndex >= this._endIndex ||\r\n                          this._string.charAt(this._currentIndex) < '0' ||\r\n                          this._string.charAt(this._currentIndex) > '9')\r\n                          return undefined;\r\n                      while (this._currentIndex < this._endIndex &&\r\n                          this._string.charAt(this._currentIndex) >= '0' &&\r\n                          this._string.charAt(this._currentIndex) <= '9') {\r\n                          exponent *= 10;\r\n                          exponent += this._string.charAt(this._currentIndex) - '0';\r\n                          this._currentIndex++;\r\n                      }\r\n                  }\r\n                  var number = integer + decimal;\r\n                  number *= sign;\r\n                  if (exponent)\r\n                      number *= Math.pow(10, expsign * exponent);\r\n                  if (startIndex == this._currentIndex)\r\n                      return undefined;\r\n                  this._skipOptionalSpacesOrDelimiter();\r\n                  return number;\r\n              };\r\n              Source.prototype._parseArcFlag = function () {\r\n                  if (this._currentIndex >= this._endIndex)\r\n                      return undefined;\r\n                  var flag = false;\r\n                  var flagChar = this._string.charAt(this._currentIndex++);\r\n                  if (flagChar == '0')\r\n                      flag = false;\r\n                  else if (flagChar == '1')\r\n                      flag = true;\r\n                  else\r\n                      return undefined;\r\n                  this._skipOptionalSpacesOrDelimiter();\r\n                  return flag;\r\n              };\r\n              Source.prototype.parseSegment = function () {\r\n                  var lookahead = this._string[this._currentIndex];\r\n                  var command = this._pathSegTypeFromChar(lookahead);\r\n                  if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) {\r\n                      // Possibly an implicit command. Not allowed if this is the first command.\r\n                      if (this._previousCommand == window.SVGPathSeg.PATHSEG_UNKNOWN)\r\n                          return null;\r\n                      command = this._nextCommandHelper(lookahead, this._previousCommand);\r\n                      if (command == window.SVGPathSeg.PATHSEG_UNKNOWN)\r\n                          return null;\r\n                  }\r\n                  else {\r\n                      this._currentIndex++;\r\n                  }\r\n                  this._previousCommand = command;\r\n                  switch (command) {\r\n                      case window.SVGPathSeg.PATHSEG_MOVETO_REL:\r\n                          return new window.SVGPathSegMovetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\r\n                      case window.SVGPathSeg.PATHSEG_MOVETO_ABS:\r\n                          return new window.SVGPathSegMovetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\r\n                      case window.SVGPathSeg.PATHSEG_LINETO_REL:\r\n                          return new window.SVGPathSegLinetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\r\n                      case window.SVGPathSeg.PATHSEG_LINETO_ABS:\r\n                          return new window.SVGPathSegLinetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\r\n                      case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\r\n                          return new window.SVGPathSegLinetoHorizontalRel(owningPathSegList, this._parseNumber());\r\n                      case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\r\n                          return new window.SVGPathSegLinetoHorizontalAbs(owningPathSegList, this._parseNumber());\r\n                      case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\r\n                          return new window.SVGPathSegLinetoVerticalRel(owningPathSegList, this._parseNumber());\r\n                      case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\r\n                          return new window.SVGPathSegLinetoVerticalAbs(owningPathSegList, this._parseNumber());\r\n                      case window.SVGPathSeg.PATHSEG_CLOSEPATH:\r\n                          this._skipOptionalSpaces();\r\n                          return new window.SVGPathSegClosePath(owningPathSegList);\r\n                      case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\r\n                          var points = {\r\n                              x1: this._parseNumber(),\r\n                              y1: this._parseNumber(),\r\n                              x2: this._parseNumber(),\r\n                              y2: this._parseNumber(),\r\n                              x: this._parseNumber(),\r\n                              y: this._parseNumber()\r\n                          };\r\n                          return new window.SVGPathSegCurvetoCubicRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\r\n                      case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\r\n                          var points = {\r\n                              x1: this._parseNumber(),\r\n                              y1: this._parseNumber(),\r\n                              x2: this._parseNumber(),\r\n                              y2: this._parseNumber(),\r\n                              x: this._parseNumber(),\r\n                              y: this._parseNumber()\r\n                          };\r\n                          return new window.SVGPathSegCurvetoCubicAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\r\n                      case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\r\n                          var points = {\r\n                              x2: this._parseNumber(),\r\n                              y2: this._parseNumber(),\r\n                              x: this._parseNumber(),\r\n                              y: this._parseNumber()\r\n                          };\r\n                          return new window.SVGPathSegCurvetoCubicSmoothRel(owningPathSegList, points.x, points.y, points.x2, points.y2);\r\n                      case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\r\n                          var points = {\r\n                              x2: this._parseNumber(),\r\n                              y2: this._parseNumber(),\r\n                              x: this._parseNumber(),\r\n                              y: this._parseNumber()\r\n                          };\r\n                          return new window.SVGPathSegCurvetoCubicSmoothAbs(owningPathSegList, points.x, points.y, points.x2, points.y2);\r\n                      case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\r\n                          var points = {\r\n                              x1: this._parseNumber(),\r\n                              y1: this._parseNumber(),\r\n                              x: this._parseNumber(),\r\n                              y: this._parseNumber()\r\n                          };\r\n                          return new window.SVGPathSegCurvetoQuadraticRel(owningPathSegList, points.x, points.y, points.x1, points.y1);\r\n                      case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\r\n                          var points = {\r\n                              x1: this._parseNumber(),\r\n                              y1: this._parseNumber(),\r\n                              x: this._parseNumber(),\r\n                              y: this._parseNumber()\r\n                          };\r\n                          return new window.SVGPathSegCurvetoQuadraticAbs(owningPathSegList, points.x, points.y, points.x1, points.y1);\r\n                      case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\r\n                          return new window.SVGPathSegCurvetoQuadraticSmoothRel(owningPathSegList, this._parseNumber(), this._parseNumber());\r\n                      case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\r\n                          return new window.SVGPathSegCurvetoQuadraticSmoothAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\r\n                      case window.SVGPathSeg.PATHSEG_ARC_REL:\r\n                          var points = {\r\n                              x1: this._parseNumber(),\r\n                              y1: this._parseNumber(),\r\n                              arcAngle: this._parseNumber(),\r\n                              arcLarge: this._parseArcFlag(),\r\n                              arcSweep: this._parseArcFlag(),\r\n                              x: this._parseNumber(),\r\n                              y: this._parseNumber()\r\n                          };\r\n                          return new window.SVGPathSegArcRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\r\n                      case window.SVGPathSeg.PATHSEG_ARC_ABS:\r\n                          var points = {\r\n                              x1: this._parseNumber(),\r\n                              y1: this._parseNumber(),\r\n                              arcAngle: this._parseNumber(),\r\n                              arcLarge: this._parseArcFlag(),\r\n                              arcSweep: this._parseArcFlag(),\r\n                              x: this._parseNumber(),\r\n                              y: this._parseNumber()\r\n                          };\r\n                          return new window.SVGPathSegArcAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\r\n                      default:\r\n                          throw 'Unknown path seg type.';\r\n                  }\r\n              };\r\n              var builder = new Builder();\r\n              var source = new Source(string);\r\n              if (!source.initialCommandIsMoveTo())\r\n                  return [];\r\n              while (source.hasMoreData()) {\r\n                  var pathSeg = source.parseSegment();\r\n                  if (!pathSeg)\r\n                      return [];\r\n                  builder.appendSegment(pathSeg);\r\n              }\r\n              return builder.pathSegList;\r\n          };\r\n      }\r\n  })();\r\n  // String.padEnd polyfill for IE11\r\n  //\r\n  // https://github.com/uxitten/polyfill/blob/master/string.polyfill.js\r\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd\r\n  if (!String.prototype.padEnd) {\r\n      String.prototype.padEnd = function padEnd(targetLength, padString) {\r\n          targetLength = targetLength >> 0; //floor if number or convert non-number to 0;\r\n          padString = String(typeof padString !== 'undefined' ? padString : ' ');\r\n          if (this.length > targetLength) {\r\n              return String(this);\r\n          }\r\n          else {\r\n              targetLength = targetLength - this.length;\r\n              if (targetLength > padString.length) {\r\n                  padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed\r\n              }\r\n              return String(this) + padString.slice(0, targetLength);\r\n          }\r\n      };\r\n  }\r\n  // Object.assign polyfill for IE11\r\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Polyfill\r\n  if (typeof Object.assign !== 'function') {\r\n      // Must be writable: true, enumerable: false, configurable: true\r\n      Object.defineProperty(Object, 'assign', {\r\n          value: function assign(target, varArgs) {\r\n              if (target === null || target === undefined) {\r\n                  throw new TypeError('Cannot convert undefined or null to object');\r\n              }\r\n              var to = Object(target);\r\n              for (var index = 1; index < arguments.length; index++) {\r\n                  var nextSource = arguments[index];\r\n                  if (nextSource !== null && nextSource !== undefined) {\r\n                      for (var nextKey in nextSource) {\r\n                          // Avoid bugs when hasOwnProperty is shadowed\r\n                          if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\r\n                              to[nextKey] = nextSource[nextKey];\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n              return to;\r\n          },\r\n          writable: true,\r\n          configurable: true\r\n      });\r\n  }\r\n  /* jshint ignore:end */\n\n  Chart.prototype.axis = function () { };\r\n  Chart.prototype.axis.labels = function (labels) {\r\n      var $$ = this.internal;\r\n      if (arguments.length) {\r\n          Object.keys(labels).forEach(function (axisId) {\r\n              $$.axis.setLabelText(axisId, labels[axisId]);\r\n          });\r\n          $$.axis.updateLabels();\r\n      }\r\n      // TODO: return some values?\r\n  };\r\n  Chart.prototype.axis.max = function (max) {\r\n      var $$ = this.internal, config = $$.config;\r\n      if (arguments.length) {\r\n          if (typeof max === 'object') {\r\n              if (isValue(max.x)) {\r\n                  config.axis_x_max = max.x;\r\n              }\r\n              if (isValue(max.y)) {\r\n                  config.axis_y_max = max.y;\r\n              }\r\n              if (isValue(max.y2)) {\r\n                  config.axis_y2_max = max.y2;\r\n              }\r\n          }\r\n          else {\r\n              config.axis_y_max = config.axis_y2_max = max;\r\n          }\r\n          $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\r\n      }\r\n      else {\r\n          return {\r\n              x: config.axis_x_max,\r\n              y: config.axis_y_max,\r\n              y2: config.axis_y2_max\r\n          };\r\n      }\r\n  };\r\n  Chart.prototype.axis.min = function (min) {\r\n      var $$ = this.internal, config = $$.config;\r\n      if (arguments.length) {\r\n          if (typeof min === 'object') {\r\n              if (isValue(min.x)) {\r\n                  config.axis_x_min = min.x;\r\n              }\r\n              if (isValue(min.y)) {\r\n                  config.axis_y_min = min.y;\r\n              }\r\n              if (isValue(min.y2)) {\r\n                  config.axis_y2_min = min.y2;\r\n              }\r\n          }\r\n          else {\r\n              config.axis_y_min = config.axis_y2_min = min;\r\n          }\r\n          $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\r\n      }\r\n      else {\r\n          return {\r\n              x: config.axis_x_min,\r\n              y: config.axis_y_min,\r\n              y2: config.axis_y2_min\r\n          };\r\n      }\r\n  };\r\n  Chart.prototype.axis.range = function (range) {\r\n      if (arguments.length) {\r\n          if (isDefined(range.max)) {\r\n              this.axis.max(range.max);\r\n          }\r\n          if (isDefined(range.min)) {\r\n              this.axis.min(range.min);\r\n          }\r\n      }\r\n      else {\r\n          return {\r\n              max: this.axis.max(),\r\n              min: this.axis.min()\r\n          };\r\n      }\r\n  };\r\n  Chart.prototype.axis.types = function (types) {\r\n      var $$ = this.internal;\r\n      if (types === undefined) {\r\n          return {\r\n              y: $$.config.axis_y_type,\r\n              y2: $$.config.axis_y2_type\r\n          };\r\n      }\r\n      else {\r\n          if (isDefined(types.y)) {\r\n              $$.config.axis_y_type = types.y;\r\n          }\r\n          if (isDefined(types.y2)) {\r\n              $$.config.axis_y2_type = types.y2;\r\n          }\r\n          $$.updateScales();\r\n          $$.redraw();\r\n      }\r\n  };\n\n  Chart.prototype.category = function (i, category) {\r\n      var $$ = this.internal, config = $$.config;\r\n      if (arguments.length > 1) {\r\n          config.axis_x_categories[i] = category;\r\n          $$.redraw();\r\n      }\r\n      return config.axis_x_categories[i];\r\n  };\r\n  Chart.prototype.categories = function (categories) {\r\n      var $$ = this.internal, config = $$.config;\r\n      if (!arguments.length) {\r\n          return config.axis_x_categories;\r\n      }\r\n      config.axis_x_categories = categories;\r\n      $$.redraw();\r\n      return config.axis_x_categories;\r\n  };\n\n  Chart.prototype.resize = function (size) {\r\n      var $$ = this.internal, config = $$.config;\r\n      config.size_width = size ? size.width : null;\r\n      config.size_height = size ? size.height : null;\r\n      this.flush();\r\n  };\r\n  Chart.prototype.flush = function () {\r\n      var $$ = this.internal;\r\n      $$.updateAndRedraw({\r\n          withLegend: true,\r\n          withTransition: false,\r\n          withTransitionForTransform: false\r\n      });\r\n  };\r\n  Chart.prototype.destroy = function () {\r\n      var $$ = this.internal;\r\n      window.clearInterval($$.intervalForObserveInserted);\r\n      if ($$.resizeTimeout !== undefined) {\r\n          window.clearTimeout($$.resizeTimeout);\r\n      }\r\n      window.removeEventListener('resize', $$.resizeIfElementDisplayed);\r\n      // Removes the inner resize functions\r\n      $$.resizeFunction.remove();\r\n      // Unbinds from the window focus event\r\n      $$.unbindWindowFocus();\r\n      $$.selectChart.classed('c3', false).html('');\r\n      // MEMO: this is needed because the reference of some elements will not be released, then memory leak will happen.\r\n      Object.keys($$).forEach(function (key) {\r\n          $$[key] = null;\r\n      });\r\n      return null;\r\n  };\n\n  // TODO: fix\r\n  Chart.prototype.color = function (id) {\r\n      var $$ = this.internal;\r\n      return $$.color(id); // more patterns\r\n  };\n\n  Chart.prototype.data = function (targetIds) {\r\n      var targets = this.internal.data.targets;\r\n      return typeof targetIds === 'undefined'\r\n          ? targets\r\n          : targets.filter(function (t) {\r\n              return [].concat(targetIds).indexOf(t.id) >= 0;\r\n          });\r\n  };\r\n  Chart.prototype.data.shown = function (targetIds) {\r\n      return this.internal.filterTargetsToShow(this.data(targetIds));\r\n  };\r\n  /**\r\n   * Get values of the data loaded in the chart.\r\n   *\r\n   * @param {String|Array} targetId This API returns the value of specified target.\r\n   * @param flat\r\n   * @return {Array} Data values\r\n   */\r\n  Chart.prototype.data.values = function (targetId, flat) {\r\n      if (flat === void 0) { flat = true; }\r\n      var values = null;\r\n      if (targetId) {\r\n          var targets = this.data(targetId);\r\n          if (targets && isArray(targets)) {\r\n              values = targets.reduce(function (ret, v) {\r\n                  var dataValue = v.values.map(function (d) { return d.value; });\r\n                  if (flat) {\r\n                      ret = ret.concat(dataValue);\r\n                  }\r\n                  else {\r\n                      ret.push(dataValue);\r\n                  }\r\n                  return ret;\r\n              }, []);\r\n          }\r\n      }\r\n      return values;\r\n  };\r\n  Chart.prototype.data.names = function (names) {\r\n      this.internal.clearLegendItemTextBoxCache();\r\n      return this.internal.updateDataAttributes('names', names);\r\n  };\r\n  Chart.prototype.data.colors = function (colors) {\r\n      return this.internal.updateDataAttributes('colors', colors);\r\n  };\r\n  Chart.prototype.data.axes = function (axes) {\r\n      return this.internal.updateDataAttributes('axes', axes);\r\n  };\r\n  Chart.prototype.data.stackNormalized = function (normalized) {\r\n      if (normalized === undefined) {\r\n          return this.internal.isStackNormalized();\r\n      }\r\n      this.internal.config.data_stack_normalize = !!normalized;\r\n      this.internal.redraw();\r\n  };\n\n  Chart.prototype.donut = function () { };\r\n  Chart.prototype.donut.padAngle = function (padAngle) {\r\n      if (padAngle === undefined) {\r\n          return this.internal.config.donut_padAngle;\r\n      }\r\n      this.internal.config.donut_padAngle = padAngle;\r\n      this.flush();\r\n  };\n\n  Chart.prototype.flow = function (args) {\r\n      var $$ = this.internal, targets, data, notfoundIds = [], orgDataCount = $$.getMaxDataCount(), dataCount, domain, baseTarget, baseValue, length = 0, tail = 0, diff, to;\r\n      if (args.json) {\r\n          data = $$.convertJsonToData(args.json, args.keys);\r\n      }\r\n      else if (args.rows) {\r\n          data = $$.convertRowsToData(args.rows);\r\n      }\r\n      else if (args.columns) {\r\n          data = $$.convertColumnsToData(args.columns);\r\n      }\r\n      else {\r\n          return;\r\n      }\r\n      targets = $$.convertDataToTargets(data, true);\r\n      // Update/Add data\r\n      $$.data.targets.forEach(function (t) {\r\n          var found = false, i, j;\r\n          for (i = 0; i < targets.length; i++) {\r\n              if (t.id === targets[i].id) {\r\n                  found = true;\r\n                  if (t.values[t.values.length - 1]) {\r\n                      tail = t.values[t.values.length - 1].index + 1;\r\n                  }\r\n                  length = targets[i].values.length;\r\n                  for (j = 0; j < length; j++) {\r\n                      targets[i].values[j].index = tail + j;\r\n                      if (!$$.isTimeSeries()) {\r\n                          targets[i].values[j].x = tail + j;\r\n                      }\r\n                  }\r\n                  t.values = t.values.concat(targets[i].values);\r\n                  targets.splice(i, 1);\r\n                  break;\r\n              }\r\n          }\r\n          if (!found) {\r\n              notfoundIds.push(t.id);\r\n          }\r\n      });\r\n      // Append null for not found targets\r\n      $$.data.targets.forEach(function (t) {\r\n          var i, j;\r\n          for (i = 0; i < notfoundIds.length; i++) {\r\n              if (t.id === notfoundIds[i]) {\r\n                  tail = t.values[t.values.length - 1].index + 1;\r\n                  for (j = 0; j < length; j++) {\r\n                      t.values.push({\r\n                          id: t.id,\r\n                          index: tail + j,\r\n                          x: $$.isTimeSeries() ? $$.getOtherTargetX(tail + j) : tail + j,\r\n                          value: null\r\n                      });\r\n                  }\r\n              }\r\n          }\r\n      });\r\n      // Generate null values for new target\r\n      if ($$.data.targets.length) {\r\n          targets.forEach(function (t) {\r\n              var i, missing = [];\r\n              for (i = $$.data.targets[0].values[0].index; i < tail; i++) {\r\n                  missing.push({\r\n                      id: t.id,\r\n                      index: i,\r\n                      x: $$.isTimeSeries() ? $$.getOtherTargetX(i) : i,\r\n                      value: null\r\n                  });\r\n              }\r\n              t.values.forEach(function (v) {\r\n                  v.index += tail;\r\n                  if (!$$.isTimeSeries()) {\r\n                      v.x += tail;\r\n                  }\r\n              });\r\n              t.values = missing.concat(t.values);\r\n          });\r\n      }\r\n      $$.data.targets = $$.data.targets.concat(targets); // add remained\r\n      // check data count because behavior needs to change when it's only one\r\n      dataCount = $$.getMaxDataCount();\r\n      baseTarget = $$.data.targets[0];\r\n      baseValue = baseTarget.values[0];\r\n      // Update length to flow if needed\r\n      if (isDefined(args.to)) {\r\n          length = 0;\r\n          to = $$.isTimeSeries() ? $$.parseDate(args.to) : args.to;\r\n          baseTarget.values.forEach(function (v) {\r\n              if (v.x < to) {\r\n                  length++;\r\n              }\r\n          });\r\n      }\r\n      else if (isDefined(args.length)) {\r\n          length = args.length;\r\n      }\r\n      // If only one data, update the domain to flow from left edge of the chart\r\n      if (!orgDataCount) {\r\n          if ($$.isTimeSeries()) {\r\n              if (baseTarget.values.length > 1) {\r\n                  diff = baseTarget.values[baseTarget.values.length - 1].x - baseValue.x;\r\n              }\r\n              else {\r\n                  diff = baseValue.x - $$.getXDomain($$.data.targets)[0];\r\n              }\r\n          }\r\n          else {\r\n              diff = 1;\r\n          }\r\n          domain = [baseValue.x - diff, baseValue.x];\r\n          $$.updateXDomain(null, true, true, false, domain);\r\n      }\r\n      else if (orgDataCount === 1) {\r\n          if ($$.isTimeSeries()) {\r\n              diff =\r\n                  (baseTarget.values[baseTarget.values.length - 1].x - baseValue.x) / 2;\r\n              domain = [new Date(+baseValue.x - diff), new Date(+baseValue.x + diff)];\r\n              $$.updateXDomain(null, true, true, false, domain);\r\n          }\r\n      }\r\n      // Set targets\r\n      $$.updateTargets($$.data.targets);\r\n      // Redraw with new targets\r\n      $$.redraw({\r\n          flow: {\r\n              index: baseValue.index,\r\n              length: length,\r\n              duration: isValue(args.duration)\r\n                  ? args.duration\r\n                  : $$.config.transition_duration,\r\n              done: args.done,\r\n              orgDataCount: orgDataCount\r\n          },\r\n          withLegend: true,\r\n          withTransition: orgDataCount > 1,\r\n          withTrimXDomain: false,\r\n          withUpdateXAxis: true\r\n      });\r\n  };\r\n  ChartInternal.prototype.generateFlow = function (args) {\r\n      var $$ = this, config = $$.config, d3 = $$.d3;\r\n      return function () {\r\n          var targets = args.targets, flow = args.flow, drawBar = args.drawBar, drawLine = args.drawLine, drawArea = args.drawArea, cx = args.cx, cy = args.cy, xv = args.xv, xForText = args.xForText, yForText = args.yForText, duration = args.duration;\r\n          var translateX, scaleX = 1, transform, flowIndex = flow.index, flowLength = flow.length, flowStart = $$.getValueOnIndex($$.data.targets[0].values, flowIndex), flowEnd = $$.getValueOnIndex($$.data.targets[0].values, flowIndex + flowLength), orgDomain = $$.x.domain(), domain, durationForFlow = flow.duration || duration, done = flow.done || function () { }, wait = $$.generateWait();\r\n          var xgrid, xgridLines, mainRegion, mainText, mainBar, mainLine, mainArea, mainCircle;\r\n          // set flag\r\n          $$.flowing = true;\r\n          // remove head data after rendered\r\n          $$.data.targets.forEach(function (d) {\r\n              d.values.splice(0, flowLength);\r\n          });\r\n          // update x domain to generate axis elements for flow\r\n          domain = $$.updateXDomain(targets, true, true);\r\n          // update elements related to x scale\r\n          if ($$.updateXGrid) {\r\n              $$.updateXGrid(true);\r\n          }\r\n          xgrid = $$.xgrid || d3.selectAll([]); // xgrid needs to be obtained after updateXGrid\r\n          xgridLines = $$.xgridLines || d3.selectAll([]);\r\n          mainRegion = $$.mainRegion || d3.selectAll([]);\r\n          mainText = $$.mainText || d3.selectAll([]);\r\n          mainBar = $$.mainBar || d3.selectAll([]);\r\n          mainLine = $$.mainLine || d3.selectAll([]);\r\n          mainArea = $$.mainArea || d3.selectAll([]);\r\n          mainCircle = $$.mainCircle || d3.selectAll([]);\r\n          // generate transform to flow\r\n          if (!flow.orgDataCount) {\r\n              // if empty\r\n              if ($$.data.targets[0].values.length !== 1) {\r\n                  translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\r\n              }\r\n              else {\r\n                  if ($$.isTimeSeries()) {\r\n                      flowStart = $$.getValueOnIndex($$.data.targets[0].values, 0);\r\n                      flowEnd = $$.getValueOnIndex($$.data.targets[0].values, $$.data.targets[0].values.length - 1);\r\n                      translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\r\n                  }\r\n                  else {\r\n                      translateX = diffDomain(domain) / 2;\r\n                  }\r\n              }\r\n          }\r\n          else if (flow.orgDataCount === 1 ||\r\n              (flowStart && flowStart.x) === (flowEnd && flowEnd.x)) {\r\n              translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\r\n          }\r\n          else {\r\n              if ($$.isTimeSeries()) {\r\n                  translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\r\n              }\r\n              else {\r\n                  translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\r\n              }\r\n          }\r\n          scaleX = diffDomain(orgDomain) / diffDomain(domain);\r\n          transform = 'translate(' + translateX + ',0) scale(' + scaleX + ',1)';\r\n          $$.hideXGridFocus();\r\n          var flowTransition = d3\r\n              .transition()\r\n              .ease(d3.easeLinear)\r\n              .duration(durationForFlow);\r\n          wait.add($$.xAxis($$.axes.x, flowTransition));\r\n          wait.add(mainBar.transition(flowTransition).attr('transform', transform));\r\n          wait.add(mainLine.transition(flowTransition).attr('transform', transform));\r\n          wait.add(mainArea.transition(flowTransition).attr('transform', transform));\r\n          wait.add(mainCircle.transition(flowTransition).attr('transform', transform));\r\n          wait.add(mainText.transition(flowTransition).attr('transform', transform));\r\n          wait.add(mainRegion\r\n              .filter($$.isRegionOnX)\r\n              .transition(flowTransition)\r\n              .attr('transform', transform));\r\n          wait.add(xgrid.transition(flowTransition).attr('transform', transform));\r\n          wait.add(xgridLines.transition(flowTransition).attr('transform', transform));\r\n          wait(function () {\r\n              var i, shapes = [], texts = [];\r\n              // remove flowed elements\r\n              if (flowLength) {\r\n                  for (i = 0; i < flowLength; i++) {\r\n                      shapes.push('.' + CLASS.shape + '-' + (flowIndex + i));\r\n                      texts.push('.' + CLASS.text + '-' + (flowIndex + i));\r\n                  }\r\n                  $$.svg\r\n                      .selectAll('.' + CLASS.shapes)\r\n                      .selectAll(shapes)\r\n                      .remove();\r\n                  $$.svg\r\n                      .selectAll('.' + CLASS.texts)\r\n                      .selectAll(texts)\r\n                      .remove();\r\n                  $$.svg.select('.' + CLASS.xgrid).remove();\r\n              }\r\n              // draw again for removing flowed elements and reverting attr\r\n              xgrid\r\n                  .attr('transform', null)\r\n                  .attr('x1', $$.xgridAttr.x1)\r\n                  .attr('x2', $$.xgridAttr.x2)\r\n                  .attr('y1', $$.xgridAttr.y1)\r\n                  .attr('y2', $$.xgridAttr.y2)\r\n                  .style('opacity', $$.xgridAttr.opacity);\r\n              xgridLines.attr('transform', null);\r\n              xgridLines\r\n                  .select('line')\r\n                  .attr('x1', config.axis_rotated ? 0 : xv)\r\n                  .attr('x2', config.axis_rotated ? $$.width : xv);\r\n              xgridLines\r\n                  .select('text')\r\n                  .attr('x', config.axis_rotated ? $$.width : 0)\r\n                  .attr('y', xv);\r\n              mainBar.attr('transform', null).attr('d', drawBar);\r\n              mainLine.attr('transform', null).attr('d', drawLine);\r\n              mainArea.attr('transform', null).attr('d', drawArea);\r\n              mainCircle\r\n                  .attr('transform', null)\r\n                  .attr('cx', cx)\r\n                  .attr('cy', cy);\r\n              mainText\r\n                  .attr('transform', null)\r\n                  .attr('x', xForText)\r\n                  .attr('y', yForText)\r\n                  .style('fill-opacity', $$.opacityForText.bind($$));\r\n              mainRegion.attr('transform', null);\r\n              mainRegion\r\n                  .filter($$.isRegionOnX)\r\n                  .attr('x', $$.regionX.bind($$))\r\n                  .attr('width', $$.regionWidth.bind($$));\r\n              // callback for end of flow\r\n              done();\r\n              $$.flowing = false;\r\n          });\r\n      };\r\n  };\n\n  Chart.prototype.focus = function (targetIds) {\r\n      var $$ = this.internal, candidates;\r\n      targetIds = $$.mapToTargetIds(targetIds);\r\n      (candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$)))),\r\n          this.revert();\r\n      this.defocus();\r\n      candidates.classed(CLASS.focused, true).classed(CLASS.defocused, false);\r\n      if ($$.hasArcType()) {\r\n          $$.expandArc(targetIds);\r\n      }\r\n      $$.toggleFocusLegend(targetIds, true);\r\n      $$.focusedTargetIds = targetIds;\r\n      $$.defocusedTargetIds = $$.defocusedTargetIds.filter(function (id) {\r\n          return targetIds.indexOf(id) < 0;\r\n      });\r\n  };\r\n  Chart.prototype.defocus = function (targetIds) {\r\n      var $$ = this.internal, candidates;\r\n      targetIds = $$.mapToTargetIds(targetIds);\r\n      (candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$)))),\r\n          candidates.classed(CLASS.focused, false).classed(CLASS.defocused, true);\r\n      if ($$.hasArcType()) {\r\n          $$.unexpandArc(targetIds);\r\n      }\r\n      $$.toggleFocusLegend(targetIds, false);\r\n      $$.focusedTargetIds = $$.focusedTargetIds.filter(function (id) {\r\n          return targetIds.indexOf(id) < 0;\r\n      });\r\n      $$.defocusedTargetIds = targetIds;\r\n  };\r\n  Chart.prototype.revert = function (targetIds) {\r\n      var $$ = this.internal, candidates;\r\n      targetIds = $$.mapToTargetIds(targetIds);\r\n      candidates = $$.svg.selectAll($$.selectorTargets(targetIds)); // should be for all targets\r\n      candidates.classed(CLASS.focused, false).classed(CLASS.defocused, false);\r\n      if ($$.hasArcType()) {\r\n          $$.unexpandArc(targetIds);\r\n      }\r\n      if ($$.config.legend_show) {\r\n          $$.showLegend(targetIds.filter($$.isLegendToShow.bind($$)));\r\n          $$.legend\r\n              .selectAll($$.selectorLegends(targetIds))\r\n              .filter(function () {\r\n              return $$.d3.select(this).classed(CLASS.legendItemFocused);\r\n          })\r\n              .classed(CLASS.legendItemFocused, false);\r\n      }\r\n      $$.focusedTargetIds = [];\r\n      $$.defocusedTargetIds = [];\r\n  };\n\n  Chart.prototype.xgrids = function (grids) {\r\n      var $$ = this.internal, config = $$.config;\r\n      if (!grids) {\r\n          return config.grid_x_lines;\r\n      }\r\n      config.grid_x_lines = grids;\r\n      $$.redrawWithoutRescale();\r\n      return config.grid_x_lines;\r\n  };\r\n  Chart.prototype.xgrids.add = function (grids) {\r\n      var $$ = this.internal;\r\n      return this.xgrids($$.config.grid_x_lines.concat(grids ? grids : []));\r\n  };\r\n  Chart.prototype.xgrids.remove = function (params) {\r\n      // TODO: multiple\r\n      var $$ = this.internal;\r\n      $$.removeGridLines(params, true);\r\n  };\r\n  Chart.prototype.ygrids = function (grids) {\r\n      var $$ = this.internal, config = $$.config;\r\n      if (!grids) {\r\n          return config.grid_y_lines;\r\n      }\r\n      config.grid_y_lines = grids;\r\n      $$.redrawWithoutRescale();\r\n      return config.grid_y_lines;\r\n  };\r\n  Chart.prototype.ygrids.add = function (grids) {\r\n      var $$ = this.internal;\r\n      return this.ygrids($$.config.grid_y_lines.concat(grids ? grids : []));\r\n  };\r\n  Chart.prototype.ygrids.remove = function (params) {\r\n      // TODO: multiple\r\n      var $$ = this.internal;\r\n      $$.removeGridLines(params, false);\r\n  };\n\n  Chart.prototype.groups = function (groups) {\r\n      var $$ = this.internal, config = $$.config;\r\n      if (isUndefined(groups)) {\r\n          return config.data_groups;\r\n      }\r\n      config.data_groups = groups;\r\n      $$.redraw();\r\n      return config.data_groups;\r\n  };\n\n  Chart.prototype.legend = function () { };\r\n  Chart.prototype.legend.show = function (targetIds) {\r\n      var $$ = this.internal;\r\n      $$.showLegend($$.mapToTargetIds(targetIds));\r\n      $$.updateAndRedraw({ withLegend: true });\r\n  };\r\n  Chart.prototype.legend.hide = function (targetIds) {\r\n      var $$ = this.internal;\r\n      $$.hideLegend($$.mapToTargetIds(targetIds));\r\n      $$.updateAndRedraw({ withLegend: false });\r\n  };\n\n  Chart.prototype.load = function (args) {\r\n      var $$ = this.internal, config = $$.config;\r\n      // update xs if specified\r\n      if (args.xs) {\r\n          $$.addXs(args.xs);\r\n      }\r\n      // update names if exists\r\n      if ('names' in args) {\r\n          Chart.prototype.data.names.bind(this)(args.names);\r\n      }\r\n      // update classes if exists\r\n      if ('classes' in args) {\r\n          Object.keys(args.classes).forEach(function (id) {\r\n              config.data_classes[id] = args.classes[id];\r\n          });\r\n      }\r\n      // update categories if exists\r\n      if ('categories' in args && $$.isCategorized()) {\r\n          config.axis_x_categories = args.categories;\r\n      }\r\n      // update axes if exists\r\n      if ('axes' in args) {\r\n          Object.keys(args.axes).forEach(function (id) {\r\n              config.data_axes[id] = args.axes[id];\r\n          });\r\n      }\r\n      // update colors if exists\r\n      if ('colors' in args) {\r\n          Object.keys(args.colors).forEach(function (id) {\r\n              config.data_colors[id] = args.colors[id];\r\n          });\r\n      }\r\n      // use cache if exists\r\n      if ('cacheIds' in args && $$.hasCaches(args.cacheIds)) {\r\n          $$.load($$.getCaches(args.cacheIds), args.done);\r\n          return;\r\n      }\r\n      // unload if needed\r\n      if (args.unload) {\r\n          // TODO: do not unload if target will load (included in url/rows/columns)\r\n          $$.unload($$.mapToTargetIds(args.unload === true ? null : args.unload), function () {\r\n              $$.loadFromArgs(args);\r\n          });\r\n      }\r\n      else {\r\n          $$.loadFromArgs(args);\r\n      }\r\n  };\r\n  Chart.prototype.unload = function (args) {\r\n      var $$ = this.internal;\r\n      args = args || {};\r\n      if (args instanceof Array) {\r\n          args = { ids: args };\r\n      }\r\n      else if (typeof args === 'string') {\r\n          args = { ids: [args] };\r\n      }\r\n      $$.unload($$.mapToTargetIds(args.ids), function () {\r\n          $$.redraw({\r\n              withUpdateOrgXDomain: true,\r\n              withUpdateXDomain: true,\r\n              withLegend: true\r\n          });\r\n          if (args.done) {\r\n              args.done();\r\n          }\r\n      });\r\n  };\n\n  Chart.prototype.pie = function () { };\r\n  Chart.prototype.pie.padAngle = function (padAngle) {\r\n      if (padAngle === undefined) {\r\n          return this.internal.config.pie_padAngle;\r\n      }\r\n      this.internal.config.pie_padAngle = padAngle;\r\n      this.flush();\r\n  };\n\n  Chart.prototype.regions = function (regions) {\r\n      var $$ = this.internal, config = $$.config;\r\n      if (!regions) {\r\n          return config.regions;\r\n      }\r\n      config.regions = regions;\r\n      $$.redrawWithoutRescale();\r\n      return config.regions;\r\n  };\r\n  Chart.prototype.regions.add = function (regions) {\r\n      var $$ = this.internal, config = $$.config;\r\n      if (!regions) {\r\n          return config.regions;\r\n      }\r\n      config.regions = config.regions.concat(regions);\r\n      $$.redrawWithoutRescale();\r\n      return config.regions;\r\n  };\r\n  Chart.prototype.regions.remove = function (options) {\r\n      var $$ = this.internal, config = $$.config, duration, classes, regions;\r\n      options = options || {};\r\n      duration = getOption(options, 'duration', config.transition_duration);\r\n      classes = getOption(options, 'classes', [CLASS.region]);\r\n      regions = $$.main.select('.' + CLASS.regions).selectAll(classes.map(function (c) {\r\n          return '.' + c;\r\n      }));\r\n      (duration ? regions.transition().duration(duration) : regions)\r\n          .style('opacity', 0)\r\n          .remove();\r\n      config.regions = config.regions.filter(function (region) {\r\n          var found = false;\r\n          if (!region['class']) {\r\n              return true;\r\n          }\r\n          region['class'].split(' ').forEach(function (c) {\r\n              if (classes.indexOf(c) >= 0) {\r\n                  found = true;\r\n              }\r\n          });\r\n          return !found;\r\n      });\r\n      return config.regions;\r\n  };\n\n  Chart.prototype.selected = function (targetId) {\r\n      var $$ = this.internal, d3 = $$.d3;\r\n      return $$.main\r\n          .selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(targetId))\r\n          .selectAll('.' + CLASS.shape)\r\n          .filter(function () {\r\n          return d3.select(this).classed(CLASS.SELECTED);\r\n      })\r\n          .nodes()\r\n          .map(function (d) {\r\n          var data = d.__data__;\r\n          return data.data ? data.data : data;\r\n      });\r\n  };\r\n  Chart.prototype.select = function (ids, indices, resetOther) {\r\n      var $$ = this.internal, d3 = $$.d3, config = $$.config;\r\n      if (!config.data_selection_enabled) {\r\n          return;\r\n      }\r\n      $$.main\r\n          .selectAll('.' + CLASS.shapes)\r\n          .selectAll('.' + CLASS.shape)\r\n          .each(function (d, i) {\r\n          var shape = d3.select(this), id = d.data ? d.data.id : d.id, toggle = $$.getToggle(this, d).bind($$), isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0, isTargetIndex = !indices || indices.indexOf(i) >= 0, isSelected = shape.classed(CLASS.SELECTED);\r\n          // line/area selection not supported yet\r\n          if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\r\n              return;\r\n          }\r\n          if (isTargetId && isTargetIndex) {\r\n              if (config.data_selection_isselectable(d) && !isSelected) {\r\n                  toggle(true, shape.classed(CLASS.SELECTED, true), d, i);\r\n              }\r\n          }\r\n          else if (isDefined(resetOther) && resetOther) {\r\n              if (isSelected) {\r\n                  toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\r\n              }\r\n          }\r\n      });\r\n  };\r\n  Chart.prototype.unselect = function (ids, indices) {\r\n      var $$ = this.internal, d3 = $$.d3, config = $$.config;\r\n      if (!config.data_selection_enabled) {\r\n          return;\r\n      }\r\n      $$.main\r\n          .selectAll('.' + CLASS.shapes)\r\n          .selectAll('.' + CLASS.shape)\r\n          .each(function (d, i) {\r\n          var shape = d3.select(this), id = d.data ? d.data.id : d.id, toggle = $$.getToggle(this, d).bind($$), isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0, isTargetIndex = !indices || indices.indexOf(i) >= 0, isSelected = shape.classed(CLASS.SELECTED);\r\n          // line/area selection not supported yet\r\n          if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\r\n              return;\r\n          }\r\n          if (isTargetId && isTargetIndex) {\r\n              if (config.data_selection_isselectable(d)) {\r\n                  if (isSelected) {\r\n                      toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\r\n                  }\r\n              }\r\n          }\r\n      });\r\n  };\n\n  Chart.prototype.show = function (targetIds, options) {\r\n      var $$ = this.internal, targets;\r\n      targetIds = $$.mapToTargetIds(targetIds);\r\n      options = options || {};\r\n      $$.removeHiddenTargetIds(targetIds);\r\n      targets = $$.svg.selectAll($$.selectorTargets(targetIds));\r\n      targets\r\n          .transition()\r\n          .style('display', isIE() ? 'block' : 'initial', 'important')\r\n          .style('opacity', 1, 'important')\r\n          .call($$.endall, function () {\r\n          targets.style('opacity', null).style('opacity', 1);\r\n      });\r\n      if (options.withLegend) {\r\n          $$.showLegend(targetIds);\r\n      }\r\n      $$.redraw({\r\n          withUpdateOrgXDomain: true,\r\n          withUpdateXDomain: true,\r\n          withLegend: true\r\n      });\r\n  };\r\n  Chart.prototype.hide = function (targetIds, options) {\r\n      var $$ = this.internal, targets;\r\n      targetIds = $$.mapToTargetIds(targetIds);\r\n      options = options || {};\r\n      $$.addHiddenTargetIds(targetIds);\r\n      targets = $$.svg.selectAll($$.selectorTargets(targetIds));\r\n      targets\r\n          .transition()\r\n          .style('opacity', 0, 'important')\r\n          .call($$.endall, function () {\r\n          targets.style('opacity', null).style('opacity', 0);\r\n          targets.style('display', 'none');\r\n      });\r\n      if (options.withLegend) {\r\n          $$.hideLegend(targetIds);\r\n      }\r\n      $$.redraw({\r\n          withUpdateOrgXDomain: true,\r\n          withUpdateXDomain: true,\r\n          withLegend: true\r\n      });\r\n  };\r\n  Chart.prototype.toggle = function (targetIds, options) {\r\n      var that = this, $$ = this.internal;\r\n      $$.mapToTargetIds(targetIds).forEach(function (targetId) {\r\n          $$.isTargetToShow(targetId)\r\n              ? that.hide(targetId, options)\r\n              : that.show(targetId, options);\r\n      });\r\n  };\n\n  Chart.prototype.subchart = function () { };\r\n  Chart.prototype.subchart.isShown = function () {\r\n      var $$ = this.internal;\r\n      return $$.config.subchart_show;\r\n  };\r\n  Chart.prototype.subchart.show = function () {\r\n      var $$ = this.internal;\r\n      if ($$.config.subchart_show) {\r\n          return;\r\n      }\r\n      $$.config.subchart_show = true;\r\n      // insert DOM\r\n      $$.initSubchart();\r\n      // update dimensions with sub chart now visible\r\n      $$.updateDimension();\r\n      // insert brush (depends on sizes previously updated)\r\n      $$.initSubchartBrush();\r\n      // attach data\r\n      $$.updateTargetsForSubchart($$.getTargets());\r\n      // reset fade-in state\r\n      $$.mapToIds($$.data.targets).forEach(function (id) {\r\n          $$.withoutFadeIn[id] = false;\r\n      });\r\n      // redraw chart !\r\n      $$.updateAndRedraw();\r\n      // update visible targets !\r\n      $$.showTargets();\r\n  };\r\n  Chart.prototype.subchart.hide = function () {\r\n      var $$ = this.internal;\r\n      if (!$$.config.subchart_show) {\r\n          return;\r\n      }\r\n      $$.config.subchart_show = false;\r\n      // remove DOM\r\n      $$.removeSubchart();\r\n      // re-render chart\r\n      $$.redraw();\r\n  };\n\n  Chart.prototype.tooltip = function () { };\r\n  Chart.prototype.tooltip.show = function (args) {\r\n      var $$ = this.internal, targets, data, mouse = {};\r\n      // determine mouse position on the chart\r\n      if (args.mouse) {\r\n          mouse = args.mouse;\r\n      }\r\n      else {\r\n          // determine focus data\r\n          if (args.data) {\r\n              data = args.data;\r\n          }\r\n          else if (typeof args.x !== 'undefined') {\r\n              if (args.id) {\r\n                  targets = $$.data.targets.filter(function (t) {\r\n                      return t.id === args.id;\r\n                  });\r\n              }\r\n              else {\r\n                  targets = $$.data.targets;\r\n              }\r\n              data = $$.filterByX(targets, args.x).slice(0, 1)[0];\r\n          }\r\n          mouse = data ? $$.getMousePosition(data) : null;\r\n      }\r\n      // emulate mouse events to show\r\n      $$.dispatchEvent('mousemove', mouse);\r\n      $$.config.tooltip_onshow.call($$, data);\r\n  };\r\n  Chart.prototype.tooltip.hide = function () {\r\n      // TODO: get target data by checking the state of focus\r\n      this.internal.dispatchEvent('mouseout', 0);\r\n      this.internal.config.tooltip_onhide.call(this);\r\n  };\n\n  Chart.prototype.transform = function (type, targetIds) {\r\n      var $$ = this.internal, options = ['pie', 'donut'].indexOf(type) >= 0 ? { withTransform: true } : null;\r\n      $$.transformTo(targetIds, type, options);\r\n  };\r\n  ChartInternal.prototype.transformTo = function (targetIds, type, optionsForRedraw) {\r\n      var $$ = this, withTransitionForAxis = !$$.hasArcType(), options = optionsForRedraw || {\r\n          withTransitionForAxis: withTransitionForAxis\r\n      };\r\n      options.withTransitionForTransform = false;\r\n      $$.transiting = false;\r\n      $$.setTargetType(targetIds, type);\r\n      $$.updateTargets($$.data.targets); // this is needed when transforming to arc\r\n      $$.updateAndRedraw(options);\r\n  };\n\n  Chart.prototype.x = function (x) {\r\n      var $$ = this.internal;\r\n      if (arguments.length) {\r\n          $$.updateTargetX($$.data.targets, x);\r\n          $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\r\n      }\r\n      return $$.data.xs;\r\n  };\r\n  Chart.prototype.xs = function (xs) {\r\n      var $$ = this.internal;\r\n      if (arguments.length) {\r\n          $$.updateTargetXs($$.data.targets, xs);\r\n          $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\r\n      }\r\n      return $$.data.xs;\r\n  };\n\n  Chart.prototype.zoom = function (domain) {\r\n      var $$ = this.internal;\r\n      if (domain) {\r\n          if ($$.isTimeSeries()) {\r\n              domain = domain.map(function (x) {\r\n                  return $$.parseDate(x);\r\n              });\r\n          }\r\n          if ($$.config.subchart_show) {\r\n              $$.brush.selectionAsValue(domain, true);\r\n          }\r\n          else {\r\n              $$.updateXDomain(null, true, false, false, domain);\r\n              $$.redraw({ withY: $$.config.zoom_rescale, withSubchart: false });\r\n          }\r\n          $$.config.zoom_onzoom.call(this, $$.x.orgDomain());\r\n          return domain;\r\n      }\r\n      else {\r\n          return $$.x.domain();\r\n      }\r\n  };\r\n  Chart.prototype.zoom.enable = function (enabled) {\r\n      var $$ = this.internal;\r\n      $$.config.zoom_enabled = enabled;\r\n      $$.updateAndRedraw();\r\n  };\r\n  Chart.prototype.unzoom = function () {\r\n      var $$ = this.internal;\r\n      if ($$.config.subchart_show) {\r\n          $$.brush.clear();\r\n      }\r\n      else {\r\n          $$.updateXDomain(null, true, false, false, $$.subX.domain());\r\n          $$.redraw({ withY: $$.config.zoom_rescale, withSubchart: false });\r\n      }\r\n  };\r\n  Chart.prototype.zoom.max = function (max) {\r\n      var $$ = this.internal, config = $$.config, d3 = $$.d3;\r\n      if (max === 0 || max) {\r\n          config.zoom_x_max = d3.max([$$.orgXDomain[1], max]);\r\n      }\r\n      else {\r\n          return config.zoom_x_max;\r\n      }\r\n  };\r\n  Chart.prototype.zoom.min = function (min) {\r\n      var $$ = this.internal, config = $$.config, d3 = $$.d3;\r\n      if (min === 0 || min) {\r\n          config.zoom_x_min = d3.min([$$.orgXDomain[0], min]);\r\n      }\r\n      else {\r\n          return config.zoom_x_min;\r\n      }\r\n  };\r\n  Chart.prototype.zoom.range = function (range) {\r\n      if (arguments.length) {\r\n          if (isDefined(range.max)) {\r\n              this.domain.max(range.max);\r\n          }\r\n          if (isDefined(range.min)) {\r\n              this.domain.min(range.min);\r\n          }\r\n      }\r\n      else {\r\n          return {\r\n              max: this.domain.max(),\r\n              min: this.domain.min()\r\n          };\r\n      }\r\n  };\n\n  ChartInternal.prototype.initPie = function () {\r\n      var $$ = this, d3 = $$.d3;\r\n      $$.pie = d3\r\n          .pie()\r\n          .padAngle(this.getPadAngle.bind(this))\r\n          .value(function (d) {\r\n          return d.values.reduce(function (a, b) {\r\n              return a + b.value;\r\n          }, 0);\r\n      });\r\n      var orderFct = $$.getOrderFunction();\r\n      // we need to reverse the returned order if asc or desc to have the slice in expected order.\r\n      if (orderFct && ($$.isOrderAsc() || $$.isOrderDesc())) {\r\n          var defaultSort_1 = orderFct;\r\n          orderFct = function (t1, t2) { return defaultSort_1(t1, t2) * -1; };\r\n      }\r\n      $$.pie.sort(orderFct || null);\r\n  };\r\n  ChartInternal.prototype.updateRadius = function () {\r\n      var $$ = this, config = $$.config, w = config.gauge_width || config.donut_width, gaugeArcWidth = $$.filterTargetsToShow($$.data.targets).length *\r\n          $$.config.gauge_arcs_minWidth;\r\n      $$.radiusExpanded =\r\n          (Math.min($$.arcWidth, $$.arcHeight) / 2) * ($$.hasType('gauge') ? 0.85 : 1);\r\n      $$.radius = $$.radiusExpanded * 0.95;\r\n      $$.innerRadiusRatio = w ? ($$.radius - w) / $$.radius : 0.6;\r\n      $$.innerRadius =\r\n          $$.hasType('donut') || $$.hasType('gauge')\r\n              ? $$.radius * $$.innerRadiusRatio\r\n              : 0;\r\n      $$.gaugeArcWidth = w\r\n          ? w\r\n          : gaugeArcWidth <= $$.radius - $$.innerRadius\r\n              ? $$.radius - $$.innerRadius\r\n              : gaugeArcWidth <= $$.radius\r\n                  ? gaugeArcWidth\r\n                  : $$.radius;\r\n  };\r\n  ChartInternal.prototype.getPadAngle = function () {\r\n      if (this.hasType('pie')) {\r\n          return this.config.pie_padAngle || 0;\r\n      }\r\n      else if (this.hasType('donut')) {\r\n          return this.config.donut_padAngle || 0;\r\n      }\r\n      else {\r\n          return 0;\r\n      }\r\n  };\r\n  ChartInternal.prototype.updateArc = function () {\r\n      var $$ = this;\r\n      $$.svgArc = $$.getSvgArc();\r\n      $$.svgArcExpanded = $$.getSvgArcExpanded();\r\n      $$.svgArcExpandedSub = $$.getSvgArcExpanded(0.98);\r\n  };\r\n  ChartInternal.prototype.updateAngle = function (d) {\r\n      var $$ = this, config = $$.config, found = false, index = 0, gMin, gMax, gTic, gValue;\r\n      if (!config) {\r\n          return null;\r\n      }\r\n      $$.pie($$.filterTargetsToShow($$.data.targets)).forEach(function (t) {\r\n          if (!found && t.data.id === d.data.id) {\r\n              found = true;\r\n              d = t;\r\n              d.index = index;\r\n          }\r\n          index++;\r\n      });\r\n      if (isNaN(d.startAngle)) {\r\n          d.startAngle = 0;\r\n      }\r\n      if (isNaN(d.endAngle)) {\r\n          d.endAngle = d.startAngle;\r\n      }\r\n      if ($$.isGaugeType(d.data)) {\r\n          gMin = config.gauge_min;\r\n          gMax = config.gauge_max;\r\n          gTic = (Math.PI * (config.gauge_fullCircle ? 2 : 1)) / (gMax - gMin);\r\n          gValue = d.value < gMin ? 0 : d.value < gMax ? d.value - gMin : gMax - gMin;\r\n          d.startAngle = config.gauge_startingAngle;\r\n          d.endAngle = d.startAngle + gTic * gValue;\r\n      }\r\n      return found ? d : null;\r\n  };\r\n  ChartInternal.prototype.getSvgArc = function () {\r\n      var $$ = this, hasGaugeType = $$.hasType('gauge'), singleArcWidth = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length, arc = $$.d3\r\n          .arc()\r\n          .outerRadius(function (d) {\r\n          return hasGaugeType ? $$.radius - singleArcWidth * d.index : $$.radius;\r\n      })\r\n          .innerRadius(function (d) {\r\n          return hasGaugeType\r\n              ? $$.radius - singleArcWidth * (d.index + 1)\r\n              : $$.innerRadius;\r\n      }), newArc = function (d, withoutUpdate) {\r\n          var updated;\r\n          if (withoutUpdate) {\r\n              return arc(d);\r\n          } // for interpolate\r\n          updated = $$.updateAngle(d);\r\n          return updated ? arc(updated) : 'M 0 0';\r\n      };\r\n      newArc.centroid = arc.centroid;\r\n      return newArc;\r\n  };\r\n  ChartInternal.prototype.getSvgArcExpanded = function (rate) {\r\n      rate = rate || 1;\r\n      var $$ = this, hasGaugeType = $$.hasType('gauge'), singleArcWidth = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length, expandWidth = Math.min($$.radiusExpanded * rate - $$.radius, singleArcWidth * 0.8 - (1 - rate) * 100), arc = $$.d3\r\n          .arc()\r\n          .outerRadius(function (d) {\r\n          return hasGaugeType\r\n              ? $$.radius - singleArcWidth * d.index + expandWidth\r\n              : $$.radiusExpanded * rate;\r\n      })\r\n          .innerRadius(function (d) {\r\n          return hasGaugeType\r\n              ? $$.radius - singleArcWidth * (d.index + 1)\r\n              : $$.innerRadius;\r\n      });\r\n      return function (d) {\r\n          var updated = $$.updateAngle(d);\r\n          return updated ? arc(updated) : 'M 0 0';\r\n      };\r\n  };\r\n  ChartInternal.prototype.getArc = function (d, withoutUpdate, force) {\r\n      return force || this.isArcType(d.data)\r\n          ? this.svgArc(d, withoutUpdate)\r\n          : 'M 0 0';\r\n  };\r\n  ChartInternal.prototype.transformForArcLabel = function (d) {\r\n      var $$ = this, config = $$.config, updated = $$.updateAngle(d), c, x, y, h, ratio, translate = '', hasGauge = $$.hasType('gauge');\r\n      if (updated && !hasGauge) {\r\n          c = this.svgArc.centroid(updated);\r\n          x = isNaN(c[0]) ? 0 : c[0];\r\n          y = isNaN(c[1]) ? 0 : c[1];\r\n          h = Math.sqrt(x * x + y * y);\r\n          if ($$.hasType('donut') && config.donut_label_ratio) {\r\n              ratio = isFunction(config.donut_label_ratio)\r\n                  ? config.donut_label_ratio(d, $$.radius, h)\r\n                  : config.donut_label_ratio;\r\n          }\r\n          else if ($$.hasType('pie') && config.pie_label_ratio) {\r\n              ratio = isFunction(config.pie_label_ratio)\r\n                  ? config.pie_label_ratio(d, $$.radius, h)\r\n                  : config.pie_label_ratio;\r\n          }\r\n          else {\r\n              ratio =\r\n                  $$.radius && h\r\n                      ? ((36 / $$.radius > 0.375 ? 1.175 - 36 / $$.radius : 0.8) *\r\n                          $$.radius) /\r\n                          h\r\n                      : 0;\r\n          }\r\n          translate = 'translate(' + x * ratio + ',' + y * ratio + ')';\r\n      }\r\n      else if (updated &&\r\n          hasGauge &&\r\n          $$.filterTargetsToShow($$.data.targets).length > 1) {\r\n          var y1 = Math.sin(updated.endAngle - Math.PI / 2);\r\n          x = Math.cos(updated.endAngle - Math.PI / 2) * ($$.radiusExpanded + 25);\r\n          y = y1 * ($$.radiusExpanded + 15 - Math.abs(y1 * 10)) + 3;\r\n          translate = 'translate(' + x + ',' + y + ')';\r\n      }\r\n      return translate;\r\n  };\r\n  /**\r\n   * @deprecated Use `getRatio('arc', d)` instead.\r\n   */\r\n  ChartInternal.prototype.getArcRatio = function (d) {\r\n      return this.getRatio('arc', d);\r\n  };\r\n  ChartInternal.prototype.convertToArcData = function (d) {\r\n      return this.addName({\r\n          id: d.data.id,\r\n          value: d.value,\r\n          ratio: this.getRatio('arc', d),\r\n          index: d.index\r\n      });\r\n  };\r\n  ChartInternal.prototype.textForArcLabel = function (d) {\r\n      var $$ = this, updated, value, ratio, id, format;\r\n      if (!$$.shouldShowArcLabel()) {\r\n          return '';\r\n      }\r\n      updated = $$.updateAngle(d);\r\n      value = updated ? updated.value : null;\r\n      ratio = $$.getRatio('arc', updated);\r\n      id = d.data.id;\r\n      if (!$$.hasType('gauge') && !$$.meetsArcLabelThreshold(ratio)) {\r\n          return '';\r\n      }\r\n      format = $$.getArcLabelFormat();\r\n      return format\r\n          ? format(value, ratio, id)\r\n          : $$.defaultArcValueFormat(value, ratio);\r\n  };\r\n  ChartInternal.prototype.textForGaugeMinMax = function (value, isMax) {\r\n      var $$ = this, format = $$.getGaugeLabelExtents();\r\n      return format ? format(value, isMax) : value;\r\n  };\r\n  ChartInternal.prototype.expandArc = function (targetIds) {\r\n      var $$ = this, interval;\r\n      // MEMO: avoid to cancel transition\r\n      if ($$.transiting) {\r\n          interval = window.setInterval(function () {\r\n              if (!$$.transiting) {\r\n                  window.clearInterval(interval);\r\n                  if ($$.legend.selectAll('.c3-legend-item-focused').size() > 0) {\r\n                      $$.expandArc(targetIds);\r\n                  }\r\n              }\r\n          }, 10);\r\n          return;\r\n      }\r\n      targetIds = $$.mapToTargetIds(targetIds);\r\n      $$.svg\r\n          .selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc))\r\n          .each(function (d) {\r\n          if (!$$.shouldExpand(d.data.id)) {\r\n              return;\r\n          }\r\n          $$.d3\r\n              .select(this)\r\n              .selectAll('path')\r\n              .transition()\r\n              .duration($$.expandDuration(d.data.id))\r\n              .attr('d', $$.svgArcExpanded)\r\n              .transition()\r\n              .duration($$.expandDuration(d.data.id) * 2)\r\n              .attr('d', $$.svgArcExpandedSub)\r\n              .each(function (d) {\r\n              if ($$.isDonutType(d.data)) ;\r\n          });\r\n      });\r\n  };\r\n  ChartInternal.prototype.unexpandArc = function (targetIds) {\r\n      var $$ = this;\r\n      if ($$.transiting) {\r\n          return;\r\n      }\r\n      targetIds = $$.mapToTargetIds(targetIds);\r\n      $$.svg\r\n          .selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc))\r\n          .selectAll('path')\r\n          .transition()\r\n          .duration(function (d) {\r\n          return $$.expandDuration(d.data.id);\r\n      })\r\n          .attr('d', $$.svgArc);\r\n      $$.svg.selectAll('.' + CLASS.arc);\r\n  };\r\n  ChartInternal.prototype.expandDuration = function (id) {\r\n      var $$ = this, config = $$.config;\r\n      if ($$.isDonutType(id)) {\r\n          return config.donut_expand_duration;\r\n      }\r\n      else if ($$.isGaugeType(id)) {\r\n          return config.gauge_expand_duration;\r\n      }\r\n      else if ($$.isPieType(id)) {\r\n          return config.pie_expand_duration;\r\n      }\r\n      else {\r\n          return 50;\r\n      }\r\n  };\r\n  ChartInternal.prototype.shouldExpand = function (id) {\r\n      var $$ = this, config = $$.config;\r\n      return (($$.isDonutType(id) && config.donut_expand) ||\r\n          ($$.isGaugeType(id) && config.gauge_expand) ||\r\n          ($$.isPieType(id) && config.pie_expand));\r\n  };\r\n  ChartInternal.prototype.shouldShowArcLabel = function () {\r\n      var $$ = this, config = $$.config, shouldShow = true;\r\n      if ($$.hasType('donut')) {\r\n          shouldShow = config.donut_label_show;\r\n      }\r\n      else if ($$.hasType('pie')) {\r\n          shouldShow = config.pie_label_show;\r\n      }\r\n      // when gauge, always true\r\n      return shouldShow;\r\n  };\r\n  ChartInternal.prototype.meetsArcLabelThreshold = function (ratio) {\r\n      var $$ = this, config = $$.config, threshold = $$.hasType('donut')\r\n          ? config.donut_label_threshold\r\n          : config.pie_label_threshold;\r\n      return ratio >= threshold;\r\n  };\r\n  ChartInternal.prototype.getArcLabelFormat = function () {\r\n      var $$ = this, config = $$.config, format = config.pie_label_format;\r\n      if ($$.hasType('gauge')) {\r\n          format = config.gauge_label_format;\r\n      }\r\n      else if ($$.hasType('donut')) {\r\n          format = config.donut_label_format;\r\n      }\r\n      return format;\r\n  };\r\n  ChartInternal.prototype.getGaugeLabelExtents = function () {\r\n      var $$ = this, config = $$.config;\r\n      return config.gauge_label_extents;\r\n  };\r\n  ChartInternal.prototype.getArcTitle = function () {\r\n      var $$ = this;\r\n      return $$.hasType('donut') ? $$.config.donut_title : '';\r\n  };\r\n  ChartInternal.prototype.updateTargetsForArc = function (targets) {\r\n      var $$ = this, main = $$.main, mainPies, mainPieEnter, classChartArc = $$.classChartArc.bind($$), classArcs = $$.classArcs.bind($$), classFocus = $$.classFocus.bind($$);\r\n      mainPies = main\r\n          .select('.' + CLASS.chartArcs)\r\n          .selectAll('.' + CLASS.chartArc)\r\n          .data($$.pie(targets))\r\n          .attr('class', function (d) {\r\n          return classChartArc(d) + classFocus(d.data);\r\n      });\r\n      mainPieEnter = mainPies\r\n          .enter()\r\n          .append('g')\r\n          .attr('class', classChartArc);\r\n      mainPieEnter.append('g').attr('class', classArcs);\r\n      mainPieEnter\r\n          .append('text')\r\n          .attr('dy', $$.hasType('gauge') ? '-.1em' : '.35em')\r\n          .style('opacity', 0)\r\n          .style('text-anchor', 'middle')\r\n          .style('pointer-events', 'none');\r\n      // MEMO: can not keep same color..., but not bad to update color in redraw\r\n      //mainPieUpdate.exit().remove();\r\n  };\r\n  ChartInternal.prototype.initArc = function () {\r\n      var $$ = this;\r\n      $$.arcs = $$.main\r\n          .select('.' + CLASS.chart)\r\n          .append('g')\r\n          .attr('class', CLASS.chartArcs)\r\n          .attr('transform', $$.getTranslate('arc'));\r\n      $$.arcs\r\n          .append('text')\r\n          .attr('class', CLASS.chartArcsTitle)\r\n          .style('text-anchor', 'middle')\r\n          .text($$.getArcTitle());\r\n  };\r\n  ChartInternal.prototype.redrawArc = function (duration, durationForExit, withTransform) {\r\n      var $$ = this, d3 = $$.d3, config = $$.config, main = $$.main, arcs, mainArc, arcLabelLines, mainArcLabelLine, hasGaugeType = $$.hasType('gauge');\r\n      arcs = main\r\n          .selectAll('.' + CLASS.arcs)\r\n          .selectAll('.' + CLASS.arc)\r\n          .data($$.arcData.bind($$));\r\n      mainArc = arcs\r\n          .enter()\r\n          .append('path')\r\n          .attr('class', $$.classArc.bind($$))\r\n          .style('fill', function (d) {\r\n          return $$.color(d.data);\r\n      })\r\n          .style('cursor', function (d) {\r\n          return config.interaction_enabled && config.data_selection_isselectable(d)\r\n              ? 'pointer'\r\n              : null;\r\n      })\r\n          .each(function (d) {\r\n          if ($$.isGaugeType(d.data)) {\r\n              d.startAngle = d.endAngle = config.gauge_startingAngle;\r\n          }\r\n          this._current = d;\r\n      })\r\n          .merge(arcs);\r\n      if (hasGaugeType) {\r\n          arcLabelLines = main\r\n              .selectAll('.' + CLASS.arcs)\r\n              .selectAll('.' + CLASS.arcLabelLine)\r\n              .data($$.arcData.bind($$));\r\n          mainArcLabelLine = arcLabelLines\r\n              .enter()\r\n              .append('rect')\r\n              .attr('class', function (d) {\r\n              return (CLASS.arcLabelLine +\r\n                  ' ' +\r\n                  CLASS.target +\r\n                  ' ' +\r\n                  CLASS.target +\r\n                  '-' +\r\n                  d.data.id);\r\n          })\r\n              .merge(arcLabelLines);\r\n          if ($$.filterTargetsToShow($$.data.targets).length === 1) {\r\n              mainArcLabelLine.style('display', 'none');\r\n          }\r\n          else {\r\n              mainArcLabelLine\r\n                  .style('fill', function (d) {\r\n                  return $$.levelColor\r\n                      ? $$.levelColor(d.data.values.reduce(function (total, item) {\r\n                          return total + item.value;\r\n                      }, 0))\r\n                      : $$.color(d.data);\r\n              })\r\n                  .style('display', config.gauge_labelLine_show ? '' : 'none')\r\n                  .each(function (d) {\r\n                  var lineLength = 0, lineThickness = 2, x = 0, y = 0, transform = '';\r\n                  if ($$.hiddenTargetIds.indexOf(d.data.id) < 0) {\r\n                      var updated = $$.updateAngle(d), innerLineLength = ($$.gaugeArcWidth /\r\n                          $$.filterTargetsToShow($$.data.targets).length) *\r\n                          (updated.index + 1), lineAngle = updated.endAngle - Math.PI / 2, arcInnerRadius = $$.radius - innerLineLength, linePositioningAngle = lineAngle - (arcInnerRadius === 0 ? 0 : 1 / arcInnerRadius);\r\n                      lineLength = $$.radiusExpanded - $$.radius + innerLineLength;\r\n                      x = Math.cos(linePositioningAngle) * arcInnerRadius;\r\n                      y = Math.sin(linePositioningAngle) * arcInnerRadius;\r\n                      transform =\r\n                          'rotate(' +\r\n                              (lineAngle * 180) / Math.PI +\r\n                              ', ' +\r\n                              x +\r\n                              ', ' +\r\n                              y +\r\n                              ')';\r\n                  }\r\n                  d3.select(this)\r\n                      .attr('x', x)\r\n                      .attr('y', y)\r\n                      .attr('width', lineLength)\r\n                      .attr('height', lineThickness)\r\n                      .attr('transform', transform)\r\n                      .style('stroke-dasharray', '0, ' + (lineLength + lineThickness) + ', 0');\r\n              });\r\n          }\r\n      }\r\n      mainArc\r\n          .attr('transform', function (d) {\r\n          return !$$.isGaugeType(d.data) && withTransform ? 'scale(0)' : '';\r\n      })\r\n          .on('mouseover', config.interaction_enabled\r\n          ? function (d) {\r\n              var updated, arcData;\r\n              if ($$.transiting) {\r\n                  // skip while transiting\r\n                  return;\r\n              }\r\n              updated = $$.updateAngle(d);\r\n              if (updated) {\r\n                  arcData = $$.convertToArcData(updated);\r\n                  // transitions\r\n                  $$.expandArc(updated.data.id);\r\n                  $$.api.focus(updated.data.id);\r\n                  $$.toggleFocusLegend(updated.data.id, true);\r\n                  $$.config.data_onmouseover(arcData, this);\r\n              }\r\n          }\r\n          : null)\r\n          .on('mousemove', config.interaction_enabled\r\n          ? function (d) {\r\n              var updated = $$.updateAngle(d), arcData, selectedData;\r\n              if (updated) {\r\n                  (arcData = $$.convertToArcData(updated)),\r\n                      (selectedData = [arcData]);\r\n                  $$.showTooltip(selectedData, this);\r\n              }\r\n          }\r\n          : null)\r\n          .on('mouseout', config.interaction_enabled\r\n          ? function (d) {\r\n              var updated, arcData;\r\n              if ($$.transiting) {\r\n                  // skip while transiting\r\n                  return;\r\n              }\r\n              updated = $$.updateAngle(d);\r\n              if (updated) {\r\n                  arcData = $$.convertToArcData(updated);\r\n                  // transitions\r\n                  $$.unexpandArc(updated.data.id);\r\n                  $$.api.revert();\r\n                  $$.revertLegend();\r\n                  $$.hideTooltip();\r\n                  $$.config.data_onmouseout(arcData, this);\r\n              }\r\n          }\r\n          : null)\r\n          .on('click', config.interaction_enabled\r\n          ? function (d, i) {\r\n              var updated = $$.updateAngle(d), arcData;\r\n              if (updated) {\r\n                  arcData = $$.convertToArcData(updated);\r\n                  if ($$.toggleShape) {\r\n                      $$.toggleShape(this, arcData, i);\r\n                  }\r\n                  $$.config.data_onclick.call($$.api, arcData, this);\r\n              }\r\n          }\r\n          : null)\r\n          .each(function () {\r\n          $$.transiting = true;\r\n      })\r\n          .transition()\r\n          .duration(duration)\r\n          .attrTween('d', function (d) {\r\n          var updated = $$.updateAngle(d), interpolate;\r\n          if (!updated) {\r\n              return function () {\r\n                  return 'M 0 0';\r\n              };\r\n          }\r\n          //                if (this._current === d) {\r\n          //                    this._current = {\r\n          //                        startAngle: Math.PI*2,\r\n          //                        endAngle: Math.PI*2,\r\n          //                    };\r\n          //                }\r\n          if (isNaN(this._current.startAngle)) {\r\n              this._current.startAngle = 0;\r\n          }\r\n          if (isNaN(this._current.endAngle)) {\r\n              this._current.endAngle = this._current.startAngle;\r\n          }\r\n          interpolate = d3.interpolate(this._current, updated);\r\n          this._current = interpolate(0);\r\n          return function (t) {\r\n              // prevents crashing the charts once in transition and chart.destroy() has been called\r\n              if ($$.config === null) {\r\n                  return 'M 0 0';\r\n              }\r\n              var interpolated = interpolate(t);\r\n              interpolated.data = d.data; // data.id will be updated by interporator\r\n              return $$.getArc(interpolated, true);\r\n          };\r\n      })\r\n          .attr('transform', withTransform ? 'scale(1)' : '')\r\n          .style('fill', function (d) {\r\n          return $$.levelColor\r\n              ? $$.levelColor(d.data.values.reduce(function (total, item) {\r\n                  return total + item.value;\r\n              }, 0))\r\n              : $$.color(d.data.id);\r\n      }) // Where gauge reading color would receive customization.\r\n          .call($$.endall, function () {\r\n          $$.transiting = false;\r\n      });\r\n      arcs\r\n          .exit()\r\n          .transition()\r\n          .duration(durationForExit)\r\n          .style('opacity', 0)\r\n          .remove();\r\n      main\r\n          .selectAll('.' + CLASS.chartArc)\r\n          .select('text')\r\n          .style('opacity', 0)\r\n          .attr('class', function (d) {\r\n          return $$.isGaugeType(d.data) ? CLASS.gaugeValue : '';\r\n      })\r\n          .text($$.textForArcLabel.bind($$))\r\n          .attr('transform', $$.transformForArcLabel.bind($$))\r\n          .style('font-size', function (d) {\r\n          return $$.isGaugeType(d.data) &&\r\n              $$.filterTargetsToShow($$.data.targets).length === 1\r\n              ? Math.round($$.radius / 5) + 'px'\r\n              : '';\r\n      })\r\n          .transition()\r\n          .duration(duration)\r\n          .style('opacity', function (d) {\r\n          return $$.isTargetToShow(d.data.id) && $$.isArcType(d.data) ? 1 : 0;\r\n      });\r\n      main\r\n          .select('.' + CLASS.chartArcsTitle)\r\n          .style('opacity', $$.hasType('donut') || hasGaugeType ? 1 : 0);\r\n      if (hasGaugeType) {\r\n          var index_1 = 0;\r\n          var backgroundArc = $$.arcs\r\n              .select('g.' + CLASS.chartArcsBackground)\r\n              .selectAll('path.' + CLASS.chartArcsBackground)\r\n              .data($$.data.targets);\r\n          backgroundArc\r\n              .enter()\r\n              .append('path')\r\n              .attr('class', function (d, i) {\r\n              return CLASS.chartArcsBackground + ' ' + CLASS.chartArcsBackground + '-' + i;\r\n          })\r\n              .merge(backgroundArc)\r\n              .attr('d', function (d1) {\r\n              if ($$.hiddenTargetIds.indexOf(d1.id) >= 0) {\r\n                  return 'M 0 0';\r\n              }\r\n              var d = {\r\n                  data: [{ value: config.gauge_max }],\r\n                  startAngle: config.gauge_startingAngle,\r\n                  endAngle: -1 *\r\n                      config.gauge_startingAngle *\r\n                      (config.gauge_fullCircle ? Math.PI : 1),\r\n                  index: index_1++\r\n              };\r\n              return $$.getArc(d, true, true);\r\n          });\r\n          backgroundArc.exit().remove();\r\n          $$.arcs\r\n              .select('.' + CLASS.chartArcsGaugeUnit)\r\n              .attr('dy', '.75em')\r\n              .text(config.gauge_label_show ? config.gauge_units : '');\r\n          $$.arcs\r\n              .select('.' + CLASS.chartArcsGaugeMin)\r\n              .attr('dx', -1 *\r\n              ($$.innerRadius +\r\n                  ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2)) +\r\n              'px')\r\n              .attr('dy', '1.2em')\r\n              .text(config.gauge_label_show\r\n              ? $$.textForGaugeMinMax(config.gauge_min, false)\r\n              : '');\r\n          $$.arcs\r\n              .select('.' + CLASS.chartArcsGaugeMax)\r\n              .attr('dx', $$.innerRadius +\r\n              ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2) +\r\n              'px')\r\n              .attr('dy', '1.2em')\r\n              .text(config.gauge_label_show\r\n              ? $$.textForGaugeMinMax(config.gauge_max, true)\r\n              : '');\r\n      }\r\n  };\r\n  ChartInternal.prototype.initGauge = function () {\r\n      var arcs = this.arcs;\r\n      if (this.hasType('gauge')) {\r\n          arcs.append('g').attr('class', CLASS.chartArcsBackground);\r\n          arcs\r\n              .append('text')\r\n              .attr('class', CLASS.chartArcsGaugeUnit)\r\n              .style('text-anchor', 'middle')\r\n              .style('pointer-events', 'none');\r\n          arcs\r\n              .append('text')\r\n              .attr('class', CLASS.chartArcsGaugeMin)\r\n              .style('text-anchor', 'middle')\r\n              .style('pointer-events', 'none');\r\n          arcs\r\n              .append('text')\r\n              .attr('class', CLASS.chartArcsGaugeMax)\r\n              .style('text-anchor', 'middle')\r\n              .style('pointer-events', 'none');\r\n      }\r\n  };\r\n  ChartInternal.prototype.getGaugeLabelHeight = function () {\r\n      return this.config.gauge_label_show ? 20 : 0;\r\n  };\n\n  /**\r\n   * Store value into cache\r\n   *\r\n   * @param key\r\n   * @param value\r\n   */\r\n  ChartInternal.prototype.addToCache = function (key, value) {\r\n      this.cache[\"$\" + key] = value;\r\n  };\r\n  /**\r\n   * Returns a cached value or undefined\r\n   *\r\n   * @param key\r\n   * @return {*}\r\n   */\r\n  ChartInternal.prototype.getFromCache = function (key) {\r\n      return this.cache[\"$\" + key];\r\n  };\r\n  /**\r\n   * Reset cached data\r\n   */\r\n  ChartInternal.prototype.resetCache = function () {\r\n      var _this = this;\r\n      Object.keys(this.cache)\r\n          .filter(function (key) { return /^\\$/.test(key); })\r\n          .forEach(function (key) {\r\n          delete _this.cache[key];\r\n      });\r\n  };\r\n  // Old API that stores Targets\r\n  ChartInternal.prototype.hasCaches = function (ids) {\r\n      for (var i = 0; i < ids.length; i++) {\r\n          if (!(ids[i] in this.cache)) {\r\n              return false;\r\n          }\r\n      }\r\n      return true;\r\n  };\r\n  ChartInternal.prototype.addCache = function (id, target) {\r\n      this.cache[id] = this.cloneTarget(target);\r\n  };\r\n  ChartInternal.prototype.getCaches = function (ids) {\r\n      var targets = [], i;\r\n      for (i = 0; i < ids.length; i++) {\r\n          if (ids[i] in this.cache) {\r\n              targets.push(this.cloneTarget(this.cache[ids[i]]));\r\n          }\r\n      }\r\n      return targets;\r\n  };\n\n  ChartInternal.prototype.categoryName = function (i) {\r\n      var config = this.config;\r\n      return i < config.axis_x_categories.length ? config.axis_x_categories[i] : i;\r\n  };\n\n  ChartInternal.prototype.generateTargetClass = function (targetId) {\r\n      return targetId || targetId === 0 ? ('-' + targetId).replace(/\\s/g, '-') : '';\r\n  };\r\n  ChartInternal.prototype.generateClass = function (prefix, targetId) {\r\n      return ' ' + prefix + ' ' + prefix + this.generateTargetClass(targetId);\r\n  };\r\n  ChartInternal.prototype.classText = function (d) {\r\n      return this.generateClass(CLASS.text, d.index);\r\n  };\r\n  ChartInternal.prototype.classTexts = function (d) {\r\n      return this.generateClass(CLASS.texts, d.id);\r\n  };\r\n  ChartInternal.prototype.classShape = function (d) {\r\n      return this.generateClass(CLASS.shape, d.index);\r\n  };\r\n  ChartInternal.prototype.classShapes = function (d) {\r\n      return this.generateClass(CLASS.shapes, d.id);\r\n  };\r\n  ChartInternal.prototype.classLine = function (d) {\r\n      return this.classShape(d) + this.generateClass(CLASS.line, d.id);\r\n  };\r\n  ChartInternal.prototype.classLines = function (d) {\r\n      return this.classShapes(d) + this.generateClass(CLASS.lines, d.id);\r\n  };\r\n  ChartInternal.prototype.classCircle = function (d) {\r\n      return this.classShape(d) + this.generateClass(CLASS.circle, d.index);\r\n  };\r\n  ChartInternal.prototype.classCircles = function (d) {\r\n      return this.classShapes(d) + this.generateClass(CLASS.circles, d.id);\r\n  };\r\n  ChartInternal.prototype.classBar = function (d) {\r\n      return this.classShape(d) + this.generateClass(CLASS.bar, d.index);\r\n  };\r\n  ChartInternal.prototype.classBars = function (d) {\r\n      return this.classShapes(d) + this.generateClass(CLASS.bars, d.id);\r\n  };\r\n  ChartInternal.prototype.classArc = function (d) {\r\n      return this.classShape(d.data) + this.generateClass(CLASS.arc, d.data.id);\r\n  };\r\n  ChartInternal.prototype.classArcs = function (d) {\r\n      return this.classShapes(d.data) + this.generateClass(CLASS.arcs, d.data.id);\r\n  };\r\n  ChartInternal.prototype.classArea = function (d) {\r\n      return this.classShape(d) + this.generateClass(CLASS.area, d.id);\r\n  };\r\n  ChartInternal.prototype.classAreas = function (d) {\r\n      return this.classShapes(d) + this.generateClass(CLASS.areas, d.id);\r\n  };\r\n  ChartInternal.prototype.classRegion = function (d, i) {\r\n      return (this.generateClass(CLASS.region, i) + ' ' + ('class' in d ? d['class'] : ''));\r\n  };\r\n  ChartInternal.prototype.classEvent = function (d) {\r\n      return this.generateClass(CLASS.eventRect, d.index);\r\n  };\r\n  ChartInternal.prototype.classTarget = function (id) {\r\n      var $$ = this;\r\n      var additionalClassSuffix = $$.config.data_classes[id], additionalClass = '';\r\n      if (additionalClassSuffix) {\r\n          additionalClass = ' ' + CLASS.target + '-' + additionalClassSuffix;\r\n      }\r\n      return $$.generateClass(CLASS.target, id) + additionalClass;\r\n  };\r\n  ChartInternal.prototype.classFocus = function (d) {\r\n      return this.classFocused(d) + this.classDefocused(d);\r\n  };\r\n  ChartInternal.prototype.classFocused = function (d) {\r\n      return ' ' + (this.focusedTargetIds.indexOf(d.id) >= 0 ? CLASS.focused : '');\r\n  };\r\n  ChartInternal.prototype.classDefocused = function (d) {\r\n      return (' ' + (this.defocusedTargetIds.indexOf(d.id) >= 0 ? CLASS.defocused : ''));\r\n  };\r\n  ChartInternal.prototype.classChartText = function (d) {\r\n      return CLASS.chartText + this.classTarget(d.id);\r\n  };\r\n  ChartInternal.prototype.classChartLine = function (d) {\r\n      return CLASS.chartLine + this.classTarget(d.id);\r\n  };\r\n  ChartInternal.prototype.classChartBar = function (d) {\r\n      return CLASS.chartBar + this.classTarget(d.id);\r\n  };\r\n  ChartInternal.prototype.classChartArc = function (d) {\r\n      return CLASS.chartArc + this.classTarget(d.data.id);\r\n  };\r\n  ChartInternal.prototype.getTargetSelectorSuffix = function (targetId) {\r\n      var targetClass = this.generateTargetClass(targetId);\r\n      if (window.CSS && window.CSS.escape) {\r\n          return window.CSS.escape(targetClass);\r\n      }\r\n      // fallback on imperfect method for old browsers (does not handles unicode)\r\n      return targetClass.replace(/([?!@#$%^&*()=+,.<>'\":;\\[\\]\\/|~`{}\\\\])/g, '\\\\$1');\r\n  };\r\n  ChartInternal.prototype.selectorTarget = function (id, prefix) {\r\n      return (prefix || '') + '.' + CLASS.target + this.getTargetSelectorSuffix(id);\r\n  };\r\n  ChartInternal.prototype.selectorTargets = function (ids, prefix) {\r\n      var $$ = this;\r\n      ids = ids || [];\r\n      return ids.length\r\n          ? ids.map(function (id) {\r\n              return $$.selectorTarget(id, prefix);\r\n          })\r\n          : null;\r\n  };\r\n  ChartInternal.prototype.selectorLegend = function (id) {\r\n      return '.' + CLASS.legendItem + this.getTargetSelectorSuffix(id);\r\n  };\r\n  ChartInternal.prototype.selectorLegends = function (ids) {\r\n      var $$ = this;\r\n      return ids && ids.length\r\n          ? ids.map(function (id) {\r\n              return $$.selectorLegend(id);\r\n          })\r\n          : null;\r\n  };\n\n  ChartInternal.prototype.getClipPath = function (id) {\r\n      return 'url(' + (isIE(9) ? '' : document.URL.split('#')[0]) + '#' + id + ')';\r\n  };\r\n  ChartInternal.prototype.appendClip = function (parent, id) {\r\n      return parent\r\n          .append('clipPath')\r\n          .attr('id', id)\r\n          .append('rect');\r\n  };\r\n  ChartInternal.prototype.getAxisClipX = function (forHorizontal) {\r\n      // axis line width + padding for left\r\n      var left = Math.max(30, this.margin.left);\r\n      return forHorizontal ? -(1 + left) : -(left - 1);\r\n  };\r\n  ChartInternal.prototype.getAxisClipY = function (forHorizontal) {\r\n      return forHorizontal ? -20 : -this.margin.top;\r\n  };\r\n  ChartInternal.prototype.getXAxisClipX = function () {\r\n      var $$ = this;\r\n      return $$.getAxisClipX(!$$.config.axis_rotated);\r\n  };\r\n  ChartInternal.prototype.getXAxisClipY = function () {\r\n      var $$ = this;\r\n      return $$.getAxisClipY(!$$.config.axis_rotated);\r\n  };\r\n  ChartInternal.prototype.getYAxisClipX = function () {\r\n      var $$ = this;\r\n      return $$.config.axis_y_inner ? -1 : $$.getAxisClipX($$.config.axis_rotated);\r\n  };\r\n  ChartInternal.prototype.getYAxisClipY = function () {\r\n      var $$ = this;\r\n      return $$.getAxisClipY($$.config.axis_rotated);\r\n  };\r\n  ChartInternal.prototype.getAxisClipWidth = function (forHorizontal) {\r\n      var $$ = this, left = Math.max(30, $$.margin.left), right = Math.max(30, $$.margin.right);\r\n      // width + axis line width + padding for left/right\r\n      return forHorizontal ? $$.width + 2 + left + right : $$.margin.left + 20;\r\n  };\r\n  ChartInternal.prototype.getAxisClipHeight = function (forHorizontal) {\r\n      // less than 20 is not enough to show the axis label 'outer' without legend\r\n      return ((forHorizontal ? this.margin.bottom : this.margin.top + this.height) + 20);\r\n  };\r\n  ChartInternal.prototype.getXAxisClipWidth = function () {\r\n      var $$ = this;\r\n      return $$.getAxisClipWidth(!$$.config.axis_rotated);\r\n  };\r\n  ChartInternal.prototype.getXAxisClipHeight = function () {\r\n      var $$ = this;\r\n      return $$.getAxisClipHeight(!$$.config.axis_rotated);\r\n  };\r\n  ChartInternal.prototype.getYAxisClipWidth = function () {\r\n      var $$ = this;\r\n      return ($$.getAxisClipWidth($$.config.axis_rotated) +\r\n          ($$.config.axis_y_inner ? 20 : 0));\r\n  };\r\n  ChartInternal.prototype.getYAxisClipHeight = function () {\r\n      var $$ = this;\r\n      return $$.getAxisClipHeight($$.config.axis_rotated);\r\n  };\n\n  ChartInternal.prototype.generateColor = function () {\r\n      var $$ = this, config = $$.config, d3 = $$.d3, colors = config.data_colors, pattern = notEmpty(config.color_pattern)\r\n          ? config.color_pattern\r\n          : d3.schemeCategory10, callback = config.data_color, ids = [];\r\n      return function (d) {\r\n          var id = d.id || (d.data && d.data.id) || d, color;\r\n          // if callback function is provided\r\n          if (colors[id] instanceof Function) {\r\n              color = colors[id](d);\r\n          }\r\n          // if specified, choose that color\r\n          else if (colors[id]) {\r\n              color = colors[id];\r\n          }\r\n          // if not specified, choose from pattern\r\n          else {\r\n              if (ids.indexOf(id) < 0) {\r\n                  ids.push(id);\r\n              }\r\n              color = pattern[ids.indexOf(id) % pattern.length];\r\n              colors[id] = color;\r\n          }\r\n          return callback instanceof Function ? callback(color, d) : color;\r\n      };\r\n  };\r\n  ChartInternal.prototype.generateLevelColor = function () {\r\n      var $$ = this, config = $$.config, colors = config.color_pattern, threshold = config.color_threshold, asValue = threshold.unit === 'value', values = threshold.values && threshold.values.length ? threshold.values : [], max = threshold.max || 100;\r\n      return notEmpty(threshold) && notEmpty(colors)\r\n          ? function (value) {\r\n              var i, v, color = colors[colors.length - 1];\r\n              for (i = 0; i < values.length; i++) {\r\n                  v = asValue ? value : (value * 100) / max;\r\n                  if (v < values[i]) {\r\n                      color = colors[i];\r\n                      break;\r\n                  }\r\n              }\r\n              return color;\r\n          }\r\n          : null;\r\n  };\n\n  ChartInternal.prototype.getDefaultConfig = function () {\r\n      var config = {\r\n          bindto: '#chart',\r\n          svg_classname: undefined,\r\n          size_width: undefined,\r\n          size_height: undefined,\r\n          padding_left: undefined,\r\n          padding_right: undefined,\r\n          padding_top: undefined,\r\n          padding_bottom: undefined,\r\n          resize_auto: true,\r\n          zoom_enabled: false,\r\n          zoom_initialRange: undefined,\r\n          zoom_type: 'scroll',\r\n          zoom_disableDefaultBehavior: false,\r\n          zoom_privileged: false,\r\n          zoom_rescale: false,\r\n          zoom_onzoom: function () { },\r\n          zoom_onzoomstart: function () { },\r\n          zoom_onzoomend: function () { },\r\n          zoom_x_min: undefined,\r\n          zoom_x_max: undefined,\r\n          interaction_brighten: true,\r\n          interaction_enabled: true,\r\n          onmouseover: function () { },\r\n          onmouseout: function () { },\r\n          onresize: function () { },\r\n          onresized: function () { },\r\n          oninit: function () { },\r\n          onrendered: function () { },\r\n          transition_duration: 350,\r\n          data_epochs: 'epochs',\r\n          data_x: undefined,\r\n          data_xs: {},\r\n          data_xFormat: '%Y-%m-%d',\r\n          data_xLocaltime: true,\r\n          data_xSort: true,\r\n          data_idConverter: function (id) {\r\n              return id;\r\n          },\r\n          data_names: {},\r\n          data_classes: {},\r\n          data_groups: [],\r\n          data_axes: {},\r\n          data_type: undefined,\r\n          data_types: {},\r\n          data_labels: {},\r\n          data_order: 'desc',\r\n          data_regions: {},\r\n          data_color: undefined,\r\n          data_colors: {},\r\n          data_hide: false,\r\n          data_filter: undefined,\r\n          data_selection_enabled: false,\r\n          data_selection_grouped: false,\r\n          data_selection_isselectable: function () {\r\n              return true;\r\n          },\r\n          data_selection_multiple: true,\r\n          data_selection_draggable: false,\r\n          data_stack_normalize: false,\r\n          data_onclick: function () { },\r\n          data_onmouseover: function () { },\r\n          data_onmouseout: function () { },\r\n          data_onselected: function () { },\r\n          data_onunselected: function () { },\r\n          data_url: undefined,\r\n          data_headers: undefined,\r\n          data_json: undefined,\r\n          data_rows: undefined,\r\n          data_columns: undefined,\r\n          data_mimeType: undefined,\r\n          data_keys: undefined,\r\n          // configuration for no plot-able data supplied.\r\n          data_empty_label_text: '',\r\n          // subchart\r\n          subchart_show: false,\r\n          subchart_size_height: 60,\r\n          subchart_axis_x_show: true,\r\n          subchart_onbrush: function () { },\r\n          // color\r\n          color_pattern: [],\r\n          color_threshold: {},\r\n          // legend\r\n          legend_show: true,\r\n          legend_hide: false,\r\n          legend_position: 'bottom',\r\n          legend_inset_anchor: 'top-left',\r\n          legend_inset_x: 10,\r\n          legend_inset_y: 0,\r\n          legend_inset_step: undefined,\r\n          legend_item_onclick: undefined,\r\n          legend_item_onmouseover: undefined,\r\n          legend_item_onmouseout: undefined,\r\n          legend_equally: false,\r\n          legend_padding: 0,\r\n          legend_item_tile_width: 10,\r\n          legend_item_tile_height: 10,\r\n          // axis\r\n          axis_rotated: false,\r\n          axis_x_show: true,\r\n          axis_x_type: 'indexed',\r\n          axis_x_localtime: true,\r\n          axis_x_categories: [],\r\n          axis_x_tick_centered: false,\r\n          axis_x_tick_format: undefined,\r\n          axis_x_tick_culling: {},\r\n          axis_x_tick_culling_max: 10,\r\n          axis_x_tick_count: undefined,\r\n          axis_x_tick_fit: true,\r\n          axis_x_tick_values: null,\r\n          axis_x_tick_rotate: 0,\r\n          axis_x_tick_outer: true,\r\n          axis_x_tick_multiline: true,\r\n          axis_x_tick_multilineMax: 0,\r\n          axis_x_tick_width: null,\r\n          axis_x_max: undefined,\r\n          axis_x_min: undefined,\r\n          axis_x_padding: {},\r\n          axis_x_height: undefined,\r\n          axis_x_selection: undefined,\r\n          axis_x_label: {},\r\n          axis_x_inner: undefined,\r\n          axis_y_show: true,\r\n          axis_y_type: 'linear',\r\n          axis_y_max: undefined,\r\n          axis_y_min: undefined,\r\n          axis_y_inverted: false,\r\n          axis_y_center: undefined,\r\n          axis_y_inner: undefined,\r\n          axis_y_label: {},\r\n          axis_y_tick_format: undefined,\r\n          axis_y_tick_outer: true,\r\n          axis_y_tick_values: null,\r\n          axis_y_tick_rotate: 0,\r\n          axis_y_tick_count: undefined,\r\n          axis_y_tick_time_type: undefined,\r\n          axis_y_tick_time_interval: undefined,\r\n          axis_y_padding: {},\r\n          axis_y_default: undefined,\r\n          axis_y2_show: false,\r\n          axis_y2_type: 'linear',\r\n          axis_y2_max: undefined,\r\n          axis_y2_min: undefined,\r\n          axis_y2_inverted: false,\r\n          axis_y2_center: undefined,\r\n          axis_y2_inner: undefined,\r\n          axis_y2_label: {},\r\n          axis_y2_tick_format: undefined,\r\n          axis_y2_tick_outer: true,\r\n          axis_y2_tick_values: null,\r\n          axis_y2_tick_count: undefined,\r\n          axis_y2_padding: {},\r\n          axis_y2_default: undefined,\r\n          // grid\r\n          grid_x_show: false,\r\n          grid_x_type: 'tick',\r\n          grid_x_lines: [],\r\n          grid_y_show: false,\r\n          // not used\r\n          // grid_y_type: 'tick',\r\n          grid_y_lines: [],\r\n          grid_y_ticks: 10,\r\n          grid_focus_show: true,\r\n          grid_lines_front: true,\r\n          // point - point of each data\r\n          point_show: true,\r\n          point_r: 2.5,\r\n          point_sensitivity: 10,\r\n          point_focus_expand_enabled: true,\r\n          point_focus_expand_r: undefined,\r\n          point_select_r: undefined,\r\n          // line\r\n          line_connectNull: false,\r\n          line_step_type: 'step',\r\n          // bar\r\n          bar_width: undefined,\r\n          bar_width_ratio: 0.6,\r\n          bar_width_max: undefined,\r\n          bar_zerobased: true,\r\n          bar_space: 0,\r\n          // area\r\n          area_zerobased: true,\r\n          area_above: false,\r\n          // pie\r\n          pie_label_show: true,\r\n          pie_label_format: undefined,\r\n          pie_label_threshold: 0.05,\r\n          pie_label_ratio: undefined,\r\n          pie_expand: {},\r\n          pie_expand_duration: 50,\r\n          pie_padAngle: 0,\r\n          // gauge\r\n          gauge_fullCircle: false,\r\n          gauge_label_show: true,\r\n          gauge_labelLine_show: true,\r\n          gauge_label_format: undefined,\r\n          gauge_min: 0,\r\n          gauge_max: 100,\r\n          gauge_startingAngle: (-1 * Math.PI) / 2,\r\n          gauge_label_extents: undefined,\r\n          gauge_units: undefined,\r\n          gauge_width: undefined,\r\n          gauge_arcs_minWidth: 5,\r\n          gauge_expand: {},\r\n          gauge_expand_duration: 50,\r\n          // donut\r\n          donut_label_show: true,\r\n          donut_label_format: undefined,\r\n          donut_label_threshold: 0.05,\r\n          donut_label_ratio: undefined,\r\n          donut_width: undefined,\r\n          donut_title: '',\r\n          donut_expand: {},\r\n          donut_expand_duration: 50,\r\n          donut_padAngle: 0,\r\n          // spline\r\n          spline_interpolation_type: 'cardinal',\r\n          // stanford\r\n          stanford_lines: [],\r\n          stanford_regions: [],\r\n          stanford_texts: [],\r\n          stanford_scaleMin: undefined,\r\n          stanford_scaleMax: undefined,\r\n          stanford_scaleWidth: undefined,\r\n          stanford_scaleFormat: undefined,\r\n          stanford_scaleValues: undefined,\r\n          stanford_colors: undefined,\r\n          stanford_padding: {\r\n              top: 0,\r\n              right: 0,\r\n              bottom: 0,\r\n              left: 0\r\n          },\r\n          // region - region to change style\r\n          regions: [],\r\n          // tooltip - show when mouseover on each data\r\n          tooltip_show: true,\r\n          tooltip_grouped: true,\r\n          tooltip_order: undefined,\r\n          tooltip_format_title: undefined,\r\n          tooltip_format_name: undefined,\r\n          tooltip_format_value: undefined,\r\n          tooltip_horizontal: undefined,\r\n          tooltip_position: undefined,\r\n          tooltip_contents: function (d, defaultTitleFormat, defaultValueFormat, color) {\r\n              return this.getTooltipContent\r\n                  ? this.getTooltipContent(d, defaultTitleFormat, defaultValueFormat, color)\r\n                  : '';\r\n          },\r\n          tooltip_init_show: false,\r\n          tooltip_init_x: 0,\r\n          tooltip_init_position: { top: '0px', left: '50px' },\r\n          tooltip_onshow: function () { },\r\n          tooltip_onhide: function () { },\r\n          // title\r\n          title_text: undefined,\r\n          title_padding: {\r\n              top: 0,\r\n              right: 0,\r\n              bottom: 0,\r\n              left: 0\r\n          },\r\n          title_position: 'top-center'\r\n      };\r\n      Object.keys(this.additionalConfig).forEach(function (key) {\r\n          config[key] = this.additionalConfig[key];\r\n      }, this);\r\n      return config;\r\n  };\r\n  ChartInternal.prototype.additionalConfig = {};\r\n  ChartInternal.prototype.loadConfig = function (config) {\r\n      var this_config = this.config, target, keys, read;\r\n      function find() {\r\n          var key = keys.shift();\r\n          //        console.log(\"key =>\", key, \", target =>\", target);\r\n          if (key && target && typeof target === 'object' && key in target) {\r\n              target = target[key];\r\n              return find();\r\n          }\r\n          else if (!key) {\r\n              return target;\r\n          }\r\n          else {\r\n              return undefined;\r\n          }\r\n      }\r\n      Object.keys(this_config).forEach(function (key) {\r\n          target = config;\r\n          keys = key.split('_');\r\n          read = find();\r\n          //        console.log(\"CONFIG : \", key, read);\r\n          if (isDefined(read)) {\r\n              this_config[key] = read;\r\n          }\r\n      });\r\n  };\n\n  ChartInternal.prototype.convertUrlToData = function (url, mimeType, headers, keys, done) {\r\n      var $$ = this, type = mimeType ? mimeType : 'csv', f, converter;\r\n      if (type === 'json') {\r\n          f = $$.d3.json;\r\n          converter = $$.convertJsonToData;\r\n      }\r\n      else if (type === 'tsv') {\r\n          f = $$.d3.tsv;\r\n          converter = $$.convertXsvToData;\r\n      }\r\n      else {\r\n          f = $$.d3.csv;\r\n          converter = $$.convertXsvToData;\r\n      }\r\n      f(url, headers)\r\n          .then(function (data) {\r\n          done.call($$, converter.call($$, data, keys));\r\n      })\r\n          .catch(function (error) {\r\n          throw error;\r\n      });\r\n  };\r\n  ChartInternal.prototype.convertXsvToData = function (xsv) {\r\n      var keys = xsv.columns, rows = xsv;\r\n      if (rows.length === 0) {\r\n          return {\r\n              keys: keys,\r\n              rows: [keys.reduce(function (row, key) {\r\n                      var _a;\r\n                      return Object.assign(row, (_a = {}, _a[key] = null, _a));\r\n                  }, {})]\r\n          };\r\n      }\r\n      else {\r\n          // [].concat() is to convert result into a plain array otherwise\r\n          // test is not happy because rows have properties.\r\n          return { keys: keys, rows: [].concat(xsv) };\r\n      }\r\n  };\r\n  ChartInternal.prototype.convertJsonToData = function (json, keys) {\r\n      var $$ = this, new_rows = [], targetKeys, data;\r\n      if (keys) {\r\n          // when keys specified, json would be an array that includes objects\r\n          if (keys.x) {\r\n              targetKeys = keys.value.concat(keys.x);\r\n              $$.config.data_x = keys.x;\r\n          }\r\n          else {\r\n              targetKeys = keys.value;\r\n          }\r\n          new_rows.push(targetKeys);\r\n          json.forEach(function (o) {\r\n              var new_row = [];\r\n              targetKeys.forEach(function (key) {\r\n                  // convert undefined to null because undefined data will be removed in convertDataToTargets()\r\n                  var v = $$.findValueInJson(o, key);\r\n                  if (isUndefined(v)) {\r\n                      v = null;\r\n                  }\r\n                  new_row.push(v);\r\n              });\r\n              new_rows.push(new_row);\r\n          });\r\n          data = $$.convertRowsToData(new_rows);\r\n      }\r\n      else {\r\n          Object.keys(json).forEach(function (key) {\r\n              new_rows.push([key].concat(json[key]));\r\n          });\r\n          data = $$.convertColumnsToData(new_rows);\r\n      }\r\n      return data;\r\n  };\r\n  /**\r\n   * Finds value from the given nested object by the given path.\r\n   * If it's not found, then this returns undefined.\r\n   * @param {Object} object the object\r\n   * @param {string} path the path\r\n   */\r\n  ChartInternal.prototype.findValueInJson = function (object, path) {\r\n      if (path in object) {\r\n          // If object has a key that contains . or [], return the key's value\r\n          // instead of searching for an inner object.\r\n          // See https://github.com/c3js/c3/issues/1691 for details.\r\n          return object[path];\r\n      }\r\n      path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties (replace [] with .)\r\n      path = path.replace(/^\\./, ''); // strip a leading dot\r\n      var pathArray = path.split('.');\r\n      for (var i = 0; i < pathArray.length; ++i) {\r\n          var k = pathArray[i];\r\n          if (k in object) {\r\n              object = object[k];\r\n          }\r\n          else {\r\n              return;\r\n          }\r\n      }\r\n      return object;\r\n  };\r\n  /**\r\n   * Converts the rows to normalized data.\r\n   * @param {any[][]} rows The row data\r\n   * @return {Object}\r\n   */\r\n  ChartInternal.prototype.convertRowsToData = function (rows) {\r\n      var newRows = [];\r\n      var keys = rows[0];\r\n      for (var i = 1; i < rows.length; i++) {\r\n          var newRow = {};\r\n          for (var j = 0; j < rows[i].length; j++) {\r\n              if (isUndefined(rows[i][j])) {\r\n                  throw new Error('Source data is missing a component at (' + i + ',' + j + ')!');\r\n              }\r\n              newRow[keys[j]] = rows[i][j];\r\n          }\r\n          newRows.push(newRow);\r\n      }\r\n      return { keys: keys, rows: newRows };\r\n  };\r\n  /**\r\n   * Converts the columns to normalized data.\r\n   * @param {any[][]} columns The column data\r\n   * @return {Object}\r\n   */\r\n  ChartInternal.prototype.convertColumnsToData = function (columns) {\r\n      var newRows = [];\r\n      var keys = [];\r\n      for (var i = 0; i < columns.length; i++) {\r\n          var key = columns[i][0];\r\n          for (var j = 1; j < columns[i].length; j++) {\r\n              if (isUndefined(newRows[j - 1])) {\r\n                  newRows[j - 1] = {};\r\n              }\r\n              if (isUndefined(columns[i][j])) {\r\n                  throw new Error('Source data is missing a component at (' + i + ',' + j + ')!');\r\n              }\r\n              newRows[j - 1][key] = columns[i][j];\r\n          }\r\n          keys.push(key);\r\n      }\r\n      return { keys: keys, rows: newRows };\r\n  };\r\n  /**\r\n   * Converts the data format into the target format.\r\n   * @param {!Object} data\r\n   * @param {!Array} data.keys Ordered list of target IDs.\r\n   * @param {!Array} data.rows Rows of data to convert.\r\n   * @param {boolean} appendXs True to append to $$.data.xs, False to replace.\r\n   * @return {!Array}\r\n   */\r\n  ChartInternal.prototype.convertDataToTargets = function (data, appendXs) {\r\n      var $$ = this, config = $$.config, targets, ids, xs, keys, epochs;\r\n      // handles format where keys are not orderly provided\r\n      if (isArray(data)) {\r\n          keys = Object.keys(data[0]);\r\n      }\r\n      else {\r\n          keys = data.keys;\r\n          data = data.rows;\r\n      }\r\n      xs = keys.filter($$.isX, $$);\r\n      if (!$$.isStanfordGraphType()) {\r\n          ids = keys.filter($$.isNotX, $$);\r\n      }\r\n      else {\r\n          epochs = keys.filter($$.isEpochs, $$);\r\n          ids = keys.filter($$.isNotXAndNotEpochs, $$);\r\n          if (xs.length !== 1 || epochs.length !== 1 || ids.length !== 1) {\r\n              throw new Error(\"You must define the 'x' key name and the 'epochs' for Stanford Diagrams\");\r\n          }\r\n      }\r\n      // save x for update data by load when custom x and c3.x API\r\n      ids.forEach(function (id) {\r\n          var xKey = $$.getXKey(id);\r\n          if ($$.isCustomX() || $$.isTimeSeries()) {\r\n              // if included in input data\r\n              if (xs.indexOf(xKey) >= 0) {\r\n                  $$.data.xs[id] = (appendXs && $$.data.xs[id]\r\n                      ? $$.data.xs[id]\r\n                      : []).concat(data\r\n                      .map(function (d) {\r\n                      return d[xKey];\r\n                  })\r\n                      .filter(isValue)\r\n                      .map(function (rawX, i) {\r\n                      return $$.generateTargetX(rawX, id, i);\r\n                  }));\r\n              }\r\n              // if not included in input data, find from preloaded data of other id's x\r\n              else if (config.data_x) {\r\n                  $$.data.xs[id] = $$.getOtherTargetXs();\r\n              }\r\n              // if not included in input data, find from preloaded data\r\n              else if (notEmpty(config.data_xs)) {\r\n                  $$.data.xs[id] = $$.getXValuesOfXKey(xKey, $$.data.targets);\r\n              }\r\n              // MEMO: if no x included, use same x of current will be used\r\n          }\r\n          else {\r\n              $$.data.xs[id] = data.map(function (d, i) {\r\n                  return i;\r\n              });\r\n          }\r\n      });\r\n      // check x is defined\r\n      ids.forEach(function (id) {\r\n          if (!$$.data.xs[id]) {\r\n              throw new Error('x is not defined for id = \"' + id + '\".');\r\n          }\r\n      });\r\n      // convert to target\r\n      targets = ids.map(function (id, index) {\r\n          var convertedId = config.data_idConverter(id);\r\n          return {\r\n              id: convertedId,\r\n              id_org: id,\r\n              values: data\r\n                  .map(function (d, i) {\r\n                  var xKey = $$.getXKey(id), rawX = d[xKey], value = d[id] !== null && !isNaN(d[id]) ? +d[id] : null, x, returnData;\r\n                  // use x as categories if custom x and categorized\r\n                  if ($$.isCustomX() && $$.isCategorized() && !isUndefined(rawX)) {\r\n                      if (index === 0 && i === 0) {\r\n                          config.axis_x_categories = [];\r\n                      }\r\n                      x = config.axis_x_categories.indexOf(rawX);\r\n                      if (x === -1) {\r\n                          x = config.axis_x_categories.length;\r\n                          config.axis_x_categories.push(rawX);\r\n                      }\r\n                  }\r\n                  else {\r\n                      x = $$.generateTargetX(rawX, id, i);\r\n                  }\r\n                  // mark as x = undefined if value is undefined and filter to remove after mapped\r\n                  if (isUndefined(d[id]) || $$.data.xs[id].length <= i) {\r\n                      x = undefined;\r\n                  }\r\n                  returnData = { x: x, value: value, id: convertedId };\r\n                  if ($$.isStanfordGraphType()) {\r\n                      returnData.epochs = d[epochs];\r\n                  }\r\n                  return returnData;\r\n              })\r\n                  .filter(function (v) {\r\n                  return isDefined(v.x);\r\n              })\r\n          };\r\n      });\r\n      // finish targets\r\n      targets.forEach(function (t) {\r\n          var i;\r\n          // sort values by its x\r\n          if (config.data_xSort) {\r\n              t.values = t.values.sort(function (v1, v2) {\r\n                  var x1 = v1.x || v1.x === 0 ? v1.x : Infinity, x2 = v2.x || v2.x === 0 ? v2.x : Infinity;\r\n                  return x1 - x2;\r\n              });\r\n          }\r\n          // indexing each value\r\n          i = 0;\r\n          t.values.forEach(function (v) {\r\n              v.index = i++;\r\n          });\r\n          // this needs to be sorted because its index and value.index is identical\r\n          $$.data.xs[t.id].sort(function (v1, v2) {\r\n              return v1 - v2;\r\n          });\r\n      });\r\n      // cache information about values\r\n      $$.hasNegativeValue = $$.hasNegativeValueInTargets(targets);\r\n      $$.hasPositiveValue = $$.hasPositiveValueInTargets(targets);\r\n      // set target types\r\n      if (config.data_type) {\r\n          $$.setTargetType($$.mapToIds(targets).filter(function (id) {\r\n              return !(id in config.data_types);\r\n          }), config.data_type);\r\n      }\r\n      // cache as original id keyed\r\n      targets.forEach(function (d) {\r\n          $$.addCache(d.id_org, d);\r\n      });\r\n      return targets;\r\n  };\n\n  ChartInternal.prototype.isEpochs = function (key) {\r\n      var $$ = this, config = $$.config;\r\n      return config.data_epochs && key === config.data_epochs;\r\n  };\r\n  ChartInternal.prototype.isX = function (key) {\r\n      var $$ = this, config = $$.config;\r\n      return ((config.data_x && key === config.data_x) ||\r\n          (notEmpty(config.data_xs) && hasValue(config.data_xs, key)));\r\n  };\r\n  ChartInternal.prototype.isNotX = function (key) {\r\n      return !this.isX(key);\r\n  };\r\n  ChartInternal.prototype.isNotXAndNotEpochs = function (key) {\r\n      return !this.isX(key) && !this.isEpochs(key);\r\n  };\r\n  /**\r\n   * Returns whether the normalized stack option is enabled or not.\r\n   *\r\n   * To be enabled it must also have data.groups defined.\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  ChartInternal.prototype.isStackNormalized = function () {\r\n      return this.config.data_stack_normalize && this.config.data_groups.length > 0;\r\n  };\r\n  /**\r\n   * Returns whether the axis is normalized or not.\r\n   *\r\n   * An axis is normalized as long as one of its associated target\r\n   * is normalized.\r\n   *\r\n   * @param axisId Axis ID (y or y2)\r\n   * @return {Boolean}\r\n   */\r\n  ChartInternal.prototype.isAxisNormalized = function (axisId) {\r\n      var $$ = this;\r\n      if (!$$.isStackNormalized()) {\r\n          // shortcut\r\n          return false;\r\n      }\r\n      return $$.data.targets\r\n          .filter(function (target) { return $$.axis.getId(target.id) === axisId; })\r\n          .some(function (target) { return $$.isTargetNormalized(target.id); });\r\n  };\r\n  /**\r\n   * Returns whether the values for this target ID is normalized or not.\r\n   *\r\n   * To be normalized the option needs to be enabled and target needs\r\n   * to be defined in `data.groups`.\r\n   *\r\n   * @param targetId ID of the target\r\n   * @return {Boolean} True if the target is normalized, false otherwise.\r\n   */\r\n  ChartInternal.prototype.isTargetNormalized = function (targetId) {\r\n      var $$ = this;\r\n      return ($$.isStackNormalized() &&\r\n          $$.config.data_groups.some(function (group) { return group.includes(targetId); }));\r\n  };\r\n  ChartInternal.prototype.getXKey = function (id) {\r\n      var $$ = this, config = $$.config;\r\n      return config.data_x\r\n          ? config.data_x\r\n          : notEmpty(config.data_xs)\r\n              ? config.data_xs[id]\r\n              : null;\r\n  };\r\n  /**\r\n   * Get sum of visible data per index for given axis.\r\n   *\r\n   * Expect axisId to be either 'y' or 'y2'.\r\n   *\r\n   * @private\r\n   * @param axisId Compute sum for data associated to given axis.\r\n   * @return {Array}\r\n   */\r\n  ChartInternal.prototype.getTotalPerIndex = function (axisId) {\r\n      var $$ = this;\r\n      if (!$$.isStackNormalized()) {\r\n          return null;\r\n      }\r\n      var cached = $$.getFromCache('getTotalPerIndex');\r\n      if (cached !== undefined) {\r\n          return cached[axisId];\r\n      }\r\n      var sum = { y: [], y2: [] };\r\n      $$.data.targets\r\n          // keep only target that are normalized\r\n          .filter(function (target) { return $$.isTargetNormalized(target.id); })\r\n          // keep only target that are visible\r\n          .filter(function (target) { return $$.isTargetToShow(target.id); })\r\n          // compute sum per axis\r\n          .forEach(function (target) {\r\n          var sumByAxis = sum[$$.axis.getId(target.id)];\r\n          target.values.forEach(function (v, i) {\r\n              if (!sumByAxis[i]) {\r\n                  sumByAxis[i] = 0;\r\n              }\r\n              sumByAxis[i] += isNumber(v.value) ? v.value : 0;\r\n          });\r\n      });\r\n      $$.addToCache('getTotalPerIndex', sum);\r\n      return sum[axisId];\r\n  };\r\n  /**\r\n   * Get sum of visible data.\r\n   *\r\n   * Should be used for normalised data only since all values\r\n   * are expected to be positive.\r\n   *\r\n   * @private\r\n   * @return {Number}\r\n   */\r\n  ChartInternal.prototype.getTotalDataSum = function () {\r\n      var $$ = this;\r\n      var cached = $$.getFromCache('getTotalDataSum');\r\n      if (cached !== undefined) {\r\n          return cached;\r\n      }\r\n      var totalDataSum = flattenArray($$.data.targets\r\n          .filter(function (target) { return $$.isTargetToShow(target.id); })\r\n          .map(function (target) { return target.values; }))\r\n          .map(function (d) { return d.value; })\r\n          .reduce(function (p, c) { return p + c; }, 0);\r\n      $$.addToCache('getTotalDataSum', totalDataSum);\r\n      return totalDataSum;\r\n  };\r\n  ChartInternal.prototype.getXValuesOfXKey = function (key, targets) {\r\n      var $$ = this, xValues, ids = targets && notEmpty(targets) ? $$.mapToIds(targets) : [];\r\n      ids.forEach(function (id) {\r\n          if ($$.getXKey(id) === key) {\r\n              xValues = $$.data.xs[id];\r\n          }\r\n      });\r\n      return xValues;\r\n  };\r\n  ChartInternal.prototype.getXValue = function (id, i) {\r\n      var $$ = this;\r\n      return id in $$.data.xs && $$.data.xs[id] && isValue($$.data.xs[id][i])\r\n          ? $$.data.xs[id][i]\r\n          : i;\r\n  };\r\n  ChartInternal.prototype.getOtherTargetXs = function () {\r\n      var $$ = this, idsForX = Object.keys($$.data.xs);\r\n      return idsForX.length ? $$.data.xs[idsForX[0]] : null;\r\n  };\r\n  ChartInternal.prototype.getOtherTargetX = function (index) {\r\n      var xs = this.getOtherTargetXs();\r\n      return xs && index < xs.length ? xs[index] : null;\r\n  };\r\n  ChartInternal.prototype.addXs = function (xs) {\r\n      var $$ = this;\r\n      Object.keys(xs).forEach(function (id) {\r\n          $$.config.data_xs[id] = xs[id];\r\n      });\r\n  };\r\n  ChartInternal.prototype.addName = function (data) {\r\n      var $$ = this, name;\r\n      if (data) {\r\n          name = $$.config.data_names[data.id];\r\n          data.name = name !== undefined ? name : data.id;\r\n      }\r\n      return data;\r\n  };\r\n  ChartInternal.prototype.getValueOnIndex = function (values, index) {\r\n      var valueOnIndex = values.filter(function (v) {\r\n          return v.index === index;\r\n      });\r\n      return valueOnIndex.length ? valueOnIndex[0] : null;\r\n  };\r\n  ChartInternal.prototype.updateTargetX = function (targets, x) {\r\n      var $$ = this;\r\n      targets.forEach(function (t) {\r\n          t.values.forEach(function (v, i) {\r\n              v.x = $$.generateTargetX(x[i], t.id, i);\r\n          });\r\n          $$.data.xs[t.id] = x;\r\n      });\r\n  };\r\n  ChartInternal.prototype.updateTargetXs = function (targets, xs) {\r\n      var $$ = this;\r\n      targets.forEach(function (t) {\r\n          if (xs[t.id]) {\r\n              $$.updateTargetX([t], xs[t.id]);\r\n          }\r\n      });\r\n  };\r\n  ChartInternal.prototype.generateTargetX = function (rawX, id, index) {\r\n      var $$ = this, x;\r\n      if ($$.isTimeSeries()) {\r\n          x = rawX ? $$.parseDate(rawX) : $$.parseDate($$.getXValue(id, index));\r\n      }\r\n      else if ($$.isCustomX() && !$$.isCategorized()) {\r\n          x = isValue(rawX) ? +rawX : $$.getXValue(id, index);\r\n      }\r\n      else {\r\n          x = index;\r\n      }\r\n      return x;\r\n  };\r\n  ChartInternal.prototype.cloneTarget = function (target) {\r\n      return {\r\n          id: target.id,\r\n          id_org: target.id_org,\r\n          values: target.values.map(function (d) {\r\n              return {\r\n                  x: d.x,\r\n                  value: d.value,\r\n                  id: d.id\r\n              };\r\n          })\r\n      };\r\n  };\r\n  ChartInternal.prototype.getMaxDataCount = function () {\r\n      var $$ = this;\r\n      return $$.d3.max($$.data.targets, function (t) {\r\n          return t.values.length;\r\n      });\r\n  };\r\n  ChartInternal.prototype.mapToIds = function (targets) {\r\n      return targets.map(function (d) {\r\n          return d.id;\r\n      });\r\n  };\r\n  ChartInternal.prototype.mapToTargetIds = function (ids) {\r\n      var $$ = this;\r\n      return ids ? [].concat(ids) : $$.mapToIds($$.data.targets);\r\n  };\r\n  ChartInternal.prototype.hasTarget = function (targets, id) {\r\n      var ids = this.mapToIds(targets), i;\r\n      for (i = 0; i < ids.length; i++) {\r\n          if (ids[i] === id) {\r\n              return true;\r\n          }\r\n      }\r\n      return false;\r\n  };\r\n  ChartInternal.prototype.isTargetToShow = function (targetId) {\r\n      return this.hiddenTargetIds.indexOf(targetId) < 0;\r\n  };\r\n  ChartInternal.prototype.isLegendToShow = function (targetId) {\r\n      return this.hiddenLegendIds.indexOf(targetId) < 0;\r\n  };\r\n  /**\r\n   * Returns only visible targets.\r\n   *\r\n   * This is the same as calling {@link filterTargetsToShow} on $$.data.targets.\r\n   *\r\n   * @return {Array}\r\n   */\r\n  ChartInternal.prototype.getTargetsToShow = function () {\r\n      var $$ = this;\r\n      return $$.filterTargetsToShow($$.data.targets);\r\n  };\r\n  ChartInternal.prototype.filterTargetsToShow = function (targets) {\r\n      var $$ = this;\r\n      return targets.filter(function (t) {\r\n          return $$.isTargetToShow(t.id);\r\n      });\r\n  };\r\n  /**\r\n   * @return {Array} Returns all the targets attached to the chart, visible or not\r\n   */\r\n  ChartInternal.prototype.getTargets = function () {\r\n      var $$ = this;\r\n      return $$.data.targets;\r\n  };\r\n  ChartInternal.prototype.mapTargetsToUniqueXs = function (targets) {\r\n      var $$ = this;\r\n      var xs = $$.d3\r\n          .set($$.d3.merge(targets.map(function (t) {\r\n          return t.values.map(function (v) {\r\n              return +v.x;\r\n          });\r\n      })))\r\n          .values();\r\n      xs = $$.isTimeSeries()\r\n          ? xs.map(function (x) {\r\n              return new Date(+x);\r\n          })\r\n          : xs.map(function (x) {\r\n              return +x;\r\n          });\r\n      return xs.sort(function (a, b) {\r\n          return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\r\n      });\r\n  };\r\n  ChartInternal.prototype.addHiddenTargetIds = function (targetIds) {\r\n      targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);\r\n      for (var i = 0; i < targetIds.length; i++) {\r\n          if (this.hiddenTargetIds.indexOf(targetIds[i]) < 0) {\r\n              this.hiddenTargetIds = this.hiddenTargetIds.concat(targetIds[i]);\r\n          }\r\n      }\r\n      this.resetCache();\r\n  };\r\n  ChartInternal.prototype.removeHiddenTargetIds = function (targetIds) {\r\n      this.hiddenTargetIds = this.hiddenTargetIds.filter(function (id) {\r\n          return targetIds.indexOf(id) < 0;\r\n      });\r\n      this.resetCache();\r\n  };\r\n  ChartInternal.prototype.addHiddenLegendIds = function (targetIds) {\r\n      targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);\r\n      for (var i = 0; i < targetIds.length; i++) {\r\n          if (this.hiddenLegendIds.indexOf(targetIds[i]) < 0) {\r\n              this.hiddenLegendIds = this.hiddenLegendIds.concat(targetIds[i]);\r\n          }\r\n      }\r\n  };\r\n  ChartInternal.prototype.removeHiddenLegendIds = function (targetIds) {\r\n      this.hiddenLegendIds = this.hiddenLegendIds.filter(function (id) {\r\n          return targetIds.indexOf(id) < 0;\r\n      });\r\n  };\r\n  ChartInternal.prototype.getValuesAsIdKeyed = function (targets) {\r\n      var ys = {};\r\n      targets.forEach(function (t) {\r\n          ys[t.id] = [];\r\n          t.values.forEach(function (v) {\r\n              ys[t.id].push(v.value);\r\n          });\r\n      });\r\n      return ys;\r\n  };\r\n  ChartInternal.prototype.checkValueInTargets = function (targets, checker) {\r\n      var ids = Object.keys(targets), i, j, values;\r\n      for (i = 0; i < ids.length; i++) {\r\n          values = targets[ids[i]].values;\r\n          for (j = 0; j < values.length; j++) {\r\n              if (checker(values[j].value)) {\r\n                  return true;\r\n              }\r\n          }\r\n      }\r\n      return false;\r\n  };\r\n  ChartInternal.prototype.hasNegativeValueInTargets = function (targets) {\r\n      return this.checkValueInTargets(targets, function (v) {\r\n          return v < 0;\r\n      });\r\n  };\r\n  ChartInternal.prototype.hasPositiveValueInTargets = function (targets) {\r\n      return this.checkValueInTargets(targets, function (v) {\r\n          return v > 0;\r\n      });\r\n  };\r\n  ChartInternal.prototype.isOrderDesc = function () {\r\n      var config = this.config;\r\n      return (typeof config.data_order === 'string' &&\r\n          config.data_order.toLowerCase() === 'desc');\r\n  };\r\n  ChartInternal.prototype.isOrderAsc = function () {\r\n      var config = this.config;\r\n      return (typeof config.data_order === 'string' &&\r\n          config.data_order.toLowerCase() === 'asc');\r\n  };\r\n  ChartInternal.prototype.getOrderFunction = function () {\r\n      var $$ = this, config = $$.config, orderAsc = $$.isOrderAsc(), orderDesc = $$.isOrderDesc();\r\n      if (orderAsc || orderDesc) {\r\n          var reducer = function (p, c) {\r\n              return p + Math.abs(c.value);\r\n          };\r\n          return function (t1, t2) {\r\n              var t1Sum = t1.values.reduce(reducer, 0), t2Sum = t2.values.reduce(reducer, 0);\r\n              return orderAsc ? t2Sum - t1Sum : t1Sum - t2Sum;\r\n          };\r\n      }\r\n      else if (isFunction(config.data_order)) {\r\n          return config.data_order;\r\n      }\r\n      else if (isArray(config.data_order)) {\r\n          var order = config.data_order;\r\n          return function (t1, t2) {\r\n              return order.indexOf(t1.id) - order.indexOf(t2.id);\r\n          };\r\n      }\r\n  };\r\n  ChartInternal.prototype.orderTargets = function (targets) {\r\n      var fct = this.getOrderFunction();\r\n      if (fct) {\r\n          targets.sort(fct);\r\n      }\r\n      return targets;\r\n  };\r\n  /**\r\n   * Returns all the values from the given targets at the given index.\r\n   *\r\n   * @param {Array} targets\r\n   * @param {Number} index\r\n   * @return {Array}\r\n   */\r\n  ChartInternal.prototype.filterByIndex = function (targets, index) {\r\n      return this.d3.merge(targets.map(function (t) { return t.values.filter(function (v) { return v.index === index; }); }));\r\n  };\r\n  ChartInternal.prototype.filterByX = function (targets, x) {\r\n      return this.d3\r\n          .merge(targets.map(function (t) {\r\n          return t.values;\r\n      }))\r\n          .filter(function (v) {\r\n          return v.x - x === 0;\r\n      });\r\n  };\r\n  ChartInternal.prototype.filterRemoveNull = function (data) {\r\n      return data.filter(function (d) {\r\n          return isValue(d.value);\r\n      });\r\n  };\r\n  ChartInternal.prototype.filterByXDomain = function (targets, xDomain) {\r\n      return targets.map(function (t) {\r\n          return {\r\n              id: t.id,\r\n              id_org: t.id_org,\r\n              values: t.values.filter(function (v) {\r\n                  return xDomain[0] <= v.x && v.x <= xDomain[1];\r\n              })\r\n          };\r\n      });\r\n  };\r\n  ChartInternal.prototype.hasDataLabel = function () {\r\n      var config = this.config;\r\n      if (typeof config.data_labels === 'boolean' && config.data_labels) {\r\n          return true;\r\n      }\r\n      else if (typeof config.data_labels === 'object' &&\r\n          notEmpty(config.data_labels)) {\r\n          return true;\r\n      }\r\n      return false;\r\n  };\r\n  ChartInternal.prototype.getDataLabelLength = function (min, max, key) {\r\n      var $$ = this, lengths = [0, 0], paddingCoef = 1.3;\r\n      $$.selectChart\r\n          .select('svg')\r\n          .selectAll('.dummy')\r\n          .data([min, max])\r\n          .enter()\r\n          .append('text')\r\n          .text(function (d) {\r\n          return $$.dataLabelFormat(d.id)(d);\r\n      })\r\n          .each(function (d, i) {\r\n          lengths[i] = getBBox(this)[key] * paddingCoef;\r\n      })\r\n          .remove();\r\n      return lengths;\r\n  };\r\n  /**\r\n   * Returns true if the given data point is not arc type, otherwise false.\r\n   * @param {Object} d The data point\r\n   * @return {boolean}\r\n   */\r\n  ChartInternal.prototype.isNoneArc = function (d) {\r\n      return this.hasTarget(this.data.targets, d.id);\r\n  };\r\n  /**\r\n   * Returns true if the given data point is arc type, otherwise false.\r\n   * @param {Object} d The data point\r\n   * @return {boolean}\r\n   */\r\n  ChartInternal.prototype.isArc = function (d) {\r\n      return 'data' in d && this.hasTarget(this.data.targets, d.data.id);\r\n  };\r\n  /**\r\n   * Find the closest point from the given pos among the given targets or\r\n   * undefined if none satisfies conditions.\r\n   *\r\n   * @param {Array} targets\r\n   * @param {Array} pos An [x,y] coordinate\r\n   * @return {Object|undefined}\r\n   */\r\n  ChartInternal.prototype.findClosestFromTargets = function (targets, pos) {\r\n      var $$ = this;\r\n      // for each target, find the closest point\r\n      var candidates = targets\r\n          .map(function (t) {\r\n          return $$.findClosest(t.values, pos, $$.config.tooltip_horizontal\r\n              ? $$.horizontalDistance.bind($$)\r\n              : $$.dist.bind($$), $$.config.point_sensitivity);\r\n      })\r\n          .filter(function (v) { return v; });\r\n      // returns the closest of candidates\r\n      if (candidates.length === 0) {\r\n          return undefined;\r\n      }\r\n      else if (candidates.length === 1) {\r\n          return candidates[0];\r\n      }\r\n      else {\r\n          return $$.findClosest(candidates, pos, $$.dist.bind($$));\r\n      }\r\n  };\r\n  /**\r\n   * Find the closest point from the x value or undefined if none satisfies conditions.\r\n   *\r\n   * @param {Array} targets\r\n   * @param {Array} x A value on X axis\r\n   * @return {Object|undefined}\r\n   */\r\n  ChartInternal.prototype.findClosestFromTargetsByX = function (targets, x) {\r\n      var closest;\r\n      var diff;\r\n      targets.forEach(function (t) {\r\n          t.values.forEach(function (d) {\r\n              var newDiff = Math.abs(x - d.x);\r\n              if (diff === undefined || newDiff < diff) {\r\n                  closest = d;\r\n                  diff = newDiff;\r\n              }\r\n          });\r\n      });\r\n      return closest;\r\n  };\r\n  /**\r\n   * Using given compute distance method, returns the closest data point from the\r\n   * given position.\r\n   *\r\n   * Giving optionally a minimum distance to satisfy.\r\n   *\r\n   * @param {Array} dataPoints List of DataPoints\r\n   * @param {Array} pos An [x,y] coordinate\r\n   * @param {Function} computeDist Function to compute distance between 2 points\r\n   * @param {Number} minDist Minimal distance to satisfy\r\n   * @return {Object|undefined} Closest data point\r\n   */\r\n  ChartInternal.prototype.findClosest = function (dataPoints, pos, computeDist, minDist) {\r\n      if (minDist === void 0) { minDist = Infinity; }\r\n      var $$ = this;\r\n      var closest;\r\n      // find closest bar\r\n      dataPoints\r\n          .filter(function (v) { return v && $$.isBarType(v.id); })\r\n          .forEach(function (v) {\r\n          if (!closest) {\r\n              var shape = $$.main\r\n                  .select('.' +\r\n                  CLASS.bars +\r\n                  $$.getTargetSelectorSuffix(v.id) +\r\n                  ' .' +\r\n                  CLASS.bar +\r\n                  '-' +\r\n                  v.index)\r\n                  .node();\r\n              if ($$.isWithinBar(pos, shape)) {\r\n                  closest = v;\r\n              }\r\n          }\r\n      });\r\n      // find closest point from non-bar\r\n      dataPoints\r\n          .filter(function (v) { return v && !$$.isBarType(v.id); })\r\n          .forEach(function (v) {\r\n          var d = computeDist(v, pos);\r\n          if (d < minDist) {\r\n              minDist = d;\r\n              closest = v;\r\n          }\r\n      });\r\n      return closest;\r\n  };\r\n  ChartInternal.prototype.dist = function (data, pos) {\r\n      var $$ = this, config = $$.config, xIndex = config.axis_rotated ? 1 : 0, yIndex = config.axis_rotated ? 0 : 1, y = $$.circleY(data, data.index), x = $$.x(data.x);\r\n      return Math.sqrt(Math.pow(x - pos[xIndex], 2) + Math.pow(y - pos[yIndex], 2));\r\n  };\r\n  ChartInternal.prototype.horizontalDistance = function (data, pos) {\r\n      var $$ = this, config = $$.config, xIndex = config.axis_rotated ? 1 : 0, x = $$.x(data.x);\r\n      return Math.abs(x - pos[xIndex]);\r\n  };\r\n  ChartInternal.prototype.convertValuesToStep = function (values) {\r\n      var converted = [].concat(values), i;\r\n      if (!this.isCategorized()) {\r\n          return values;\r\n      }\r\n      for (i = values.length + 1; 0 < i; i--) {\r\n          converted[i] = converted[i - 1];\r\n      }\r\n      converted[0] = {\r\n          x: converted[0].x - 1,\r\n          value: converted[0].value,\r\n          id: converted[0].id\r\n      };\r\n      converted[values.length + 1] = {\r\n          x: converted[values.length].x + 1,\r\n          value: converted[values.length].value,\r\n          id: converted[values.length].id\r\n      };\r\n      return converted;\r\n  };\r\n  /**\r\n   * Get ratio value\r\n   *\r\n   * @param {String} type Ratio for given type\r\n   * @param {Object} d Data value object\r\n   * @param {Boolean} asPercent Convert the return as percent or not\r\n   * @return {Number} Ratio value\r\n   * @private\r\n   */\r\n  ChartInternal.prototype.getRatio = function (type, d, asPercent) {\r\n      if (asPercent === void 0) { asPercent = false; }\r\n      var $$ = this;\r\n      var api = $$.api;\r\n      var ratio = 0;\r\n      if (d && api.data.shown.call(api).length) {\r\n          ratio = d.ratio || d.value;\r\n          if (type === 'arc') {\r\n              if ($$.hasType('gauge')) {\r\n                  ratio =\r\n                      (d.endAngle - d.startAngle) /\r\n                          (Math.PI * ($$.config.gauge_fullCircle ? 2 : 1));\r\n              }\r\n              else {\r\n                  var total = $$.getTotalDataSum();\r\n                  ratio = d.value / total;\r\n              }\r\n          }\r\n          else if (type === 'index') {\r\n              var total = $$.getTotalPerIndex($$.axis.getId(d.id));\r\n              d.ratio =\r\n                  isNumber(d.value) && total && total[d.index] > 0\r\n                      ? d.value / total[d.index]\r\n                      : 0;\r\n              ratio = d.ratio;\r\n          }\r\n      }\r\n      return asPercent && ratio ? ratio * 100 : ratio;\r\n  };\r\n  ChartInternal.prototype.updateDataAttributes = function (name, attrs) {\r\n      var $$ = this, config = $$.config, current = config['data_' + name];\r\n      if (typeof attrs === 'undefined') {\r\n          return current;\r\n      }\r\n      Object.keys(attrs).forEach(function (id) {\r\n          current[id] = attrs[id];\r\n      });\r\n      $$.redraw({\r\n          withLegend: true\r\n      });\r\n      return current;\r\n  };\n\n  ChartInternal.prototype.load = function (targets, args) {\r\n      var $$ = this;\r\n      if (targets) {\r\n          // filter loading targets if needed\r\n          if (args.filter) {\r\n              targets = targets.filter(args.filter);\r\n          }\r\n          // set type if args.types || args.type specified\r\n          if (args.type || args.types) {\r\n              targets.forEach(function (t) {\r\n                  var type = args.types && args.types[t.id] ? args.types[t.id] : args.type;\r\n                  $$.setTargetType(t.id, type);\r\n              });\r\n          }\r\n          // Update/Add data\r\n          $$.data.targets.forEach(function (d) {\r\n              for (var i = 0; i < targets.length; i++) {\r\n                  if (d.id === targets[i].id) {\r\n                      d.values = targets[i].values;\r\n                      targets.splice(i, 1);\r\n                      break;\r\n                  }\r\n              }\r\n          });\r\n          $$.data.targets = $$.data.targets.concat(targets); // add remained\r\n      }\r\n      // Set targets\r\n      $$.updateTargets($$.data.targets);\r\n      // Redraw with new targets\r\n      $$.redraw({\r\n          withUpdateOrgXDomain: true,\r\n          withUpdateXDomain: true,\r\n          withLegend: true\r\n      });\r\n      if (args.done) {\r\n          args.done();\r\n      }\r\n  };\r\n  ChartInternal.prototype.loadFromArgs = function (args) {\r\n      var $$ = this;\r\n      $$.resetCache();\r\n      if (args.data) {\r\n          $$.load($$.convertDataToTargets(args.data), args);\r\n      }\r\n      else if (args.url) {\r\n          $$.convertUrlToData(args.url, args.mimeType, args.headers, args.keys, function (data) {\r\n              $$.load($$.convertDataToTargets(data), args);\r\n          });\r\n      }\r\n      else if (args.json) {\r\n          $$.load($$.convertDataToTargets($$.convertJsonToData(args.json, args.keys)), args);\r\n      }\r\n      else if (args.rows) {\r\n          $$.load($$.convertDataToTargets($$.convertRowsToData(args.rows)), args);\r\n      }\r\n      else if (args.columns) {\r\n          $$.load($$.convertDataToTargets($$.convertColumnsToData(args.columns)), args);\r\n      }\r\n      else {\r\n          $$.load(null, args);\r\n      }\r\n  };\r\n  ChartInternal.prototype.unload = function (targetIds, done) {\r\n      var $$ = this;\r\n      $$.resetCache();\r\n      if (!done) {\r\n          done = function () { };\r\n      }\r\n      // filter existing target\r\n      targetIds = targetIds.filter(function (id) {\r\n          return $$.hasTarget($$.data.targets, id);\r\n      });\r\n      // If no target, call done and return\r\n      if (!targetIds || targetIds.length === 0) {\r\n          done();\r\n          return;\r\n      }\r\n      $$.svg\r\n          .selectAll(targetIds.map(function (id) {\r\n          return $$.selectorTarget(id);\r\n      }))\r\n          .transition()\r\n          .style('opacity', 0)\r\n          .remove()\r\n          .call($$.endall, done);\r\n      targetIds.forEach(function (id) {\r\n          // Reset fadein for future load\r\n          $$.withoutFadeIn[id] = false;\r\n          // Remove target's elements\r\n          if ($$.legend) {\r\n              $$.legend\r\n                  .selectAll('.' + CLASS.legendItem + $$.getTargetSelectorSuffix(id))\r\n                  .remove();\r\n          }\r\n          // Remove target\r\n          $$.data.targets = $$.data.targets.filter(function (t) {\r\n              return t.id !== id;\r\n          });\r\n      });\r\n  };\n\n  ChartInternal.prototype.getYDomainMin = function (targets) {\r\n      var $$ = this, config = $$.config, ids = $$.mapToIds(targets), ys = $$.getValuesAsIdKeyed(targets), j, k, baseId, idsInGroup, id, hasNegativeValue;\r\n      if (config.data_groups.length > 0) {\r\n          hasNegativeValue = $$.hasNegativeValueInTargets(targets);\r\n          for (j = 0; j < config.data_groups.length; j++) {\r\n              // Determine baseId\r\n              idsInGroup = config.data_groups[j].filter(function (id) {\r\n                  return ids.indexOf(id) >= 0;\r\n              });\r\n              if (idsInGroup.length === 0) {\r\n                  continue;\r\n              }\r\n              baseId = idsInGroup[0];\r\n              // Consider negative values\r\n              if (hasNegativeValue && ys[baseId]) {\r\n                  ys[baseId].forEach(function (v, i) {\r\n                      ys[baseId][i] = v < 0 ? v : 0;\r\n                  });\r\n              }\r\n              // Compute min\r\n              for (k = 1; k < idsInGroup.length; k++) {\r\n                  id = idsInGroup[k];\r\n                  if (!ys[id]) {\r\n                      continue;\r\n                  }\r\n                  ys[id].forEach(function (v, i) {\r\n                      if ($$.axis.getId(id) === $$.axis.getId(baseId) &&\r\n                          ys[baseId] &&\r\n                          !(hasNegativeValue && +v > 0)) {\r\n                          ys[baseId][i] += +v;\r\n                      }\r\n                  });\r\n              }\r\n          }\r\n      }\r\n      return $$.d3.min(Object.keys(ys).map(function (key) {\r\n          return $$.d3.min(ys[key]);\r\n      }));\r\n  };\r\n  ChartInternal.prototype.getYDomainMax = function (targets) {\r\n      var $$ = this, config = $$.config, ids = $$.mapToIds(targets), ys = $$.getValuesAsIdKeyed(targets), j, k, baseId, idsInGroup, id, hasPositiveValue;\r\n      if (config.data_groups.length > 0) {\r\n          hasPositiveValue = $$.hasPositiveValueInTargets(targets);\r\n          for (j = 0; j < config.data_groups.length; j++) {\r\n              // Determine baseId\r\n              idsInGroup = config.data_groups[j].filter(function (id) {\r\n                  return ids.indexOf(id) >= 0;\r\n              });\r\n              if (idsInGroup.length === 0) {\r\n                  continue;\r\n              }\r\n              baseId = idsInGroup[0];\r\n              // Consider positive values\r\n              if (hasPositiveValue && ys[baseId]) {\r\n                  ys[baseId].forEach(function (v, i) {\r\n                      ys[baseId][i] = v > 0 ? v : 0;\r\n                  });\r\n              }\r\n              // Compute max\r\n              for (k = 1; k < idsInGroup.length; k++) {\r\n                  id = idsInGroup[k];\r\n                  if (!ys[id]) {\r\n                      continue;\r\n                  }\r\n                  ys[id].forEach(function (v, i) {\r\n                      if ($$.axis.getId(id) === $$.axis.getId(baseId) &&\r\n                          ys[baseId] &&\r\n                          !(hasPositiveValue && +v < 0)) {\r\n                          ys[baseId][i] += +v;\r\n                      }\r\n                  });\r\n              }\r\n          }\r\n      }\r\n      return $$.d3.max(Object.keys(ys).map(function (key) {\r\n          return $$.d3.max(ys[key]);\r\n      }));\r\n  };\r\n  ChartInternal.prototype.getYDomain = function (targets, axisId, xDomain) {\r\n      var $$ = this, config = $$.config;\r\n      if ($$.isAxisNormalized(axisId)) {\r\n          return [0, 100];\r\n      }\r\n      var targetsByAxisId = targets.filter(function (t) {\r\n          return $$.axis.getId(t.id) === axisId;\r\n      }), yTargets = xDomain\r\n          ? $$.filterByXDomain(targetsByAxisId, xDomain)\r\n          : targetsByAxisId, yMin = axisId === 'y2' ? config.axis_y2_min : config.axis_y_min, yMax = axisId === 'y2' ? config.axis_y2_max : config.axis_y_max, yDomainMin = $$.getYDomainMin(yTargets), yDomainMax = $$.getYDomainMax(yTargets), domain, domainLength, padding_top, padding_bottom, center = axisId === 'y2' ? config.axis_y2_center : config.axis_y_center, yDomainAbs, lengths, diff, ratio, isAllPositive, isAllNegative, isZeroBased = ($$.hasType('bar', yTargets) && config.bar_zerobased) ||\r\n          ($$.hasType('area', yTargets) && config.area_zerobased), isInverted = axisId === 'y2' ? config.axis_y2_inverted : config.axis_y_inverted, showHorizontalDataLabel = $$.hasDataLabel() && config.axis_rotated, showVerticalDataLabel = $$.hasDataLabel() && !config.axis_rotated;\r\n      // MEMO: avoid inverting domain unexpectedly\r\n      yDomainMin = isValue(yMin)\r\n          ? yMin\r\n          : isValue(yMax)\r\n              ? yDomainMin < yMax\r\n                  ? yDomainMin\r\n                  : yMax - 10\r\n              : yDomainMin;\r\n      yDomainMax = isValue(yMax)\r\n          ? yMax\r\n          : isValue(yMin)\r\n              ? yMin < yDomainMax\r\n                  ? yDomainMax\r\n                  : yMin + 10\r\n              : yDomainMax;\r\n      if (yTargets.length === 0) {\r\n          // use current domain if target of axisId is none\r\n          return axisId === 'y2' ? $$.y2.domain() : $$.y.domain();\r\n      }\r\n      if (isNaN(yDomainMin)) {\r\n          // set minimum to zero when not number\r\n          yDomainMin = 0;\r\n      }\r\n      if (isNaN(yDomainMax)) {\r\n          // set maximum to have same value as yDomainMin\r\n          yDomainMax = yDomainMin;\r\n      }\r\n      if (yDomainMin === yDomainMax) {\r\n          yDomainMin < 0 ? (yDomainMax = 0) : (yDomainMin = 0);\r\n      }\r\n      isAllPositive = yDomainMin >= 0 && yDomainMax >= 0;\r\n      isAllNegative = yDomainMin <= 0 && yDomainMax <= 0;\r\n      // Cancel zerobased if axis_*_min / axis_*_max specified\r\n      if ((isValue(yMin) && isAllPositive) || (isValue(yMax) && isAllNegative)) {\r\n          isZeroBased = false;\r\n      }\r\n      // Bar/Area chart should be 0-based if all positive|negative\r\n      if (isZeroBased) {\r\n          if (isAllPositive) {\r\n              yDomainMin = 0;\r\n          }\r\n          if (isAllNegative) {\r\n              yDomainMax = 0;\r\n          }\r\n      }\r\n      domainLength = Math.abs(yDomainMax - yDomainMin);\r\n      padding_top = padding_bottom = domainLength * 0.1;\r\n      if (typeof center !== 'undefined') {\r\n          yDomainAbs = Math.max(Math.abs(yDomainMin), Math.abs(yDomainMax));\r\n          yDomainMax = center + yDomainAbs;\r\n          yDomainMin = center - yDomainAbs;\r\n      }\r\n      // add padding for data label\r\n      if (showHorizontalDataLabel) {\r\n          lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'width');\r\n          diff = diffDomain($$.y.range());\r\n          ratio = [lengths[0] / diff, lengths[1] / diff];\r\n          padding_top += domainLength * (ratio[1] / (1 - ratio[0] - ratio[1]));\r\n          padding_bottom += domainLength * (ratio[0] / (1 - ratio[0] - ratio[1]));\r\n      }\r\n      else if (showVerticalDataLabel) {\r\n          lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'height');\r\n          var pixelsToAxisPadding = $$.getY(config[\"axis_\" + axisId + \"_type\"], \r\n          // input domain as pixels\r\n          [0, config.axis_rotated ? $$.width : $$.height], \r\n          // output range as axis padding\r\n          [0, domainLength]);\r\n          padding_top += pixelsToAxisPadding(lengths[1]);\r\n          padding_bottom += pixelsToAxisPadding(lengths[0]);\r\n      }\r\n      if (axisId === 'y' && notEmpty(config.axis_y_padding)) {\r\n          padding_top = $$.axis.getPadding(config.axis_y_padding, 'top', padding_top, domainLength);\r\n          padding_bottom = $$.axis.getPadding(config.axis_y_padding, 'bottom', padding_bottom, domainLength);\r\n      }\r\n      if (axisId === 'y2' && notEmpty(config.axis_y2_padding)) {\r\n          padding_top = $$.axis.getPadding(config.axis_y2_padding, 'top', padding_top, domainLength);\r\n          padding_bottom = $$.axis.getPadding(config.axis_y2_padding, 'bottom', padding_bottom, domainLength);\r\n      }\r\n      // Bar/Area chart should be 0-based if all positive|negative\r\n      if (isZeroBased) {\r\n          if (isAllPositive) {\r\n              padding_bottom = yDomainMin;\r\n          }\r\n          if (isAllNegative) {\r\n              padding_top = -yDomainMax;\r\n          }\r\n      }\r\n      domain = [yDomainMin - padding_bottom, yDomainMax + padding_top];\r\n      return isInverted ? domain.reverse() : domain;\r\n  };\r\n  ChartInternal.prototype.getXDomainMin = function (targets) {\r\n      var $$ = this, config = $$.config;\r\n      return isDefined(config.axis_x_min)\r\n          ? $$.isTimeSeries()\r\n              ? this.parseDate(config.axis_x_min)\r\n              : config.axis_x_min\r\n          : $$.d3.min(targets, function (t) {\r\n              return $$.d3.min(t.values, function (v) {\r\n                  return v.x;\r\n              });\r\n          });\r\n  };\r\n  ChartInternal.prototype.getXDomainMax = function (targets) {\r\n      var $$ = this, config = $$.config;\r\n      return isDefined(config.axis_x_max)\r\n          ? $$.isTimeSeries()\r\n              ? this.parseDate(config.axis_x_max)\r\n              : config.axis_x_max\r\n          : $$.d3.max(targets, function (t) {\r\n              return $$.d3.max(t.values, function (v) {\r\n                  return v.x;\r\n              });\r\n          });\r\n  };\r\n  ChartInternal.prototype.getXDomainPadding = function (domain) {\r\n      var $$ = this, config = $$.config, diff = domain[1] - domain[0], maxDataCount, padding, paddingLeft, paddingRight;\r\n      if ($$.isCategorized()) {\r\n          padding = 0;\r\n      }\r\n      else if ($$.hasType('bar')) {\r\n          maxDataCount = $$.getMaxDataCount();\r\n          padding = maxDataCount > 1 ? diff / (maxDataCount - 1) / 2 : 0.5;\r\n      }\r\n      else {\r\n          padding = diff * 0.01;\r\n      }\r\n      if (typeof config.axis_x_padding === 'object' &&\r\n          notEmpty(config.axis_x_padding)) {\r\n          paddingLeft = isValue(config.axis_x_padding.left)\r\n              ? config.axis_x_padding.left\r\n              : padding;\r\n          paddingRight = isValue(config.axis_x_padding.right)\r\n              ? config.axis_x_padding.right\r\n              : padding;\r\n      }\r\n      else if (typeof config.axis_x_padding === 'number') {\r\n          paddingLeft = paddingRight = config.axis_x_padding;\r\n      }\r\n      else {\r\n          paddingLeft = paddingRight = padding;\r\n      }\r\n      return { left: paddingLeft, right: paddingRight };\r\n  };\r\n  ChartInternal.prototype.getXDomain = function (targets) {\r\n      var $$ = this, xDomain = [$$.getXDomainMin(targets), $$.getXDomainMax(targets)], firstX = xDomain[0], lastX = xDomain[1], padding = $$.getXDomainPadding(xDomain), min = 0, max = 0;\r\n      // show center of x domain if min and max are the same\r\n      if (firstX - lastX === 0 && !$$.isCategorized()) {\r\n          if ($$.isTimeSeries()) {\r\n              firstX = new Date(firstX.getTime() * 0.5);\r\n              lastX = new Date(lastX.getTime() * 1.5);\r\n          }\r\n          else {\r\n              firstX = firstX === 0 ? 1 : firstX * 0.5;\r\n              lastX = lastX === 0 ? -1 : lastX * 1.5;\r\n          }\r\n      }\r\n      if (firstX || firstX === 0) {\r\n          min = $$.isTimeSeries()\r\n              ? new Date(firstX.getTime() - padding.left)\r\n              : firstX - padding.left;\r\n      }\r\n      if (lastX || lastX === 0) {\r\n          max = $$.isTimeSeries()\r\n              ? new Date(lastX.getTime() + padding.right)\r\n              : lastX + padding.right;\r\n      }\r\n      return [min, max];\r\n  };\r\n  ChartInternal.prototype.updateXDomain = function (targets, withUpdateXDomain, withUpdateOrgXDomain, withTrim, domain) {\r\n      var $$ = this, config = $$.config;\r\n      if (withUpdateOrgXDomain) {\r\n          $$.x.domain(domain ? domain : $$.d3.extent($$.getXDomain(targets)));\r\n          $$.orgXDomain = $$.x.domain();\r\n          if (config.zoom_enabled) {\r\n              $$.zoom.update();\r\n          }\r\n          $$.subX.domain($$.x.domain());\r\n          if ($$.brush) {\r\n              $$.brush.updateScale($$.subX);\r\n          }\r\n      }\r\n      if (withUpdateXDomain) {\r\n          $$.x.domain(domain\r\n              ? domain\r\n              : !$$.brush || $$.brush.empty()\r\n                  ? $$.orgXDomain\r\n                  : $$.brush.selectionAsValue());\r\n      }\r\n      // Trim domain when too big by zoom mousemove event\r\n      if (withTrim) {\r\n          $$.x.domain($$.trimXDomain($$.x.orgDomain()));\r\n      }\r\n      return $$.x.domain();\r\n  };\r\n  ChartInternal.prototype.trimXDomain = function (domain) {\r\n      var zoomDomain = this.getZoomDomain(), min = zoomDomain[0], max = zoomDomain[1];\r\n      if (domain[0] <= min) {\r\n          domain[1] = +domain[1] + (min - domain[0]);\r\n          domain[0] = min;\r\n      }\r\n      if (max <= domain[1]) {\r\n          domain[0] = +domain[0] - (domain[1] - max);\r\n          domain[1] = max;\r\n      }\r\n      return domain;\r\n  };\n\n  ChartInternal.prototype.drag = function (mouse) {\r\n      var $$ = this, config = $$.config, main = $$.main, d3 = $$.d3;\r\n      var sx, sy, mx, my, minX, maxX, minY, maxY;\r\n      if ($$.hasArcType()) {\r\n          return;\r\n      }\r\n      if (!config.data_selection_enabled) {\r\n          return;\r\n      } // do nothing if not selectable\r\n      if (!config.data_selection_multiple) {\r\n          return;\r\n      } // skip when single selection because drag is used for multiple selection\r\n      sx = $$.dragStart[0];\r\n      sy = $$.dragStart[1];\r\n      mx = mouse[0];\r\n      my = mouse[1];\r\n      minX = Math.min(sx, mx);\r\n      maxX = Math.max(sx, mx);\r\n      minY = config.data_selection_grouped ? $$.margin.top : Math.min(sy, my);\r\n      maxY = config.data_selection_grouped ? $$.height : Math.max(sy, my);\r\n      main\r\n          .select('.' + CLASS.dragarea)\r\n          .attr('x', minX)\r\n          .attr('y', minY)\r\n          .attr('width', maxX - minX)\r\n          .attr('height', maxY - minY);\r\n      // TODO: binary search when multiple xs\r\n      main\r\n          .selectAll('.' + CLASS.shapes)\r\n          .selectAll('.' + CLASS.shape)\r\n          .each(function (d, i) {\r\n          if (!config.data_selection_isselectable(d)) {\r\n              return;\r\n          }\r\n          var shape = d3.select(this), isSelected = shape.classed(CLASS.SELECTED), isIncluded = shape.classed(CLASS.INCLUDED), _x, _y, _w, _h, toggle, isWithin = false, box;\r\n          if (shape.classed(CLASS.circle)) {\r\n              _x = shape.attr('cx') * 1;\r\n              _y = shape.attr('cy') * 1;\r\n              toggle = $$.togglePoint;\r\n              isWithin = minX < _x && _x < maxX && minY < _y && _y < maxY;\r\n          }\r\n          else if (shape.classed(CLASS.bar)) {\r\n              box = getPathBox(this);\r\n              _x = box.x;\r\n              _y = box.y;\r\n              _w = box.width;\r\n              _h = box.height;\r\n              toggle = $$.togglePath;\r\n              isWithin =\r\n                  !(maxX < _x || _x + _w < minX) && !(maxY < _y || _y + _h < minY);\r\n          }\r\n          else {\r\n              // line/area selection not supported yet\r\n              return;\r\n          }\r\n          if (isWithin ^ isIncluded) {\r\n              shape.classed(CLASS.INCLUDED, !isIncluded);\r\n              // TODO: included/unincluded callback here\r\n              shape.classed(CLASS.SELECTED, !isSelected);\r\n              toggle.call($$, !isSelected, shape, d, i);\r\n          }\r\n      });\r\n  };\r\n  ChartInternal.prototype.dragstart = function (mouse) {\r\n      var $$ = this, config = $$.config;\r\n      if ($$.hasArcType()) {\r\n          return;\r\n      }\r\n      if (!config.data_selection_enabled) {\r\n          return;\r\n      } // do nothing if not selectable\r\n      $$.dragStart = mouse;\r\n      $$.main\r\n          .select('.' + CLASS.chart)\r\n          .append('rect')\r\n          .attr('class', CLASS.dragarea)\r\n          .style('opacity', 0.1);\r\n      $$.dragging = true;\r\n  };\r\n  ChartInternal.prototype.dragend = function () {\r\n      var $$ = this, config = $$.config;\r\n      if ($$.hasArcType()) {\r\n          return;\r\n      }\r\n      if (!config.data_selection_enabled) {\r\n          return;\r\n      } // do nothing if not selectable\r\n      $$.main\r\n          .select('.' + CLASS.dragarea)\r\n          .transition()\r\n          .duration(100)\r\n          .style('opacity', 0)\r\n          .remove();\r\n      $$.main.selectAll('.' + CLASS.shape).classed(CLASS.INCLUDED, false);\r\n      $$.dragging = false;\r\n  };\n\n  ChartInternal.prototype.getYFormat = function (forArc) {\r\n      var $$ = this, formatForY = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.yFormat, formatForY2 = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.y2Format;\r\n      return function (v, ratio, id) {\r\n          var format = $$.axis.getId(id) === 'y2' ? formatForY2 : formatForY;\r\n          return format.call($$, v, ratio);\r\n      };\r\n  };\r\n  ChartInternal.prototype.yFormat = function (v) {\r\n      var $$ = this, config = $$.config, format = config.axis_y_tick_format\r\n          ? config.axis_y_tick_format\r\n          : $$.defaultValueFormat;\r\n      return format(v);\r\n  };\r\n  ChartInternal.prototype.y2Format = function (v) {\r\n      var $$ = this, config = $$.config, format = config.axis_y2_tick_format\r\n          ? config.axis_y2_tick_format\r\n          : $$.defaultValueFormat;\r\n      return format(v);\r\n  };\r\n  ChartInternal.prototype.defaultValueFormat = function (v) {\r\n      return isValue(v) ? +v : '';\r\n  };\r\n  ChartInternal.prototype.defaultArcValueFormat = function (v, ratio) {\r\n      return (ratio * 100).toFixed(1) + '%';\r\n  };\r\n  ChartInternal.prototype.dataLabelFormat = function (targetId) {\r\n      var $$ = this, data_labels = $$.config.data_labels, format, defaultFormat = function (v) {\r\n          return isValue(v) ? +v : '';\r\n      };\r\n      // find format according to axis id\r\n      if (typeof data_labels.format === 'function') {\r\n          format = data_labels.format;\r\n      }\r\n      else if (typeof data_labels.format === 'object') {\r\n          if (data_labels.format[targetId]) {\r\n              format =\r\n                  data_labels.format[targetId] === true\r\n                      ? defaultFormat\r\n                      : data_labels.format[targetId];\r\n          }\r\n          else {\r\n              format = function () {\r\n                  return '';\r\n              };\r\n          }\r\n      }\r\n      else {\r\n          format = defaultFormat;\r\n      }\r\n      return format;\r\n  };\n\n  ChartInternal.prototype.initGrid = function () {\r\n      var $$ = this, config = $$.config, d3 = $$.d3;\r\n      $$.grid = $$.main\r\n          .append('g')\r\n          .attr('clip-path', $$.clipPathForGrid)\r\n          .attr('class', CLASS.grid);\r\n      if (config.grid_x_show) {\r\n          $$.grid.append('g').attr('class', CLASS.xgrids);\r\n      }\r\n      if (config.grid_y_show) {\r\n          $$.grid.append('g').attr('class', CLASS.ygrids);\r\n      }\r\n      if (config.grid_focus_show) {\r\n          $$.grid\r\n              .append('g')\r\n              .attr('class', CLASS.xgridFocus)\r\n              .append('line')\r\n              .attr('class', CLASS.xgridFocus);\r\n      }\r\n      $$.xgrid = d3.selectAll([]);\r\n      if (!config.grid_lines_front) {\r\n          $$.initGridLines();\r\n      }\r\n  };\r\n  ChartInternal.prototype.initGridLines = function () {\r\n      var $$ = this, d3 = $$.d3;\r\n      $$.gridLines = $$.main\r\n          .append('g')\r\n          .attr('clip-path', $$.clipPathForGrid)\r\n          .attr('class', CLASS.grid + ' ' + CLASS.gridLines);\r\n      $$.gridLines.append('g').attr('class', CLASS.xgridLines);\r\n      $$.gridLines.append('g').attr('class', CLASS.ygridLines);\r\n      $$.xgridLines = d3.selectAll([]);\r\n  };\r\n  ChartInternal.prototype.updateXGrid = function (withoutUpdate) {\r\n      var $$ = this, config = $$.config, d3 = $$.d3, xgridData = $$.generateGridData(config.grid_x_type, $$.x), tickOffset = $$.isCategorized() ? $$.xAxis.tickOffset() : 0;\r\n      $$.xgridAttr = config.axis_rotated\r\n          ? {\r\n              x1: 0,\r\n              x2: $$.width,\r\n              y1: function (d) {\r\n                  return $$.x(d) - tickOffset;\r\n              },\r\n              y2: function (d) {\r\n                  return $$.x(d) - tickOffset;\r\n              }\r\n          }\r\n          : {\r\n              x1: function (d) {\r\n                  return $$.x(d) + tickOffset;\r\n              },\r\n              x2: function (d) {\r\n                  return $$.x(d) + tickOffset;\r\n              },\r\n              y1: 0,\r\n              y2: $$.height\r\n          };\r\n      $$.xgridAttr.opacity = function () {\r\n          var pos = +d3.select(this).attr(config.axis_rotated ? 'y1' : 'x1');\r\n          return pos === (config.axis_rotated ? $$.height : 0) ? 0 : 1;\r\n      };\r\n      var xgrid = $$.main\r\n          .select('.' + CLASS.xgrids)\r\n          .selectAll('.' + CLASS.xgrid)\r\n          .data(xgridData);\r\n      var xgridEnter = xgrid\r\n          .enter()\r\n          .append('line')\r\n          .attr('class', CLASS.xgrid)\r\n          .attr('x1', $$.xgridAttr.x1)\r\n          .attr('x2', $$.xgridAttr.x2)\r\n          .attr('y1', $$.xgridAttr.y1)\r\n          .attr('y2', $$.xgridAttr.y2)\r\n          .style('opacity', 0);\r\n      $$.xgrid = xgridEnter.merge(xgrid);\r\n      if (!withoutUpdate) {\r\n          $$.xgrid\r\n              .attr('x1', $$.xgridAttr.x1)\r\n              .attr('x2', $$.xgridAttr.x2)\r\n              .attr('y1', $$.xgridAttr.y1)\r\n              .attr('y2', $$.xgridAttr.y2)\r\n              .style('opacity', $$.xgridAttr.opacity);\r\n      }\r\n      xgrid.exit().remove();\r\n  };\r\n  ChartInternal.prototype.updateYGrid = function () {\r\n      var $$ = this, config = $$.config, gridValues = $$.yAxis.tickValues() || $$.y.ticks(config.grid_y_ticks);\r\n      var ygrid = $$.main\r\n          .select('.' + CLASS.ygrids)\r\n          .selectAll('.' + CLASS.ygrid)\r\n          .data(gridValues);\r\n      var ygridEnter = ygrid\r\n          .enter()\r\n          .append('line')\r\n          // TODO: x1, x2, y1, y2, opacity need to be set here maybe\r\n          .attr('class', CLASS.ygrid);\r\n      $$.ygrid = ygridEnter.merge(ygrid);\r\n      $$.ygrid\r\n          .attr('x1', config.axis_rotated ? $$.y : 0)\r\n          .attr('x2', config.axis_rotated ? $$.y : $$.width)\r\n          .attr('y1', config.axis_rotated ? 0 : $$.y)\r\n          .attr('y2', config.axis_rotated ? $$.height : $$.y);\r\n      ygrid.exit().remove();\r\n      $$.smoothLines($$.ygrid, 'grid');\r\n  };\r\n  ChartInternal.prototype.gridTextAnchor = function (d) {\r\n      return d.position ? d.position : 'end';\r\n  };\r\n  ChartInternal.prototype.gridTextDx = function (d) {\r\n      return d.position === 'start' ? 4 : d.position === 'middle' ? 0 : -4;\r\n  };\r\n  ChartInternal.prototype.xGridTextX = function (d) {\r\n      return d.position === 'start'\r\n          ? -this.height\r\n          : d.position === 'middle'\r\n              ? -this.height / 2\r\n              : 0;\r\n  };\r\n  ChartInternal.prototype.yGridTextX = function (d) {\r\n      return d.position === 'start'\r\n          ? 0\r\n          : d.position === 'middle'\r\n              ? this.width / 2\r\n              : this.width;\r\n  };\r\n  ChartInternal.prototype.updateGrid = function (duration) {\r\n      var $$ = this, main = $$.main, config = $$.config, xgridLine, xgridLineEnter, ygridLine, ygridLineEnter, xv = $$.xv.bind($$), yv = $$.yv.bind($$), xGridTextX = $$.xGridTextX.bind($$), yGridTextX = $$.yGridTextX.bind($$);\r\n      // hide if arc type\r\n      $$.grid.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\r\n      main.select('line.' + CLASS.xgridFocus).style('visibility', 'hidden');\r\n      if (config.grid_x_show) {\r\n          $$.updateXGrid();\r\n      }\r\n      xgridLine = main\r\n          .select('.' + CLASS.xgridLines)\r\n          .selectAll('.' + CLASS.xgridLine)\r\n          .data(config.grid_x_lines);\r\n      // enter\r\n      xgridLineEnter = xgridLine\r\n          .enter()\r\n          .append('g')\r\n          .attr('class', function (d) {\r\n          return CLASS.xgridLine + (d['class'] ? ' ' + d['class'] : '');\r\n      });\r\n      xgridLineEnter\r\n          .append('line')\r\n          .attr('x1', config.axis_rotated ? 0 : xv)\r\n          .attr('x2', config.axis_rotated ? $$.width : xv)\r\n          .attr('y1', config.axis_rotated ? xv : 0)\r\n          .attr('y2', config.axis_rotated ? xv : $$.height)\r\n          .style('opacity', 0);\r\n      xgridLineEnter\r\n          .append('text')\r\n          .attr('text-anchor', $$.gridTextAnchor)\r\n          .attr('transform', config.axis_rotated ? '' : 'rotate(-90)')\r\n          .attr('x', config.axis_rotated ? yGridTextX : xGridTextX)\r\n          .attr('y', xv)\r\n          .attr('dx', $$.gridTextDx)\r\n          .attr('dy', -5)\r\n          .style('opacity', 0);\r\n      // udpate\r\n      $$.xgridLines = xgridLineEnter.merge(xgridLine);\r\n      // done in d3.transition() of the end of this function\r\n      // exit\r\n      xgridLine\r\n          .exit()\r\n          .transition()\r\n          .duration(duration)\r\n          .style('opacity', 0)\r\n          .remove();\r\n      // Y-Grid\r\n      if (config.grid_y_show) {\r\n          $$.updateYGrid();\r\n      }\r\n      ygridLine = main\r\n          .select('.' + CLASS.ygridLines)\r\n          .selectAll('.' + CLASS.ygridLine)\r\n          .data(config.grid_y_lines);\r\n      // enter\r\n      ygridLineEnter = ygridLine\r\n          .enter()\r\n          .append('g')\r\n          .attr('class', function (d) {\r\n          return CLASS.ygridLine + (d['class'] ? ' ' + d['class'] : '');\r\n      });\r\n      ygridLineEnter\r\n          .append('line')\r\n          .attr('x1', config.axis_rotated ? yv : 0)\r\n          .attr('x2', config.axis_rotated ? yv : $$.width)\r\n          .attr('y1', config.axis_rotated ? 0 : yv)\r\n          .attr('y2', config.axis_rotated ? $$.height : yv)\r\n          .style('opacity', 0);\r\n      ygridLineEnter\r\n          .append('text')\r\n          .attr('text-anchor', $$.gridTextAnchor)\r\n          .attr('transform', config.axis_rotated ? 'rotate(-90)' : '')\r\n          .attr('x', config.axis_rotated ? xGridTextX : yGridTextX)\r\n          .attr('y', yv)\r\n          .attr('dx', $$.gridTextDx)\r\n          .attr('dy', -5)\r\n          .style('opacity', 0);\r\n      // update\r\n      $$.ygridLines = ygridLineEnter.merge(ygridLine);\r\n      $$.ygridLines\r\n          .select('line')\r\n          .transition()\r\n          .duration(duration)\r\n          .attr('x1', config.axis_rotated ? yv : 0)\r\n          .attr('x2', config.axis_rotated ? yv : $$.width)\r\n          .attr('y1', config.axis_rotated ? 0 : yv)\r\n          .attr('y2', config.axis_rotated ? $$.height : yv)\r\n          .style('opacity', 1);\r\n      $$.ygridLines\r\n          .select('text')\r\n          .transition()\r\n          .duration(duration)\r\n          .attr('x', config.axis_rotated ? $$.xGridTextX.bind($$) : $$.yGridTextX.bind($$))\r\n          .attr('y', yv)\r\n          .text(function (d) {\r\n          return d.text;\r\n      })\r\n          .style('opacity', 1);\r\n      // exit\r\n      ygridLine\r\n          .exit()\r\n          .transition()\r\n          .duration(duration)\r\n          .style('opacity', 0)\r\n          .remove();\r\n  };\r\n  ChartInternal.prototype.redrawGrid = function (withTransition, transition) {\r\n      var $$ = this, config = $$.config, xv = $$.xv.bind($$), lines = $$.xgridLines.select('line'), texts = $$.xgridLines.select('text');\r\n      return [\r\n          (withTransition ? lines.transition(transition) : lines)\r\n              .attr('x1', config.axis_rotated ? 0 : xv)\r\n              .attr('x2', config.axis_rotated ? $$.width : xv)\r\n              .attr('y1', config.axis_rotated ? xv : 0)\r\n              .attr('y2', config.axis_rotated ? xv : $$.height)\r\n              .style('opacity', 1),\r\n          (withTransition ? texts.transition(transition) : texts)\r\n              .attr('x', config.axis_rotated ? $$.yGridTextX.bind($$) : $$.xGridTextX.bind($$))\r\n              .attr('y', xv)\r\n              .text(function (d) {\r\n              return d.text;\r\n          })\r\n              .style('opacity', 1)\r\n      ];\r\n  };\r\n  ChartInternal.prototype.showXGridFocus = function (selectedData) {\r\n      var $$ = this, config = $$.config, dataToShow = selectedData.filter(function (d) {\r\n          return d && isValue(d.value);\r\n      }), focusEl = $$.main.selectAll('line.' + CLASS.xgridFocus), xx = $$.xx.bind($$);\r\n      if (!config.tooltip_show) {\r\n          return;\r\n      }\r\n      // Hide when stanford plot exists\r\n      if ($$.hasType('stanford') || $$.hasArcType()) {\r\n          return;\r\n      }\r\n      focusEl\r\n          .style('visibility', 'visible')\r\n          .data([dataToShow[0]])\r\n          .attr(config.axis_rotated ? 'y1' : 'x1', xx)\r\n          .attr(config.axis_rotated ? 'y2' : 'x2', xx);\r\n      $$.smoothLines(focusEl, 'grid');\r\n  };\r\n  ChartInternal.prototype.hideXGridFocus = function () {\r\n      this.main.select('line.' + CLASS.xgridFocus).style('visibility', 'hidden');\r\n  };\r\n  ChartInternal.prototype.updateXgridFocus = function () {\r\n      var $$ = this, config = $$.config;\r\n      $$.main\r\n          .select('line.' + CLASS.xgridFocus)\r\n          .attr('x1', config.axis_rotated ? 0 : -10)\r\n          .attr('x2', config.axis_rotated ? $$.width : -10)\r\n          .attr('y1', config.axis_rotated ? -10 : 0)\r\n          .attr('y2', config.axis_rotated ? -10 : $$.height);\r\n  };\r\n  ChartInternal.prototype.generateGridData = function (type, scale) {\r\n      var $$ = this, gridData = [], xDomain, firstYear, lastYear, i, tickNum = $$.main\r\n          .select('.' + CLASS.axisX)\r\n          .selectAll('.tick')\r\n          .size();\r\n      if (type === 'year') {\r\n          xDomain = $$.getXDomain();\r\n          firstYear = xDomain[0].getFullYear();\r\n          lastYear = xDomain[1].getFullYear();\r\n          for (i = firstYear; i <= lastYear; i++) {\r\n              gridData.push(new Date(i + '-01-01 00:00:00'));\r\n          }\r\n      }\r\n      else {\r\n          gridData = scale.ticks(10);\r\n          if (gridData.length > tickNum) {\r\n              // use only int\r\n              gridData = gridData.filter(function (d) {\r\n                  return ('' + d).indexOf('.') < 0;\r\n              });\r\n          }\r\n      }\r\n      return gridData;\r\n  };\r\n  ChartInternal.prototype.getGridFilterToRemove = function (params) {\r\n      return params\r\n          ? function (line) {\r\n              var found = false;\r\n              [].concat(params).forEach(function (param) {\r\n                  if (('value' in param && line.value === param.value) ||\r\n                      ('class' in param && line['class'] === param['class'])) {\r\n                      found = true;\r\n                  }\r\n              });\r\n              return found;\r\n          }\r\n          : function () {\r\n              return true;\r\n          };\r\n  };\r\n  ChartInternal.prototype.removeGridLines = function (params, forX) {\r\n      var $$ = this, config = $$.config, toRemove = $$.getGridFilterToRemove(params), toShow = function (line) {\r\n          return !toRemove(line);\r\n      }, classLines = forX ? CLASS.xgridLines : CLASS.ygridLines, classLine = forX ? CLASS.xgridLine : CLASS.ygridLine;\r\n      $$.main\r\n          .select('.' + classLines)\r\n          .selectAll('.' + classLine)\r\n          .filter(toRemove)\r\n          .transition()\r\n          .duration(config.transition_duration)\r\n          .style('opacity', 0)\r\n          .remove();\r\n      if (forX) {\r\n          config.grid_x_lines = config.grid_x_lines.filter(toShow);\r\n      }\r\n      else {\r\n          config.grid_y_lines = config.grid_y_lines.filter(toShow);\r\n      }\r\n  };\n\n  ChartInternal.prototype.initEventRect = function () {\r\n      var $$ = this, config = $$.config;\r\n      $$.main\r\n          .select('.' + CLASS.chart)\r\n          .append('g')\r\n          .attr('class', CLASS.eventRects)\r\n          .style('fill-opacity', 0);\r\n      $$.eventRect = $$.main\r\n          .select('.' + CLASS.eventRects)\r\n          .append('rect')\r\n          .attr('class', CLASS.eventRect);\r\n      // event rect handle zoom event as well\r\n      if (config.zoom_enabled && $$.zoom) {\r\n          $$.eventRect.call($$.zoom).on('dblclick.zoom', null);\r\n          if (config.zoom_initialRange) {\r\n              // WORKAROUND: Add transition to apply transform immediately when no subchart\r\n              $$.eventRect\r\n                  .transition()\r\n                  .duration(0)\r\n                  .call($$.zoom.transform, $$.zoomTransform(config.zoom_initialRange));\r\n          }\r\n      }\r\n  };\r\n  ChartInternal.prototype.redrawEventRect = function () {\r\n      var $$ = this, d3 = $$.d3, config = $$.config;\r\n      function mouseout() {\r\n          $$.svg.select('.' + CLASS.eventRect).style('cursor', null);\r\n          $$.hideXGridFocus();\r\n          $$.hideTooltip();\r\n          $$.unexpandCircles();\r\n          $$.unexpandBars();\r\n      }\r\n      var isHoveringDataPoint = function (mouse, closest) {\r\n          return closest &&\r\n              ($$.isBarType(closest.id) ||\r\n                  $$.dist(closest, mouse) < config.point_sensitivity);\r\n      };\r\n      var withName = function (d) { return (d ? $$.addName(Object.assign({}, d)) : null); };\r\n      // rects for mouseover\r\n      $$.main\r\n          .select('.' + CLASS.eventRects)\r\n          .style('cursor', config.zoom_enabled\r\n          ? config.axis_rotated\r\n              ? 'ns-resize'\r\n              : 'ew-resize'\r\n          : null);\r\n      $$.eventRect\r\n          .attr('x', 0)\r\n          .attr('y', 0)\r\n          .attr('width', $$.width)\r\n          .attr('height', $$.height)\r\n          .on('mouseout', config.interaction_enabled\r\n          ? function () {\r\n              if (!config) {\r\n                  return;\r\n              } // chart is destroyed\r\n              if ($$.hasArcType()) {\r\n                  return;\r\n              }\r\n              if ($$.mouseover) {\r\n                  config.data_onmouseout.call($$.api, $$.mouseover);\r\n                  $$.mouseover = undefined;\r\n              }\r\n              mouseout();\r\n          }\r\n          : null)\r\n          .on('mousemove', config.interaction_enabled\r\n          ? function () {\r\n              // do nothing when dragging\r\n              if ($$.dragging) {\r\n                  return;\r\n              }\r\n              var targetsToShow = $$.getTargetsToShow();\r\n              // do nothing if arc type\r\n              if ($$.hasArcType(targetsToShow)) {\r\n                  return;\r\n              }\r\n              var mouse = d3.mouse(this);\r\n              var closest = withName($$.findClosestFromTargets(targetsToShow, mouse));\r\n              var isMouseCloseToDataPoint = isHoveringDataPoint(mouse, closest);\r\n              // ensure onmouseout is always called if mousemove switch between 2 targets\r\n              if ($$.mouseover &&\r\n                  (!closest ||\r\n                      closest.id !== $$.mouseover.id ||\r\n                      closest.index !== $$.mouseover.index)) {\r\n                  config.data_onmouseout.call($$.api, $$.mouseover);\r\n                  $$.mouseover = undefined;\r\n              }\r\n              if (closest && !$$.mouseover) {\r\n                  config.data_onmouseover.call($$.api, closest);\r\n                  $$.mouseover = closest;\r\n              }\r\n              // show cursor as pointer if we're hovering a data point close enough\r\n              $$.svg\r\n                  .select('.' + CLASS.eventRect)\r\n                  .style('cursor', isMouseCloseToDataPoint ? 'pointer' : null);\r\n              // if tooltip not grouped, we want to display only data from closest data point\r\n              var showSingleDataPoint = !config.tooltip_grouped || $$.hasType('stanford', targetsToShow);\r\n              // find data to highlight\r\n              var selectedData;\r\n              if (showSingleDataPoint) {\r\n                  if (closest) {\r\n                      selectedData = [closest];\r\n                  }\r\n              }\r\n              else {\r\n                  var closestByX = void 0;\r\n                  if (closest) {\r\n                      // reuse closest value\r\n                      closestByX = closest;\r\n                  }\r\n                  else {\r\n                      // try to find the closest value by X values from the mouse position\r\n                      var mouseX = config.axis_rotated ? mouse[1] : mouse[0];\r\n                      closestByX = $$.findClosestFromTargetsByX(targetsToShow, $$.x.invert(mouseX));\r\n                  }\r\n                  // highlight all data for this 'x' value\r\n                  if (closestByX) {\r\n                      selectedData = $$.filterByX(targetsToShow, closestByX.x);\r\n                  }\r\n              }\r\n              // ensure we have data to show\r\n              if (!selectedData || selectedData.length === 0) {\r\n                  return mouseout();\r\n              }\r\n              // inject names for each point\r\n              selectedData = selectedData.map(withName);\r\n              // show tooltip\r\n              $$.showTooltip(selectedData, this);\r\n              // expand points\r\n              if (config.point_focus_expand_enabled) {\r\n                  $$.unexpandCircles();\r\n                  selectedData.forEach(function (d) {\r\n                      $$.expandCircles(d.index, d.id, false);\r\n                  });\r\n              }\r\n              // expand bars\r\n              $$.unexpandBars();\r\n              selectedData.forEach(function (d) {\r\n                  $$.expandBars(d.index, d.id, false);\r\n              });\r\n              // Show xgrid focus line\r\n              $$.showXGridFocus(selectedData);\r\n          }\r\n          : null)\r\n          .on('click', config.interaction_enabled\r\n          ? function () {\r\n              var targetsToShow = $$.getTargetsToShow();\r\n              if ($$.hasArcType(targetsToShow)) {\r\n                  return;\r\n              }\r\n              var mouse = d3.mouse(this);\r\n              var closest = withName($$.findClosestFromTargets(targetsToShow, mouse));\r\n              if (!isHoveringDataPoint(mouse, closest)) {\r\n                  return;\r\n              }\r\n              // select if selection enabled\r\n              var sameXData;\r\n              if (!config.data_selection_grouped || $$.isStanfordType(closest)) {\r\n                  sameXData = [closest];\r\n              }\r\n              else {\r\n                  sameXData = $$.filterByX(targetsToShow, closest.x);\r\n              }\r\n              // toggle selected state\r\n              sameXData.forEach(function (d) {\r\n                  $$.main\r\n                      .selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(d.id))\r\n                      .selectAll('.' + CLASS.shape + '-' + d.index)\r\n                      .each(function () {\r\n                      if (config.data_selection_grouped ||\r\n                          $$.isWithinShape(this, d)) {\r\n                          $$.toggleShape(this, d, d.index);\r\n                      }\r\n                  });\r\n              });\r\n              // call data_onclick on the closest data point\r\n              if (closest) {\r\n                  var shape = $$.main\r\n                      .selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(closest.id))\r\n                      .select('.' + CLASS.shape + '-' + closest.index);\r\n                  config.data_onclick.call($$.api, closest, shape.node());\r\n              }\r\n          }\r\n          : null)\r\n          .call(config.interaction_enabled && config.data_selection_draggable && $$.drag\r\n          ? d3\r\n              .drag()\r\n              .on('drag', function () {\r\n              $$.drag(d3.mouse(this));\r\n          })\r\n              .on('start', function () {\r\n              $$.dragstart(d3.mouse(this));\r\n          })\r\n              .on('end', function () {\r\n              $$.dragend();\r\n          })\r\n          : function () { });\r\n  };\r\n  ChartInternal.prototype.getMousePosition = function (data) {\r\n      var $$ = this;\r\n      return [$$.x(data.x), $$.getYScale(data.id)(data.value)];\r\n  };\r\n  ChartInternal.prototype.dispatchEvent = function (type, mouse) {\r\n      var $$ = this, selector = '.' + CLASS.eventRect, eventRect = $$.main.select(selector).node(), box = eventRect.getBoundingClientRect(), x = box.left + (mouse ? mouse[0] : 0), y = box.top + (mouse ? mouse[1] : 0), event = document.createEvent('MouseEvents');\r\n      event.initMouseEvent(type, true, true, window, 0, x, y, x, y, false, false, false, false, 0, null);\r\n      eventRect.dispatchEvent(event);\r\n  };\n\n  ChartInternal.prototype.initLegend = function () {\r\n      var $$ = this;\r\n      $$.legendItemTextBox = {};\r\n      $$.legendHasRendered = false;\r\n      $$.legend = $$.svg.append('g').attr('transform', $$.getTranslate('legend'));\r\n      if (!$$.config.legend_show) {\r\n          $$.legend.style('visibility', 'hidden');\r\n          $$.hiddenLegendIds = $$.mapToIds($$.data.targets);\r\n          return;\r\n      }\r\n      // MEMO: call here to update legend box and tranlate for all\r\n      // MEMO: translate will be updated by this, so transform not needed in updateLegend()\r\n      $$.updateLegendWithDefaults();\r\n  };\r\n  ChartInternal.prototype.updateLegendWithDefaults = function () {\r\n      var $$ = this;\r\n      $$.updateLegend($$.mapToIds($$.data.targets), {\r\n          withTransform: false,\r\n          withTransitionForTransform: false,\r\n          withTransition: false\r\n      });\r\n  };\r\n  ChartInternal.prototype.updateSizeForLegend = function (legendHeight, legendWidth) {\r\n      var $$ = this, config = $$.config, insetLegendPosition = {\r\n          top: $$.isLegendTop\r\n              ? $$.getCurrentPaddingTop() + config.legend_inset_y + 5.5\r\n              : $$.currentHeight -\r\n                  legendHeight -\r\n                  $$.getCurrentPaddingBottom() -\r\n                  config.legend_inset_y,\r\n          left: $$.isLegendLeft\r\n              ? $$.getCurrentPaddingLeft() + config.legend_inset_x + 0.5\r\n              : $$.currentWidth -\r\n                  legendWidth -\r\n                  $$.getCurrentPaddingRight() -\r\n                  config.legend_inset_x +\r\n                  0.5\r\n      };\r\n      $$.margin3 = {\r\n          top: $$.isLegendRight\r\n              ? 0\r\n              : $$.isLegendInset\r\n                  ? insetLegendPosition.top\r\n                  : $$.currentHeight - legendHeight,\r\n          right: NaN,\r\n          bottom: 0,\r\n          left: $$.isLegendRight\r\n              ? $$.currentWidth - legendWidth\r\n              : $$.isLegendInset\r\n                  ? insetLegendPosition.left\r\n                  : 0\r\n      };\r\n  };\r\n  ChartInternal.prototype.transformLegend = function (withTransition) {\r\n      var $$ = this;\r\n      (withTransition ? $$.legend.transition() : $$.legend).attr('transform', $$.getTranslate('legend'));\r\n  };\r\n  ChartInternal.prototype.updateLegendStep = function (step) {\r\n      this.legendStep = step;\r\n  };\r\n  ChartInternal.prototype.updateLegendItemWidth = function (w) {\r\n      this.legendItemWidth = w;\r\n  };\r\n  ChartInternal.prototype.updateLegendItemHeight = function (h) {\r\n      this.legendItemHeight = h;\r\n  };\r\n  ChartInternal.prototype.getLegendWidth = function () {\r\n      var $$ = this;\r\n      return $$.config.legend_show\r\n          ? $$.isLegendRight || $$.isLegendInset\r\n              ? $$.legendItemWidth * ($$.legendStep + 1)\r\n              : $$.currentWidth\r\n          : 0;\r\n  };\r\n  ChartInternal.prototype.getLegendHeight = function () {\r\n      var $$ = this, h = 0;\r\n      if ($$.config.legend_show) {\r\n          if ($$.isLegendRight) {\r\n              h = $$.currentHeight;\r\n          }\r\n          else {\r\n              h = Math.max(20, $$.legendItemHeight) * ($$.legendStep + 1);\r\n          }\r\n      }\r\n      return h;\r\n  };\r\n  ChartInternal.prototype.opacityForLegend = function (legendItem) {\r\n      return legendItem.classed(CLASS.legendItemHidden) ? null : 1;\r\n  };\r\n  ChartInternal.prototype.opacityForUnfocusedLegend = function (legendItem) {\r\n      return legendItem.classed(CLASS.legendItemHidden) ? null : 0.3;\r\n  };\r\n  ChartInternal.prototype.toggleFocusLegend = function (targetIds, focus) {\r\n      var $$ = this;\r\n      targetIds = $$.mapToTargetIds(targetIds);\r\n      $$.legend\r\n          .selectAll('.' + CLASS.legendItem)\r\n          .filter(function (id) {\r\n          return targetIds.indexOf(id) >= 0;\r\n      })\r\n          .classed(CLASS.legendItemFocused, focus)\r\n          .transition()\r\n          .duration(100)\r\n          .style('opacity', function () {\r\n          var opacity = focus ? $$.opacityForLegend : $$.opacityForUnfocusedLegend;\r\n          return opacity.call($$, $$.d3.select(this));\r\n      });\r\n  };\r\n  ChartInternal.prototype.revertLegend = function () {\r\n      var $$ = this, d3 = $$.d3;\r\n      $$.legend\r\n          .selectAll('.' + CLASS.legendItem)\r\n          .classed(CLASS.legendItemFocused, false)\r\n          .transition()\r\n          .duration(100)\r\n          .style('opacity', function () {\r\n          return $$.opacityForLegend(d3.select(this));\r\n      });\r\n  };\r\n  ChartInternal.prototype.showLegend = function (targetIds) {\r\n      var $$ = this, config = $$.config;\r\n      if (!config.legend_show) {\r\n          config.legend_show = true;\r\n          $$.legend.style('visibility', 'visible');\r\n          if (!$$.legendHasRendered) {\r\n              $$.updateLegendWithDefaults();\r\n          }\r\n      }\r\n      $$.removeHiddenLegendIds(targetIds);\r\n      $$.legend\r\n          .selectAll($$.selectorLegends(targetIds))\r\n          .style('visibility', 'visible')\r\n          .transition()\r\n          .style('opacity', function () {\r\n          return $$.opacityForLegend($$.d3.select(this));\r\n      });\r\n  };\r\n  ChartInternal.prototype.hideLegend = function (targetIds) {\r\n      var $$ = this, config = $$.config;\r\n      if (config.legend_show && isEmpty(targetIds)) {\r\n          config.legend_show = false;\r\n          $$.legend.style('visibility', 'hidden');\r\n      }\r\n      $$.addHiddenLegendIds(targetIds);\r\n      $$.legend\r\n          .selectAll($$.selectorLegends(targetIds))\r\n          .style('opacity', 0)\r\n          .style('visibility', 'hidden');\r\n  };\r\n  ChartInternal.prototype.clearLegendItemTextBoxCache = function () {\r\n      this.legendItemTextBox = {};\r\n  };\r\n  ChartInternal.prototype.updateLegend = function (targetIds, options, transitions) {\r\n      var $$ = this, config = $$.config;\r\n      var xForLegend, xForLegendText, xForLegendRect, yForLegend, yForLegendText, yForLegendRect, x1ForLegendTile, x2ForLegendTile, yForLegendTile;\r\n      var paddingTop = 4, paddingRight = 10, maxWidth = 0, maxHeight = 0, posMin = 10, tileWidth = config.legend_item_tile_width + 5;\r\n      var l, totalLength = 0, offsets = {}, widths = {}, heights = {}, margins = [0], steps = {}, step = 0;\r\n      var withTransition, withTransitionForTransform;\r\n      var texts, rects, tiles, background;\r\n      // Skip elements when their name is set to null\r\n      targetIds = targetIds.filter(function (id) {\r\n          return !isDefined(config.data_names[id]) || config.data_names[id] !== null;\r\n      });\r\n      options = options || {};\r\n      withTransition = getOption(options, 'withTransition', true);\r\n      withTransitionForTransform = getOption(options, 'withTransitionForTransform', true);\r\n      function getTextBox(textElement, id) {\r\n          if (!$$.legendItemTextBox[id]) {\r\n              $$.legendItemTextBox[id] = $$.getTextRect(textElement.textContent, CLASS.legendItem, textElement);\r\n          }\r\n          return $$.legendItemTextBox[id];\r\n      }\r\n      function updatePositions(textElement, id, index) {\r\n          var reset = index === 0, isLast = index === targetIds.length - 1, box = getTextBox(textElement, id), itemWidth = box.width +\r\n              tileWidth +\r\n              (isLast && !($$.isLegendRight || $$.isLegendInset) ? 0 : paddingRight) +\r\n              config.legend_padding, itemHeight = box.height + paddingTop, itemLength = $$.isLegendRight || $$.isLegendInset ? itemHeight : itemWidth, areaLength = $$.isLegendRight || $$.isLegendInset\r\n              ? $$.getLegendHeight()\r\n              : $$.getLegendWidth(), margin, maxLength;\r\n          // MEMO: care about condifion of step, totalLength\r\n          function updateValues(id, withoutStep) {\r\n              if (!withoutStep) {\r\n                  margin = (areaLength - totalLength - itemLength) / 2;\r\n                  if (margin < posMin) {\r\n                      margin = (areaLength - itemLength) / 2;\r\n                      totalLength = 0;\r\n                      step++;\r\n                  }\r\n              }\r\n              steps[id] = step;\r\n              margins[step] = $$.isLegendInset ? 10 : margin;\r\n              offsets[id] = totalLength;\r\n              totalLength += itemLength;\r\n          }\r\n          if (reset) {\r\n              totalLength = 0;\r\n              step = 0;\r\n              maxWidth = 0;\r\n              maxHeight = 0;\r\n          }\r\n          if (config.legend_show && !$$.isLegendToShow(id)) {\r\n              widths[id] = heights[id] = steps[id] = offsets[id] = 0;\r\n              return;\r\n          }\r\n          widths[id] = itemWidth;\r\n          heights[id] = itemHeight;\r\n          if (!maxWidth || itemWidth >= maxWidth) {\r\n              maxWidth = itemWidth;\r\n          }\r\n          if (!maxHeight || itemHeight >= maxHeight) {\r\n              maxHeight = itemHeight;\r\n          }\r\n          maxLength = $$.isLegendRight || $$.isLegendInset ? maxHeight : maxWidth;\r\n          if (config.legend_equally) {\r\n              Object.keys(widths).forEach(function (id) {\r\n                  widths[id] = maxWidth;\r\n              });\r\n              Object.keys(heights).forEach(function (id) {\r\n                  heights[id] = maxHeight;\r\n              });\r\n              margin = (areaLength - maxLength * targetIds.length) / 2;\r\n              if (margin < posMin) {\r\n                  totalLength = 0;\r\n                  step = 0;\r\n                  targetIds.forEach(function (id) {\r\n                      updateValues(id);\r\n                  });\r\n              }\r\n              else {\r\n                  updateValues(id, true);\r\n              }\r\n          }\r\n          else {\r\n              updateValues(id);\r\n          }\r\n      }\r\n      if ($$.isLegendInset) {\r\n          step = config.legend_inset_step\r\n              ? config.legend_inset_step\r\n              : targetIds.length;\r\n          $$.updateLegendStep(step);\r\n      }\r\n      if ($$.isLegendRight) {\r\n          xForLegend = function (id) {\r\n              return maxWidth * steps[id];\r\n          };\r\n          yForLegend = function (id) {\r\n              return margins[steps[id]] + offsets[id];\r\n          };\r\n      }\r\n      else if ($$.isLegendInset) {\r\n          xForLegend = function (id) {\r\n              return maxWidth * steps[id] + 10;\r\n          };\r\n          yForLegend = function (id) {\r\n              return margins[steps[id]] + offsets[id];\r\n          };\r\n      }\r\n      else {\r\n          xForLegend = function (id) {\r\n              return margins[steps[id]] + offsets[id];\r\n          };\r\n          yForLegend = function (id) {\r\n              return maxHeight * steps[id];\r\n          };\r\n      }\r\n      xForLegendText = function (id, i) {\r\n          return xForLegend(id, i) + 4 + config.legend_item_tile_width;\r\n      };\r\n      yForLegendText = function (id, i) {\r\n          return yForLegend(id, i) + 9;\r\n      };\r\n      xForLegendRect = function (id, i) {\r\n          return xForLegend(id, i);\r\n      };\r\n      yForLegendRect = function (id, i) {\r\n          return yForLegend(id, i) - 5;\r\n      };\r\n      x1ForLegendTile = function (id, i) {\r\n          return xForLegend(id, i) - 2;\r\n      };\r\n      x2ForLegendTile = function (id, i) {\r\n          return xForLegend(id, i) - 2 + config.legend_item_tile_width;\r\n      };\r\n      yForLegendTile = function (id, i) {\r\n          return yForLegend(id, i) + 4;\r\n      };\r\n      // Define g for legend area\r\n      l = $$.legend\r\n          .selectAll('.' + CLASS.legendItem)\r\n          .data(targetIds)\r\n          .enter()\r\n          .append('g')\r\n          .attr('class', function (id) {\r\n          return $$.generateClass(CLASS.legendItem, id);\r\n      })\r\n          .style('visibility', function (id) {\r\n          return $$.isLegendToShow(id) ? 'visible' : 'hidden';\r\n      })\r\n          .style('cursor', function () {\r\n          return config.interaction_enabled ? 'pointer' : 'auto';\r\n      })\r\n          .on('click', config.interaction_enabled\r\n          ? function (id) {\r\n              if (config.legend_item_onclick) {\r\n                  config.legend_item_onclick.call($$, id);\r\n              }\r\n              else {\r\n                  if ($$.d3.event.altKey) {\r\n                      $$.api.hide();\r\n                      $$.api.show(id);\r\n                  }\r\n                  else {\r\n                      $$.api.toggle(id);\r\n                      $$.isTargetToShow(id) ? $$.api.focus(id) : $$.api.revert();\r\n                  }\r\n              }\r\n          }\r\n          : null)\r\n          .on('mouseover', config.interaction_enabled\r\n          ? function (id) {\r\n              if (config.legend_item_onmouseover) {\r\n                  config.legend_item_onmouseover.call($$, id);\r\n              }\r\n              else {\r\n                  $$.d3.select(this).classed(CLASS.legendItemFocused, true);\r\n                  if (!$$.transiting && $$.isTargetToShow(id)) {\r\n                      $$.api.focus(id);\r\n                  }\r\n              }\r\n          }\r\n          : null)\r\n          .on('mouseout', config.interaction_enabled\r\n          ? function (id) {\r\n              if (config.legend_item_onmouseout) {\r\n                  config.legend_item_onmouseout.call($$, id);\r\n              }\r\n              else {\r\n                  $$.d3.select(this).classed(CLASS.legendItemFocused, false);\r\n                  $$.api.revert();\r\n              }\r\n          }\r\n          : null);\r\n      l.append('text')\r\n          .text(function (id) {\r\n          return isDefined(config.data_names[id]) ? config.data_names[id] : id;\r\n      })\r\n          .each(function (id, i) {\r\n          updatePositions(this, id, i);\r\n      })\r\n          .style('pointer-events', 'none')\r\n          .attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendText : -200)\r\n          .attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendText);\r\n      l.append('rect')\r\n          .attr('class', CLASS.legendItemEvent)\r\n          .style('fill-opacity', 0)\r\n          .attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendRect : -200)\r\n          .attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendRect);\r\n      l.append('line')\r\n          .attr('class', CLASS.legendItemTile)\r\n          .style('stroke', $$.color)\r\n          .style('pointer-events', 'none')\r\n          .attr('x1', $$.isLegendRight || $$.isLegendInset ? x1ForLegendTile : -200)\r\n          .attr('y1', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile)\r\n          .attr('x2', $$.isLegendRight || $$.isLegendInset ? x2ForLegendTile : -200)\r\n          .attr('y2', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile)\r\n          .attr('stroke-width', config.legend_item_tile_height);\r\n      // Set background for inset legend\r\n      background = $$.legend.select('.' + CLASS.legendBackground + ' rect');\r\n      if ($$.isLegendInset && maxWidth > 0 && background.size() === 0) {\r\n          background = $$.legend\r\n              .insert('g', '.' + CLASS.legendItem)\r\n              .attr('class', CLASS.legendBackground)\r\n              .append('rect');\r\n      }\r\n      texts = $$.legend\r\n          .selectAll('text')\r\n          .data(targetIds)\r\n          .text(function (id) {\r\n          return isDefined(config.data_names[id]) ? config.data_names[id] : id;\r\n      }) // MEMO: needed for update\r\n          .each(function (id, i) {\r\n          updatePositions(this, id, i);\r\n      });\r\n      (withTransition ? texts.transition() : texts)\r\n          .attr('x', xForLegendText)\r\n          .attr('y', yForLegendText);\r\n      rects = $$.legend.selectAll('rect.' + CLASS.legendItemEvent).data(targetIds);\r\n      (withTransition ? rects.transition() : rects)\r\n          .attr('width', function (id) {\r\n          return widths[id];\r\n      })\r\n          .attr('height', function (id) {\r\n          return heights[id];\r\n      })\r\n          .attr('x', xForLegendRect)\r\n          .attr('y', yForLegendRect);\r\n      tiles = $$.legend.selectAll('line.' + CLASS.legendItemTile).data(targetIds);\r\n      (withTransition ? tiles.transition() : tiles)\r\n          .style('stroke', $$.levelColor\r\n          ? function (id) {\r\n              return $$.levelColor($$.cache[id].values.reduce(function (total, item) {\r\n                  return total + item.value;\r\n              }, 0));\r\n          }\r\n          : $$.color)\r\n          .attr('x1', x1ForLegendTile)\r\n          .attr('y1', yForLegendTile)\r\n          .attr('x2', x2ForLegendTile)\r\n          .attr('y2', yForLegendTile);\r\n      if (background) {\r\n          (withTransition ? background.transition() : background)\r\n              .attr('height', $$.getLegendHeight() - 12)\r\n              .attr('width', maxWidth * (step + 1) + 10);\r\n      }\r\n      // toggle legend state\r\n      $$.legend\r\n          .selectAll('.' + CLASS.legendItem)\r\n          .classed(CLASS.legendItemHidden, function (id) {\r\n          return !$$.isTargetToShow(id);\r\n      });\r\n      // Update all to reflect change of legend\r\n      $$.updateLegendItemWidth(maxWidth);\r\n      $$.updateLegendItemHeight(maxHeight);\r\n      $$.updateLegendStep(step);\r\n      // Update size and scale\r\n      $$.updateSizes();\r\n      $$.updateScales();\r\n      $$.updateSvgSize();\r\n      // Update g positions\r\n      $$.transformAll(withTransitionForTransform, transitions);\r\n      $$.legendHasRendered = true;\r\n  };\n\n  ChartInternal.prototype.initRegion = function () {\r\n      var $$ = this;\r\n      $$.region = $$.main\r\n          .append('g')\r\n          .attr('clip-path', $$.clipPath)\r\n          .attr('class', CLASS.regions);\r\n  };\r\n  ChartInternal.prototype.updateRegion = function (duration) {\r\n      var $$ = this, config = $$.config;\r\n      // hide if arc type\r\n      $$.region.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\r\n      var mainRegion = $$.main\r\n          .select('.' + CLASS.regions)\r\n          .selectAll('.' + CLASS.region)\r\n          .data(config.regions);\r\n      var g = mainRegion.enter().append('g');\r\n      g.append('rect')\r\n          .attr('x', $$.regionX.bind($$))\r\n          .attr('y', $$.regionY.bind($$))\r\n          .attr('width', $$.regionWidth.bind($$))\r\n          .attr('height', $$.regionHeight.bind($$))\r\n          .style('fill-opacity', function (d) {\r\n          return isValue(d.opacity) ? d.opacity : 0.1;\r\n      });\r\n      g.append('text').text($$.labelRegion.bind($$));\r\n      $$.mainRegion = g.merge(mainRegion).attr('class', $$.classRegion.bind($$));\r\n      mainRegion\r\n          .exit()\r\n          .transition()\r\n          .duration(duration)\r\n          .style('opacity', 0)\r\n          .remove();\r\n  };\r\n  ChartInternal.prototype.redrawRegion = function (withTransition, transition) {\r\n      var $$ = this, regions = $$.mainRegion, regionLabels = $$.mainRegion.selectAll('text');\r\n      return [\r\n          (withTransition ? regions.transition(transition) : regions)\r\n              .attr('x', $$.regionX.bind($$))\r\n              .attr('y', $$.regionY.bind($$))\r\n              .attr('width', $$.regionWidth.bind($$))\r\n              .attr('height', $$.regionHeight.bind($$))\r\n              .style('fill-opacity', function (d) {\r\n              return isValue(d.opacity) ? d.opacity : 0.1;\r\n          }),\r\n          (withTransition ? regionLabels.transition(transition) : regionLabels)\r\n              .attr('x', $$.labelOffsetX.bind($$))\r\n              .attr('y', $$.labelOffsetY.bind($$))\r\n              .attr('transform', $$.labelTransform.bind($$))\r\n              .attr('style', 'text-anchor: left;')\r\n      ];\r\n  };\r\n  ChartInternal.prototype.regionX = function (d) {\r\n      var $$ = this, config = $$.config, xPos, yScale = d.axis === 'y' ? $$.y : $$.y2;\r\n      if (d.axis === 'y' || d.axis === 'y2') {\r\n          xPos = config.axis_rotated ? ('start' in d ? yScale(d.start) : 0) : 0;\r\n      }\r\n      else {\r\n          xPos = config.axis_rotated\r\n              ? 0\r\n              : 'start' in d\r\n                  ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start)\r\n                  : 0;\r\n      }\r\n      return xPos;\r\n  };\r\n  ChartInternal.prototype.regionY = function (d) {\r\n      var $$ = this, config = $$.config, yPos, yScale = d.axis === 'y' ? $$.y : $$.y2;\r\n      if (d.axis === 'y' || d.axis === 'y2') {\r\n          yPos = config.axis_rotated ? 0 : 'end' in d ? yScale(d.end) : 0;\r\n      }\r\n      else {\r\n          yPos = config.axis_rotated\r\n              ? 'start' in d\r\n                  ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start)\r\n                  : 0\r\n              : 0;\r\n      }\r\n      return yPos;\r\n  };\r\n  ChartInternal.prototype.regionWidth = function (d) {\r\n      var $$ = this, config = $$.config, start = $$.regionX(d), end, yScale = d.axis === 'y' ? $$.y : $$.y2;\r\n      if (d.axis === 'y' || d.axis === 'y2') {\r\n          end = config.axis_rotated\r\n              ? 'end' in d\r\n                  ? yScale(d.end)\r\n                  : $$.width\r\n              : $$.width;\r\n      }\r\n      else {\r\n          end = config.axis_rotated\r\n              ? $$.width\r\n              : 'end' in d\r\n                  ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end)\r\n                  : $$.width;\r\n      }\r\n      return end < start ? 0 : end - start;\r\n  };\r\n  ChartInternal.prototype.regionHeight = function (d) {\r\n      var $$ = this, config = $$.config, start = this.regionY(d), end, yScale = d.axis === 'y' ? $$.y : $$.y2;\r\n      if (d.axis === 'y' || d.axis === 'y2') {\r\n          end = config.axis_rotated\r\n              ? $$.height\r\n              : 'start' in d\r\n                  ? yScale(d.start)\r\n                  : $$.height;\r\n      }\r\n      else {\r\n          end = config.axis_rotated\r\n              ? 'end' in d\r\n                  ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end)\r\n                  : $$.height\r\n              : $$.height;\r\n      }\r\n      return end < start ? 0 : end - start;\r\n  };\r\n  ChartInternal.prototype.isRegionOnX = function (d) {\r\n      return !d.axis || d.axis === 'x';\r\n  };\r\n  ChartInternal.prototype.labelRegion = function (d) {\r\n      return 'label' in d ? d.label : '';\r\n  };\r\n  ChartInternal.prototype.labelTransform = function (d) {\r\n      return 'vertical' in d && d.vertical ? 'rotate(90)' : '';\r\n  };\r\n  ChartInternal.prototype.labelOffsetX = function (d) {\r\n      var paddingX = 'paddingX' in d ? d.paddingX : 3;\r\n      var paddingY = 'paddingY' in d ? d.paddingY : 3;\r\n      return 'vertical' in d && d.vertical\r\n          ? this.regionY(d) + paddingY\r\n          : this.regionX(d) + paddingX;\r\n  };\r\n  ChartInternal.prototype.labelOffsetY = function (d) {\r\n      var paddingX = 'paddingX' in d ? d.paddingX : 3;\r\n      var paddingY = 'paddingY' in d ? d.paddingY : 3;\r\n      return 'vertical' in d && d.vertical\r\n          ? -(this.regionX(d) + paddingX)\r\n          : this.regionY(d) + 10 + paddingY;\r\n  };\n\n  function c3LogScale(d3, linearScale, logScale) {\r\n      var PROJECTION = [0.01, 10];\r\n      if (!linearScale) {\r\n          linearScale = d3.scaleLinear();\r\n          linearScale.range(PROJECTION);\r\n      }\r\n      if (!logScale) {\r\n          logScale = d3.scaleLog();\r\n          logScale.domain(PROJECTION);\r\n          logScale.nice();\r\n      }\r\n      // copied from https://github.com/compute-io/logspace\r\n      function logspace(a, b, len) {\r\n          var arr, end, tmp, d;\r\n          if (arguments.length < 3) {\r\n              len = 10;\r\n          }\r\n          else {\r\n              if (len === 0) {\r\n                  return [];\r\n              }\r\n          }\r\n          // Calculate the increment:\r\n          end = len - 1;\r\n          d = (b - a) / end;\r\n          // Build the output array...\r\n          arr = new Array(len);\r\n          tmp = a;\r\n          arr[0] = Math.pow(10, tmp);\r\n          for (var i = 1; i < end; i++) {\r\n              tmp += d;\r\n              arr[i] = Math.pow(10, tmp);\r\n          }\r\n          arr[end] = Math.pow(10, b);\r\n          return arr;\r\n      }\r\n      function scale(x) {\r\n          return logScale(linearScale(x));\r\n      }\r\n      scale.domain = function (x) {\r\n          if (!arguments.length) {\r\n              return linearScale.domain();\r\n          }\r\n          linearScale.domain(x);\r\n          return scale;\r\n      };\r\n      scale.range = function (x) {\r\n          if (!arguments.length) {\r\n              return logScale.range();\r\n          }\r\n          logScale.range(x);\r\n          return scale;\r\n      };\r\n      scale.ticks = function (m) {\r\n          return logspace(-2, 1, m || 10).map(function (v) {\r\n              return linearScale.invert(v);\r\n          });\r\n      };\r\n      scale.copy = function () {\r\n          return c3LogScale(d3, linearScale.copy(), logScale.copy());\r\n      };\r\n      return scale;\r\n  }\r\n  ChartInternal.prototype.getScale = function (min, max, forTimeseries) {\r\n      return (forTimeseries ? this.d3.scaleTime() : this.d3.scaleLinear()).range([\r\n          min,\r\n          max\r\n      ]);\r\n  };\r\n  ChartInternal.prototype.getX = function (min, max, domain, offset) {\r\n      var $$ = this, scale = $$.getScale(min, max, $$.isTimeSeries()), _scale = domain ? scale.domain(domain) : scale, key;\r\n      // Define customized scale if categorized axis\r\n      if ($$.isCategorized()) {\r\n          offset =\r\n              offset ||\r\n                  function () {\r\n                      return 0;\r\n                  };\r\n          scale = function (d, raw) {\r\n              var v = _scale(d) + offset(d);\r\n              return raw ? v : Math.ceil(v);\r\n          };\r\n      }\r\n      else {\r\n          scale = function (d, raw) {\r\n              var v = _scale(d);\r\n              return raw ? v : Math.ceil(v);\r\n          };\r\n      }\r\n      // define functions\r\n      for (key in _scale) {\r\n          scale[key] = _scale[key];\r\n      }\r\n      scale.orgDomain = function () {\r\n          return _scale.domain();\r\n      };\r\n      // define custom domain() for categorized axis\r\n      if ($$.isCategorized()) {\r\n          scale.domain = function (domain) {\r\n              if (!arguments.length) {\r\n                  domain = this.orgDomain();\r\n                  return [domain[0], domain[1] + 1];\r\n              }\r\n              _scale.domain(domain);\r\n              return scale;\r\n          };\r\n      }\r\n      return scale;\r\n  };\r\n  /**\r\n   * Creates and configures a D3 scale instance for the given type.\r\n   *\r\n   * By defaults it returns a Linear scale.\r\n   *\r\n   * @param {String} type Type of d3-scale to create. Type can be 'linear', 'time', 'timeseries' or 'log'.\r\n   * @param {Array} domain The scale domain such as [from, to]\r\n   * @param {Array} range The scale's range such as [from, to]\r\n   *\r\n   * @return A d3-scale instance\r\n   */\r\n  ChartInternal.prototype.getY = function (type, domain, range) {\r\n      var scale;\r\n      if (type === 'timeseries' || type === 'time') {\r\n          scale = this.d3.scaleTime();\r\n      }\r\n      else if (type === 'log') {\r\n          scale = c3LogScale(this.d3);\r\n      }\r\n      else if (type === 'linear' || type === undefined) {\r\n          scale = this.d3.scaleLinear();\r\n      }\r\n      else {\r\n          throw new Error(\"Invalid Y axis type: \\\"\" + type + \"\\\"\");\r\n      }\r\n      if (domain) {\r\n          scale.domain(domain);\r\n      }\r\n      if (range) {\r\n          scale.range(range);\r\n      }\r\n      return scale;\r\n  };\r\n  ChartInternal.prototype.getYScale = function (id) {\r\n      return this.axis.getId(id) === 'y2' ? this.y2 : this.y;\r\n  };\r\n  ChartInternal.prototype.getSubYScale = function (id) {\r\n      return this.axis.getId(id) === 'y2' ? this.subY2 : this.subY;\r\n  };\r\n  ChartInternal.prototype.updateScales = function () {\r\n      var $$ = this, config = $$.config, forInit = !$$.x;\r\n      // update edges\r\n      $$.xMin = config.axis_rotated ? 1 : 0;\r\n      $$.xMax = config.axis_rotated ? $$.height : $$.width;\r\n      $$.yMin = config.axis_rotated ? 0 : $$.height;\r\n      $$.yMax = config.axis_rotated ? $$.width : 1;\r\n      $$.subXMin = $$.xMin;\r\n      $$.subXMax = $$.xMax;\r\n      $$.subYMin = config.axis_rotated ? 0 : $$.height2;\r\n      $$.subYMax = config.axis_rotated ? $$.width2 : 1;\r\n      // update scales\r\n      $$.x = $$.getX($$.xMin, $$.xMax, forInit ? undefined : $$.x.orgDomain(), function () {\r\n          return $$.xAxis.tickOffset();\r\n      });\r\n      $$.y = $$.getY(config.axis_y_type, forInit ? config.axis_y_default : $$.y.domain(), [$$.yMin, $$.yMax]);\r\n      $$.y2 = $$.getY(config.axis_y2_type, forInit ? config.axis_y2_default : $$.y2.domain(), [$$.yMin, $$.yMax]);\r\n      $$.subX = $$.getX($$.xMin, $$.xMax, $$.orgXDomain, function (d) {\r\n          return d % 1 ? 0 : $$.subXAxis.tickOffset();\r\n      });\r\n      $$.subY = $$.getY(config.axis_y_type, forInit ? config.axis_y_default : $$.subY.domain(), [$$.subYMin, $$.subYMax]);\r\n      $$.subY2 = $$.getY(config.axis_y2_type, forInit ? config.axis_y2_default : $$.subY2.domain(), [$$.subYMin, $$.subYMax]);\r\n      // update axes\r\n      $$.xAxisTickFormat = $$.axis.getXAxisTickFormat();\r\n      $$.xAxisTickValues = $$.axis.getXAxisTickValues();\r\n      $$.yAxisTickValues = $$.axis.getYAxisTickValues();\r\n      $$.y2AxisTickValues = $$.axis.getY2AxisTickValues();\r\n      $$.xAxis = $$.axis.getXAxis($$.x, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\r\n      $$.subXAxis = $$.axis.getXAxis($$.subX, $$.subXOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\r\n      $$.yAxis = $$.axis.getYAxis('y', $$.y, $$.yOrient, $$.yAxisTickValues, config.axis_y_tick_outer);\r\n      $$.y2Axis = $$.axis.getYAxis('y2', $$.y2, $$.y2Orient, $$.y2AxisTickValues, config.axis_y2_tick_outer);\r\n      // Set initialized scales to brush and zoom\r\n      if (!forInit) {\r\n          if ($$.brush) {\r\n              $$.brush.updateScale($$.subX);\r\n          }\r\n      }\r\n      // update for arc\r\n      if ($$.updateArc) {\r\n          $$.updateArc();\r\n      }\r\n  };\n\n  ChartInternal.prototype.selectPoint = function (target, d, i) {\r\n      var $$ = this, config = $$.config, cx = (config.axis_rotated ? $$.circleY : $$.circleX).bind($$), cy = (config.axis_rotated ? $$.circleX : $$.circleY).bind($$), r = $$.pointSelectR.bind($$);\r\n      config.data_onselected.call($$.api, d, target.node());\r\n      // add selected-circle on low layer g\r\n      $$.main\r\n          .select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id))\r\n          .selectAll('.' + CLASS.selectedCircle + '-' + i)\r\n          .data([d])\r\n          .enter()\r\n          .append('circle')\r\n          .attr('class', function () {\r\n          return $$.generateClass(CLASS.selectedCircle, i);\r\n      })\r\n          .attr('cx', cx)\r\n          .attr('cy', cy)\r\n          .attr('stroke', function () {\r\n          return $$.color(d);\r\n      })\r\n          .attr('r', function (d) {\r\n          return $$.pointSelectR(d) * 1.4;\r\n      })\r\n          .transition()\r\n          .duration(100)\r\n          .attr('r', r);\r\n  };\r\n  ChartInternal.prototype.unselectPoint = function (target, d, i) {\r\n      var $$ = this;\r\n      $$.config.data_onunselected.call($$.api, d, target.node());\r\n      // remove selected-circle from low layer g\r\n      $$.main\r\n          .select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id))\r\n          .selectAll('.' + CLASS.selectedCircle + '-' + i)\r\n          .transition()\r\n          .duration(100)\r\n          .attr('r', 0)\r\n          .remove();\r\n  };\r\n  ChartInternal.prototype.togglePoint = function (selected, target, d, i) {\r\n      selected ? this.selectPoint(target, d, i) : this.unselectPoint(target, d, i);\r\n  };\r\n  ChartInternal.prototype.selectPath = function (target, d) {\r\n      var $$ = this;\r\n      $$.config.data_onselected.call($$, d, target.node());\r\n      if ($$.config.interaction_brighten) {\r\n          target\r\n              .transition()\r\n              .duration(100)\r\n              .style('fill', function () {\r\n              return $$.d3.rgb($$.color(d)).brighter(0.75);\r\n          });\r\n      }\r\n  };\r\n  ChartInternal.prototype.unselectPath = function (target, d) {\r\n      var $$ = this;\r\n      $$.config.data_onunselected.call($$, d, target.node());\r\n      if ($$.config.interaction_brighten) {\r\n          target\r\n              .transition()\r\n              .duration(100)\r\n              .style('fill', function () {\r\n              return $$.color(d);\r\n          });\r\n      }\r\n  };\r\n  ChartInternal.prototype.togglePath = function (selected, target, d, i) {\r\n      selected ? this.selectPath(target, d, i) : this.unselectPath(target, d, i);\r\n  };\r\n  ChartInternal.prototype.getToggle = function (that, d) {\r\n      var $$ = this, toggle;\r\n      if (that.nodeName === 'circle') {\r\n          if ($$.isStepType(d)) {\r\n              // circle is hidden in step chart, so treat as within the click area\r\n              toggle = function () { }; // TODO: how to select step chart?\r\n          }\r\n          else {\r\n              toggle = $$.togglePoint;\r\n          }\r\n      }\r\n      else if (that.nodeName === 'path') {\r\n          toggle = $$.togglePath;\r\n      }\r\n      return toggle;\r\n  };\r\n  ChartInternal.prototype.toggleShape = function (that, d, i) {\r\n      var $$ = this, d3 = $$.d3, config = $$.config, shape = d3.select(that), isSelected = shape.classed(CLASS.SELECTED), toggle = $$.getToggle(that, d).bind($$);\r\n      if (config.data_selection_enabled && config.data_selection_isselectable(d)) {\r\n          if (!config.data_selection_multiple) {\r\n              $$.main\r\n                  .selectAll('.' +\r\n                  CLASS.shapes +\r\n                  (config.data_selection_grouped\r\n                      ? $$.getTargetSelectorSuffix(d.id)\r\n                      : ''))\r\n                  .selectAll('.' + CLASS.shape)\r\n                  .each(function (d, i) {\r\n                  var shape = d3.select(this);\r\n                  if (shape.classed(CLASS.SELECTED)) {\r\n                      toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\r\n                  }\r\n              });\r\n          }\r\n          shape.classed(CLASS.SELECTED, !isSelected);\r\n          toggle(!isSelected, shape, d, i);\r\n      }\r\n  };\n\n  ChartInternal.prototype.initBar = function () {\r\n      var $$ = this;\r\n      $$.main\r\n          .select('.' + CLASS.chart)\r\n          .append('g')\r\n          .attr('class', CLASS.chartBars);\r\n  };\r\n  ChartInternal.prototype.updateTargetsForBar = function (targets) {\r\n      var $$ = this, config = $$.config, mainBars, mainBarEnter, classChartBar = $$.classChartBar.bind($$), classBars = $$.classBars.bind($$), classFocus = $$.classFocus.bind($$);\r\n      mainBars = $$.main\r\n          .select('.' + CLASS.chartBars)\r\n          .selectAll('.' + CLASS.chartBar)\r\n          .data(targets)\r\n          .attr('class', function (d) {\r\n          return classChartBar(d) + classFocus(d);\r\n      });\r\n      mainBarEnter = mainBars\r\n          .enter()\r\n          .append('g')\r\n          .attr('class', classChartBar)\r\n          .style('pointer-events', 'none');\r\n      // Bars for each data\r\n      mainBarEnter\r\n          .append('g')\r\n          .attr('class', classBars)\r\n          .style('cursor', function (d) {\r\n          return config.data_selection_isselectable(d) ? 'pointer' : null;\r\n      });\r\n  };\r\n  ChartInternal.prototype.updateBar = function (durationForExit) {\r\n      var $$ = this, barData = $$.barData.bind($$), classBar = $$.classBar.bind($$), initialOpacity = $$.initialOpacity.bind($$), color = function (d) {\r\n          return $$.color(d.id);\r\n      };\r\n      var mainBar = $$.main\r\n          .selectAll('.' + CLASS.bars)\r\n          .selectAll('.' + CLASS.bar)\r\n          .data(barData);\r\n      var mainBarEnter = mainBar\r\n          .enter()\r\n          .append('path')\r\n          .attr('class', classBar)\r\n          .style('stroke', color)\r\n          .style('fill', color);\r\n      $$.mainBar = mainBarEnter.merge(mainBar).style('opacity', initialOpacity);\r\n      mainBar\r\n          .exit()\r\n          .transition()\r\n          .duration(durationForExit)\r\n          .style('opacity', 0);\r\n  };\r\n  ChartInternal.prototype.redrawBar = function (drawBar, withTransition, transition) {\r\n      var $$ = this;\r\n      return [\r\n          (withTransition ? this.mainBar.transition(transition) : this.mainBar)\r\n              .attr('d', drawBar)\r\n              .style('stroke', this.color)\r\n              .style('fill', this.color)\r\n              .style('opacity', function (d) { return ($$.isTargetToShow(d.id) ? 1 : 0); })\r\n      ];\r\n  };\r\n  ChartInternal.prototype.getBarW = function (axis, barTargetsNum) {\r\n      var $$ = this, config = $$.config, w = typeof config.bar_width === 'number'\r\n          ? config.bar_width\r\n          : barTargetsNum\r\n              ? (axis.tickInterval() * config.bar_width_ratio) / barTargetsNum\r\n              : 0;\r\n      return config.bar_width_max && w > config.bar_width_max\r\n          ? config.bar_width_max\r\n          : w;\r\n  };\r\n  ChartInternal.prototype.getBars = function (i, id) {\r\n      var $$ = this;\r\n      return (id\r\n          ? $$.main.selectAll('.' + CLASS.bars + $$.getTargetSelectorSuffix(id))\r\n          : $$.main).selectAll('.' + CLASS.bar + (isValue(i) ? '-' + i : ''));\r\n  };\r\n  ChartInternal.prototype.expandBars = function (i, id, reset) {\r\n      var $$ = this;\r\n      if (reset) {\r\n          $$.unexpandBars();\r\n      }\r\n      $$.getBars(i, id).classed(CLASS.EXPANDED, true);\r\n  };\r\n  ChartInternal.prototype.unexpandBars = function (i) {\r\n      var $$ = this;\r\n      $$.getBars(i).classed(CLASS.EXPANDED, false);\r\n  };\r\n  ChartInternal.prototype.generateDrawBar = function (barIndices, isSub) {\r\n      var $$ = this, config = $$.config, getPoints = $$.generateGetBarPoints(barIndices, isSub);\r\n      return function (d, i) {\r\n          // 4 points that make a bar\r\n          var points = getPoints(d, i);\r\n          // switch points if axis is rotated, not applicable for sub chart\r\n          var indexX = config.axis_rotated ? 1 : 0;\r\n          var indexY = config.axis_rotated ? 0 : 1;\r\n          var path = 'M ' +\r\n              points[0][indexX] +\r\n              ',' +\r\n              points[0][indexY] +\r\n              ' ' +\r\n              'L' +\r\n              points[1][indexX] +\r\n              ',' +\r\n              points[1][indexY] +\r\n              ' ' +\r\n              'L' +\r\n              points[2][indexX] +\r\n              ',' +\r\n              points[2][indexY] +\r\n              ' ' +\r\n              'L' +\r\n              points[3][indexX] +\r\n              ',' +\r\n              points[3][indexY] +\r\n              ' ' +\r\n              'z';\r\n          return path;\r\n      };\r\n  };\r\n  ChartInternal.prototype.generateGetBarPoints = function (barIndices, isSub) {\r\n      var $$ = this, axis = isSub ? $$.subXAxis : $$.xAxis, barTargetsNum = barIndices.__max__ + 1, barW = $$.getBarW(axis, barTargetsNum), barX = $$.getShapeX(barW, barTargetsNum, barIndices, !!isSub), barY = $$.getShapeY(!!isSub), barOffset = $$.getShapeOffset($$.isBarType, barIndices, !!isSub), barSpaceOffset = barW * ($$.config.bar_space / 2), yScale = isSub ? $$.getSubYScale : $$.getYScale;\r\n      return function (d, i) {\r\n          var y0 = yScale.call($$, d.id)(0), offset = barOffset(d, i) || y0, // offset is for stacked bar chart\r\n          posX = barX(d), posY = barY(d);\r\n          // fix posY not to overflow opposite quadrant\r\n          if ($$.config.axis_rotated) {\r\n              if ((0 < d.value && posY < y0) || (d.value < 0 && y0 < posY)) {\r\n                  posY = y0;\r\n              }\r\n          }\r\n          posY -= y0 - offset;\r\n          // 4 points that make a bar\r\n          return [\r\n              [posX + barSpaceOffset, offset],\r\n              [posX + barSpaceOffset, posY],\r\n              [posX + barW - barSpaceOffset, posY],\r\n              [posX + barW - barSpaceOffset, offset]\r\n          ];\r\n      };\r\n  };\r\n  /**\r\n   * Returns whether the data point is within the given bar shape.\r\n   *\r\n   * @param mouse\r\n   * @param barShape\r\n   * @return {boolean}\r\n   */\r\n  ChartInternal.prototype.isWithinBar = function (mouse, barShape) {\r\n      return isWithinBox(mouse, getBBox(barShape), 2);\r\n  };\n\n  ChartInternal.prototype.getShapeIndices = function (typeFilter) {\r\n      var $$ = this, config = $$.config, indices = {}, i = 0, j, k;\r\n      $$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$)).forEach(function (d) {\r\n          for (j = 0; j < config.data_groups.length; j++) {\r\n              if (config.data_groups[j].indexOf(d.id) < 0) {\r\n                  continue;\r\n              }\r\n              for (k = 0; k < config.data_groups[j].length; k++) {\r\n                  if (config.data_groups[j][k] in indices) {\r\n                      indices[d.id] = indices[config.data_groups[j][k]];\r\n                      break;\r\n                  }\r\n              }\r\n          }\r\n          if (isUndefined(indices[d.id])) {\r\n              indices[d.id] = i++;\r\n          }\r\n      });\r\n      indices.__max__ = i - 1;\r\n      return indices;\r\n  };\r\n  ChartInternal.prototype.getShapeX = function (offset, targetsNum, indices, isSub) {\r\n      var $$ = this, scale = isSub ? $$.subX : $$.x;\r\n      return function (d) {\r\n          var index = d.id in indices ? indices[d.id] : 0;\r\n          return d.x || d.x === 0 ? scale(d.x) - offset * (targetsNum / 2 - index) : 0;\r\n      };\r\n  };\r\n  ChartInternal.prototype.getShapeY = function (isSub) {\r\n      var $$ = this;\r\n      return function (d) {\r\n          var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id);\r\n          return scale($$.isTargetNormalized(d.id) ? $$.getRatio('index', d, true) : d.value);\r\n      };\r\n  };\r\n  ChartInternal.prototype.getShapeOffset = function (typeFilter, indices, isSub) {\r\n      var $$ = this, targets = $$.orderTargets($$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$))), targetIds = targets.map(function (t) {\r\n          return t.id;\r\n      });\r\n      return function (d, i) {\r\n          var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id), y0 = scale(0), offset = y0;\r\n          targets.forEach(function (t) {\r\n              var rowValues = $$.isStepType(d)\r\n                  ? $$.convertValuesToStep(t.values)\r\n                  : t.values;\r\n              var isTargetNormalized = $$.isTargetNormalized(d.id);\r\n              var values = rowValues.map(function (v) {\r\n                  return isTargetNormalized ? $$.getRatio('index', v, true) : v.value;\r\n              });\r\n              if (t.id === d.id || indices[t.id] !== indices[d.id]) {\r\n                  return;\r\n              }\r\n              if (targetIds.indexOf(t.id) < targetIds.indexOf(d.id)) {\r\n                  // check if the x values line up\r\n                  if (isUndefined(rowValues[i]) || +rowValues[i].x !== +d.x) {\r\n                      // \"+\" for timeseries\r\n                      // if not, try to find the value that does line up\r\n                      i = -1;\r\n                      rowValues.forEach(function (v, j) {\r\n                          var x1 = v.x.constructor === Date ? +v.x : v.x;\r\n                          var x2 = d.x.constructor === Date ? +d.x : d.x;\r\n                          if (x1 === x2) {\r\n                              i = j;\r\n                          }\r\n                      });\r\n                  }\r\n                  if (i in rowValues && rowValues[i].value * d.value >= 0) {\r\n                      offset += scale(values[i]) - y0;\r\n                  }\r\n              }\r\n          });\r\n          return offset;\r\n      };\r\n  };\r\n  ChartInternal.prototype.isWithinShape = function (that, d) {\r\n      var $$ = this, shape = $$.d3.select(that), isWithin;\r\n      if (!$$.isTargetToShow(d.id)) {\r\n          isWithin = false;\r\n      }\r\n      else if (that.nodeName === 'circle') {\r\n          isWithin = $$.isStepType(d)\r\n              ? $$.isWithinStep(that, $$.getYScale(d.id)(d.value))\r\n              : $$.isWithinCircle(that, $$.pointSelectR(d) * 1.5);\r\n      }\r\n      else if (that.nodeName === 'path') {\r\n          isWithin = shape.classed(CLASS.bar)\r\n              ? $$.isWithinBar($$.d3.mouse(that), that)\r\n              : true;\r\n      }\r\n      return isWithin;\r\n  };\r\n  ChartInternal.prototype.getInterpolate = function (d) {\r\n      var $$ = this, d3 = $$.d3, types = {\r\n          linear: d3.curveLinear,\r\n          'linear-closed': d3.curveLinearClosed,\r\n          basis: d3.curveBasis,\r\n          'basis-open': d3.curveBasisOpen,\r\n          'basis-closed': d3.curveBasisClosed,\r\n          bundle: d3.curveBundle,\r\n          cardinal: d3.curveCardinal,\r\n          'cardinal-open': d3.curveCardinalOpen,\r\n          'cardinal-closed': d3.curveCardinalClosed,\r\n          monotone: d3.curveMonotoneX,\r\n          step: d3.curveStep,\r\n          'step-before': d3.curveStepBefore,\r\n          'step-after': d3.curveStepAfter\r\n      }, type;\r\n      if ($$.isSplineType(d)) {\r\n          type = types[$$.config.spline_interpolation_type] || types.cardinal;\r\n      }\r\n      else if ($$.isStepType(d)) {\r\n          type = types[$$.config.line_step_type];\r\n      }\r\n      else {\r\n          type = types.linear;\r\n      }\r\n      return type;\r\n  };\n\n  ChartInternal.prototype.initLine = function () {\r\n      var $$ = this;\r\n      $$.main\r\n          .select('.' + CLASS.chart)\r\n          .append('g')\r\n          .attr('class', CLASS.chartLines);\r\n  };\r\n  ChartInternal.prototype.updateTargetsForLine = function (targets) {\r\n      var $$ = this, config = $$.config, mainLines, mainLineEnter, classChartLine = $$.classChartLine.bind($$), classLines = $$.classLines.bind($$), classAreas = $$.classAreas.bind($$), classCircles = $$.classCircles.bind($$), classFocus = $$.classFocus.bind($$);\r\n      mainLines = $$.main\r\n          .select('.' + CLASS.chartLines)\r\n          .selectAll('.' + CLASS.chartLine)\r\n          .data(targets)\r\n          .attr('class', function (d) {\r\n          return classChartLine(d) + classFocus(d);\r\n      });\r\n      mainLineEnter = mainLines\r\n          .enter()\r\n          .append('g')\r\n          .attr('class', classChartLine)\r\n          .style('opacity', 0)\r\n          .style('pointer-events', 'none');\r\n      // Lines for each data\r\n      mainLineEnter.append('g').attr('class', classLines);\r\n      // Areas\r\n      mainLineEnter.append('g').attr('class', classAreas);\r\n      // Circles for each data point on lines\r\n      mainLineEnter.append('g').attr('class', function (d) {\r\n          return $$.generateClass(CLASS.selectedCircles, d.id);\r\n      });\r\n      mainLineEnter\r\n          .append('g')\r\n          .attr('class', classCircles)\r\n          .style('cursor', function (d) {\r\n          return config.data_selection_isselectable(d) ? 'pointer' : null;\r\n      });\r\n      // Update date for selected circles\r\n      targets.forEach(function (t) {\r\n          $$.main\r\n              .selectAll('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(t.id))\r\n              .selectAll('.' + CLASS.selectedCircle)\r\n              .each(function (d) {\r\n              d.value = t.values[d.index].value;\r\n          });\r\n      });\r\n      // MEMO: can not keep same color...\r\n      //mainLineUpdate.exit().remove();\r\n  };\r\n  ChartInternal.prototype.updateLine = function (durationForExit) {\r\n      var $$ = this;\r\n      var mainLine = $$.main\r\n          .selectAll('.' + CLASS.lines)\r\n          .selectAll('.' + CLASS.line)\r\n          .data($$.lineData.bind($$));\r\n      var mainLineEnter = mainLine\r\n          .enter()\r\n          .append('path')\r\n          .attr('class', $$.classLine.bind($$))\r\n          .style('stroke', $$.color);\r\n      $$.mainLine = mainLineEnter\r\n          .merge(mainLine)\r\n          .style('opacity', $$.initialOpacity.bind($$))\r\n          .style('shape-rendering', function (d) {\r\n          return $$.isStepType(d) ? 'crispEdges' : '';\r\n      })\r\n          .attr('transform', null);\r\n      mainLine\r\n          .exit()\r\n          .transition()\r\n          .duration(durationForExit)\r\n          .style('opacity', 0);\r\n  };\r\n  ChartInternal.prototype.redrawLine = function (drawLine, withTransition, transition) {\r\n      return [\r\n          (withTransition ? this.mainLine.transition(transition) : this.mainLine)\r\n              .attr('d', drawLine)\r\n              .style('stroke', this.color)\r\n              .style('opacity', 1)\r\n      ];\r\n  };\r\n  ChartInternal.prototype.generateDrawLine = function (lineIndices, isSub) {\r\n      var $$ = this, config = $$.config, line = $$.d3.line(), getPoints = $$.generateGetLinePoints(lineIndices, isSub), yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale, xValue = function (d) {\r\n          return (isSub ? $$.subxx : $$.xx).call($$, d);\r\n      }, yValue = function (d, i) {\r\n          return config.data_groups.length > 0\r\n              ? getPoints(d, i)[0][1]\r\n              : yScaleGetter.call($$, d.id)(d.value);\r\n      };\r\n      line = config.axis_rotated\r\n          ? line.x(yValue).y(xValue)\r\n          : line.x(xValue).y(yValue);\r\n      if (!config.line_connectNull) {\r\n          line = line.defined(function (d) {\r\n              return d.value != null;\r\n          });\r\n      }\r\n      return function (d) {\r\n          var values = config.line_connectNull\r\n              ? $$.filterRemoveNull(d.values)\r\n              : d.values, x = isSub ? $$.subX : $$.x, y = yScaleGetter.call($$, d.id), x0 = 0, y0 = 0, path;\r\n          if ($$.isLineType(d)) {\r\n              if (config.data_regions[d.id]) {\r\n                  path = $$.lineWithRegions(values, x, y, config.data_regions[d.id]);\r\n              }\r\n              else {\r\n                  if ($$.isStepType(d)) {\r\n                      values = $$.convertValuesToStep(values);\r\n                  }\r\n                  path = line.curve($$.getInterpolate(d))(values);\r\n              }\r\n          }\r\n          else {\r\n              if (values[0]) {\r\n                  x0 = x(values[0].x);\r\n                  y0 = y(values[0].value);\r\n              }\r\n              path = config.axis_rotated ? 'M ' + y0 + ' ' + x0 : 'M ' + x0 + ' ' + y0;\r\n          }\r\n          return path ? path : 'M 0 0';\r\n      };\r\n  };\r\n  ChartInternal.prototype.generateGetLinePoints = function (lineIndices, isSub) {\r\n      // partial duplication of generateGetBarPoints\r\n      var $$ = this, config = $$.config, lineTargetsNum = lineIndices.__max__ + 1, x = $$.getShapeX(0, lineTargetsNum, lineIndices, !!isSub), y = $$.getShapeY(!!isSub), lineOffset = $$.getShapeOffset($$.isLineType, lineIndices, !!isSub), yScale = isSub ? $$.getSubYScale : $$.getYScale;\r\n      return function (d, i) {\r\n          var y0 = yScale.call($$, d.id)(0), offset = lineOffset(d, i) || y0, // offset is for stacked area chart\r\n          posX = x(d), posY = y(d);\r\n          // fix posY not to overflow opposite quadrant\r\n          if (config.axis_rotated) {\r\n              if ((0 < d.value && posY < y0) || (d.value < 0 && y0 < posY)) {\r\n                  posY = y0;\r\n              }\r\n          }\r\n          // 1 point that marks the line position\r\n          return [\r\n              [posX, posY - (y0 - offset)],\r\n              [posX, posY - (y0 - offset)],\r\n              [posX, posY - (y0 - offset)],\r\n              [posX, posY - (y0 - offset)] // needed for compatibility\r\n          ];\r\n      };\r\n  };\r\n  ChartInternal.prototype.lineWithRegions = function (d, x, y, _regions) {\r\n      var $$ = this, config = $$.config, prev = -1, i, j, s = 'M', sWithRegion, xp, yp, dx, dy, dd, diff, diffx2, xOffset = $$.isCategorized() ? 0.5 : 0, xValue, yValue, regions = [];\r\n      function isWithinRegions(x, regions) {\r\n          var i;\r\n          for (i = 0; i < regions.length; i++) {\r\n              if (regions[i].start < x && x <= regions[i].end) {\r\n                  return true;\r\n              }\r\n          }\r\n          return false;\r\n      }\r\n      // Check start/end of regions\r\n      if (isDefined(_regions)) {\r\n          for (i = 0; i < _regions.length; i++) {\r\n              regions[i] = {};\r\n              if (isUndefined(_regions[i].start)) {\r\n                  regions[i].start = d[0].x;\r\n              }\r\n              else {\r\n                  regions[i].start = $$.isTimeSeries()\r\n                      ? $$.parseDate(_regions[i].start)\r\n                      : _regions[i].start;\r\n              }\r\n              if (isUndefined(_regions[i].end)) {\r\n                  regions[i].end = d[d.length - 1].x;\r\n              }\r\n              else {\r\n                  regions[i].end = $$.isTimeSeries()\r\n                      ? $$.parseDate(_regions[i].end)\r\n                      : _regions[i].end;\r\n              }\r\n          }\r\n      }\r\n      // Set scales\r\n      xValue = config.axis_rotated\r\n          ? function (d) {\r\n              return y(d.value);\r\n          }\r\n          : function (d) {\r\n              return x(d.x);\r\n          };\r\n      yValue = config.axis_rotated\r\n          ? function (d) {\r\n              return x(d.x);\r\n          }\r\n          : function (d) {\r\n              return y(d.value);\r\n          };\r\n      // Define svg generator function for region\r\n      function generateM(points) {\r\n          return ('M' +\r\n              points[0][0] +\r\n              ' ' +\r\n              points[0][1] +\r\n              ' ' +\r\n              points[1][0] +\r\n              ' ' +\r\n              points[1][1]);\r\n      }\r\n      if ($$.isTimeSeries()) {\r\n          sWithRegion = function (d0, d1, j, diff) {\r\n              var x0 = d0.x.getTime(), x_diff = d1.x - d0.x, xv0 = new Date(x0 + x_diff * j), xv1 = new Date(x0 + x_diff * (j + diff)), points;\r\n              if (config.axis_rotated) {\r\n                  points = [\r\n                      [y(yp(j)), x(xv0)],\r\n                      [y(yp(j + diff)), x(xv1)]\r\n                  ];\r\n              }\r\n              else {\r\n                  points = [\r\n                      [x(xv0), y(yp(j))],\r\n                      [x(xv1), y(yp(j + diff))]\r\n                  ];\r\n              }\r\n              return generateM(points);\r\n          };\r\n      }\r\n      else {\r\n          sWithRegion = function (d0, d1, j, diff) {\r\n              var points;\r\n              if (config.axis_rotated) {\r\n                  points = [\r\n                      [y(yp(j), true), x(xp(j))],\r\n                      [y(yp(j + diff), true), x(xp(j + diff))]\r\n                  ];\r\n              }\r\n              else {\r\n                  points = [\r\n                      [x(xp(j), true), y(yp(j))],\r\n                      [x(xp(j + diff), true), y(yp(j + diff))]\r\n                  ];\r\n              }\r\n              return generateM(points);\r\n          };\r\n      }\r\n      // Generate\r\n      for (i = 0; i < d.length; i++) {\r\n          // Draw as normal\r\n          if (isUndefined(regions) || !isWithinRegions(d[i].x, regions)) {\r\n              s += ' ' + xValue(d[i]) + ' ' + yValue(d[i]);\r\n          }\r\n          // Draw with region // TODO: Fix for horizotal charts\r\n          else {\r\n              xp = $$.getScale(d[i - 1].x + xOffset, d[i].x + xOffset, $$.isTimeSeries());\r\n              yp = $$.getScale(d[i - 1].value, d[i].value);\r\n              dx = x(d[i].x) - x(d[i - 1].x);\r\n              dy = y(d[i].value) - y(d[i - 1].value);\r\n              dd = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\r\n              diff = 2 / dd;\r\n              diffx2 = diff * 2;\r\n              for (j = diff; j <= 1; j += diffx2) {\r\n                  s += sWithRegion(d[i - 1], d[i], j, diff);\r\n              }\r\n          }\r\n          prev = d[i].x;\r\n      }\r\n      return s;\r\n  };\r\n  ChartInternal.prototype.updateArea = function (durationForExit) {\r\n      var $$ = this, d3 = $$.d3;\r\n      var mainArea = $$.main\r\n          .selectAll('.' + CLASS.areas)\r\n          .selectAll('.' + CLASS.area)\r\n          .data($$.lineData.bind($$));\r\n      var mainAreaEnter = mainArea\r\n          .enter()\r\n          .append('path')\r\n          .attr('class', $$.classArea.bind($$))\r\n          .style('fill', $$.color)\r\n          .style('opacity', function () {\r\n          $$.orgAreaOpacity = +d3.select(this).style('opacity');\r\n          return 0;\r\n      });\r\n      $$.mainArea = mainAreaEnter\r\n          .merge(mainArea)\r\n          .style('opacity', $$.orgAreaOpacity);\r\n      mainArea\r\n          .exit()\r\n          .transition()\r\n          .duration(durationForExit)\r\n          .style('opacity', 0);\r\n  };\r\n  ChartInternal.prototype.redrawArea = function (drawArea, withTransition, transition) {\r\n      return [\r\n          (withTransition ? this.mainArea.transition(transition) : this.mainArea)\r\n              .attr('d', drawArea)\r\n              .style('fill', this.color)\r\n              .style('opacity', this.orgAreaOpacity)\r\n      ];\r\n  };\r\n  ChartInternal.prototype.generateDrawArea = function (areaIndices, isSub) {\r\n      var $$ = this, config = $$.config, area = $$.d3.area(), getPoints = $$.generateGetAreaPoints(areaIndices, isSub), yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale, xValue = function (d) {\r\n          return (isSub ? $$.subxx : $$.xx).call($$, d);\r\n      }, value0 = function (d, i) {\r\n          return config.data_groups.length > 0\r\n              ? getPoints(d, i)[0][1]\r\n              : yScaleGetter.call($$, d.id)($$.getAreaBaseValue(d.id));\r\n      }, value1 = function (d, i) {\r\n          return config.data_groups.length > 0\r\n              ? getPoints(d, i)[1][1]\r\n              : yScaleGetter.call($$, d.id)(d.value);\r\n      };\r\n      area = config.axis_rotated\r\n          ? area\r\n              .x0(value0)\r\n              .x1(value1)\r\n              .y(xValue)\r\n          : area\r\n              .x(xValue)\r\n              .y0(config.area_above ? 0 : value0)\r\n              .y1(value1);\r\n      if (!config.line_connectNull) {\r\n          area = area.defined(function (d) {\r\n              return d.value !== null;\r\n          });\r\n      }\r\n      return function (d) {\r\n          var values = config.line_connectNull\r\n              ? $$.filterRemoveNull(d.values)\r\n              : d.values, x0 = 0, y0 = 0, path;\r\n          if ($$.isAreaType(d)) {\r\n              if ($$.isStepType(d)) {\r\n                  values = $$.convertValuesToStep(values);\r\n              }\r\n              path = area.curve($$.getInterpolate(d))(values);\r\n          }\r\n          else {\r\n              if (values[0]) {\r\n                  x0 = $$.x(values[0].x);\r\n                  y0 = $$.getYScale(d.id)(values[0].value);\r\n              }\r\n              path = config.axis_rotated ? 'M ' + y0 + ' ' + x0 : 'M ' + x0 + ' ' + y0;\r\n          }\r\n          return path ? path : 'M 0 0';\r\n      };\r\n  };\r\n  ChartInternal.prototype.getAreaBaseValue = function () {\r\n      return 0;\r\n  };\r\n  ChartInternal.prototype.generateGetAreaPoints = function (areaIndices, isSub) {\r\n      // partial duplication of generateGetBarPoints\r\n      var $$ = this, config = $$.config, areaTargetsNum = areaIndices.__max__ + 1, x = $$.getShapeX(0, areaTargetsNum, areaIndices, !!isSub), y = $$.getShapeY(!!isSub), areaOffset = $$.getShapeOffset($$.isAreaType, areaIndices, !!isSub), yScale = isSub ? $$.getSubYScale : $$.getYScale;\r\n      return function (d, i) {\r\n          var y0 = yScale.call($$, d.id)(0), offset = areaOffset(d, i) || y0, // offset is for stacked area chart\r\n          posX = x(d), posY = y(d);\r\n          // fix posY not to overflow opposite quadrant\r\n          if (config.axis_rotated) {\r\n              if ((0 < d.value && posY < y0) || (d.value < 0 && y0 < posY)) {\r\n                  posY = y0;\r\n              }\r\n          }\r\n          // 1 point that marks the area position\r\n          return [\r\n              [posX, offset],\r\n              [posX, posY - (y0 - offset)],\r\n              [posX, posY - (y0 - offset)],\r\n              [posX, offset] // needed for compatibility\r\n          ];\r\n      };\r\n  };\r\n  ChartInternal.prototype.updateCircle = function (cx, cy) {\r\n      var $$ = this;\r\n      var mainCircle = $$.main\r\n          .selectAll('.' + CLASS.circles)\r\n          .selectAll('.' + CLASS.circle)\r\n          .data($$.lineOrScatterOrStanfordData.bind($$));\r\n      var mainCircleEnter = mainCircle\r\n          .enter()\r\n          .append('circle')\r\n          .attr('shape-rendering', $$.isStanfordGraphType() ? 'crispEdges' : '')\r\n          .attr('class', $$.classCircle.bind($$))\r\n          .attr('cx', cx)\r\n          .attr('cy', cy)\r\n          .attr('r', $$.pointR.bind($$))\r\n          .style('color', $$.isStanfordGraphType() ? $$.getStanfordPointColor.bind($$) : $$.color);\r\n      $$.mainCircle = mainCircleEnter\r\n          .merge(mainCircle)\r\n          .style('opacity', $$.isStanfordGraphType() ? 1 : $$.initialOpacityForCircle.bind($$));\r\n      mainCircle.exit().style('opacity', 0);\r\n  };\r\n  ChartInternal.prototype.redrawCircle = function (cx, cy, withTransition, transition) {\r\n      var $$ = this, selectedCircles = $$.main.selectAll('.' + CLASS.selectedCircle);\r\n      return [\r\n          (withTransition ? $$.mainCircle.transition(transition) : $$.mainCircle)\r\n              .style('opacity', this.opacityForCircle.bind($$))\r\n              .style('color', $$.isStanfordGraphType() ? $$.getStanfordPointColor.bind($$) : $$.color)\r\n              .attr('cx', cx)\r\n              .attr('cy', cy),\r\n          (withTransition ? selectedCircles.transition(transition) : selectedCircles)\r\n              .attr('cx', cx)\r\n              .attr('cy', cy)\r\n      ];\r\n  };\r\n  ChartInternal.prototype.circleX = function (d) {\r\n      return d.x || d.x === 0 ? this.x(d.x) : null;\r\n  };\r\n  ChartInternal.prototype.updateCircleY = function () {\r\n      var $$ = this, lineIndices, getPoints;\r\n      if ($$.config.data_groups.length > 0) {\r\n          (lineIndices = $$.getShapeIndices($$.isLineType)),\r\n              (getPoints = $$.generateGetLinePoints(lineIndices));\r\n          $$.circleY = function (d, i) {\r\n              return getPoints(d, i)[0][1];\r\n          };\r\n      }\r\n      else {\r\n          $$.circleY = function (d) {\r\n              return $$.getYScale(d.id)(d.value);\r\n          };\r\n      }\r\n  };\r\n  ChartInternal.prototype.getCircles = function (i, id) {\r\n      var $$ = this;\r\n      return (id\r\n          ? $$.main.selectAll('.' + CLASS.circles + $$.getTargetSelectorSuffix(id))\r\n          : $$.main).selectAll('.' + CLASS.circle + (isValue(i) ? '-' + i : ''));\r\n  };\r\n  ChartInternal.prototype.expandCircles = function (i, id, reset) {\r\n      var $$ = this, r = $$.pointExpandedR.bind($$);\r\n      if (reset) {\r\n          $$.unexpandCircles();\r\n      }\r\n      $$.getCircles(i, id)\r\n          .classed(CLASS.EXPANDED, true)\r\n          .attr('r', r);\r\n  };\r\n  ChartInternal.prototype.unexpandCircles = function (i) {\r\n      var $$ = this, r = $$.pointR.bind($$);\r\n      $$.getCircles(i)\r\n          .filter(function () {\r\n          return $$.d3.select(this).classed(CLASS.EXPANDED);\r\n      })\r\n          .classed(CLASS.EXPANDED, false)\r\n          .attr('r', r);\r\n  };\r\n  ChartInternal.prototype.pointR = function (d) {\r\n      var $$ = this, config = $$.config;\r\n      return $$.isStepType(d)\r\n          ? 0\r\n          : isFunction(config.point_r)\r\n              ? config.point_r(d)\r\n              : config.point_r;\r\n  };\r\n  ChartInternal.prototype.pointExpandedR = function (d) {\r\n      var $$ = this, config = $$.config;\r\n      if (config.point_focus_expand_enabled) {\r\n          return isFunction(config.point_focus_expand_r)\r\n              ? config.point_focus_expand_r(d)\r\n              : config.point_focus_expand_r\r\n                  ? config.point_focus_expand_r\r\n                  : $$.pointR(d) * 1.75;\r\n      }\r\n      else {\r\n          return $$.pointR(d);\r\n      }\r\n  };\r\n  ChartInternal.prototype.pointSelectR = function (d) {\r\n      var $$ = this, config = $$.config;\r\n      return isFunction(config.point_select_r)\r\n          ? config.point_select_r(d)\r\n          : config.point_select_r\r\n              ? config.point_select_r\r\n              : $$.pointR(d) * 4;\r\n  };\r\n  ChartInternal.prototype.isWithinCircle = function (that, r) {\r\n      var d3 = this.d3, mouse = d3.mouse(that), d3_this = d3.select(that), cx = +d3_this.attr('cx'), cy = +d3_this.attr('cy');\r\n      return Math.sqrt(Math.pow(cx - mouse[0], 2) + Math.pow(cy - mouse[1], 2)) < r;\r\n  };\r\n  ChartInternal.prototype.isWithinStep = function (that, y) {\r\n      return Math.abs(y - this.d3.mouse(that)[1]) < 30;\r\n  };\n\n  ChartInternal.prototype.getCurrentWidth = function () {\r\n      var $$ = this, config = $$.config;\r\n      return config.size_width ? config.size_width : $$.getParentWidth();\r\n  };\r\n  ChartInternal.prototype.getCurrentHeight = function () {\r\n      var $$ = this, config = $$.config, h = config.size_height ? config.size_height : $$.getParentHeight();\r\n      return h > 0\r\n          ? h\r\n          : 320 / ($$.hasType('gauge') && !config.gauge_fullCircle ? 2 : 1);\r\n  };\r\n  ChartInternal.prototype.getCurrentPaddingTop = function () {\r\n      var $$ = this, config = $$.config, padding = isValue(config.padding_top) ? config.padding_top : 0;\r\n      if ($$.title && $$.title.node()) {\r\n          padding += $$.getTitlePadding();\r\n      }\r\n      return padding;\r\n  };\r\n  ChartInternal.prototype.getCurrentPaddingBottom = function () {\r\n      var config = this.config;\r\n      return isValue(config.padding_bottom) ? config.padding_bottom : 0;\r\n  };\r\n  ChartInternal.prototype.getCurrentPaddingLeft = function (withoutRecompute) {\r\n      var $$ = this, config = $$.config;\r\n      if (isValue(config.padding_left)) {\r\n          return config.padding_left;\r\n      }\r\n      else if (config.axis_rotated) {\r\n          return !config.axis_x_show || config.axis_x_inner\r\n              ? 1\r\n              : Math.max(ceil10($$.getAxisWidthByAxisId('x', withoutRecompute)), 40);\r\n      }\r\n      else if (!config.axis_y_show || config.axis_y_inner) {\r\n          // && !config.axis_rotated\r\n          return $$.axis.getYAxisLabelPosition().isOuter ? 30 : 1;\r\n      }\r\n      else {\r\n          return ceil10($$.getAxisWidthByAxisId('y', withoutRecompute));\r\n      }\r\n  };\r\n  ChartInternal.prototype.getCurrentPaddingRight = function () {\r\n      var $$ = this, config = $$.config, padding = 0, defaultPadding = 10, legendWidthOnRight = $$.isLegendRight ? $$.getLegendWidth() + 20 : 0;\r\n      if (isValue(config.padding_right)) {\r\n          padding = config.padding_right + 1; // 1 is needed not to hide tick line\r\n      }\r\n      else if (config.axis_rotated) {\r\n          padding = defaultPadding + legendWidthOnRight;\r\n      }\r\n      else if (!config.axis_y2_show || config.axis_y2_inner) {\r\n          // && !config.axis_rotated\r\n          padding =\r\n              2 +\r\n                  legendWidthOnRight +\r\n                  ($$.axis.getY2AxisLabelPosition().isOuter ? 20 : 0);\r\n      }\r\n      else {\r\n          padding = ceil10($$.getAxisWidthByAxisId('y2')) + legendWidthOnRight;\r\n      }\r\n      if ($$.colorScale && $$.colorScale.node()) {\r\n          padding += $$.getColorScalePadding();\r\n      }\r\n      return padding;\r\n  };\r\n  ChartInternal.prototype.getParentRectValue = function (key) {\r\n      var parent = this.selectChart.node(), v;\r\n      while (parent && parent.tagName !== 'BODY') {\r\n          try {\r\n              v = parent.getBoundingClientRect()[key];\r\n          }\r\n          catch (e) {\r\n              if (key === 'width') {\r\n                  // In IE in certain cases getBoundingClientRect\r\n                  // will cause an \"unspecified error\"\r\n                  v = parent.offsetWidth;\r\n              }\r\n          }\r\n          if (v) {\r\n              break;\r\n          }\r\n          parent = parent.parentNode;\r\n      }\r\n      return v;\r\n  };\r\n  ChartInternal.prototype.getParentWidth = function () {\r\n      return this.getParentRectValue('width');\r\n  };\r\n  ChartInternal.prototype.getParentHeight = function () {\r\n      var h = this.selectChart.style('height');\r\n      return h.indexOf('px') > 0 ? +h.replace('px', '') : 0;\r\n  };\r\n  ChartInternal.prototype.getSvgLeft = function (withoutRecompute) {\r\n      var $$ = this, config = $$.config, hasLeftAxisRect = config.axis_rotated || (!config.axis_rotated && !config.axis_y_inner), leftAxisClass = config.axis_rotated ? CLASS.axisX : CLASS.axisY, leftAxis = $$.main.select('.' + leftAxisClass).node(), svgRect = leftAxis && hasLeftAxisRect\r\n          ? leftAxis.getBoundingClientRect()\r\n          : { right: 0 }, chartRect = $$.selectChart.node().getBoundingClientRect(), hasArc = $$.hasArcType(), svgLeft = svgRect.right -\r\n          chartRect.left -\r\n          (hasArc ? 0 : $$.getCurrentPaddingLeft(withoutRecompute));\r\n      return svgLeft > 0 ? svgLeft : 0;\r\n  };\r\n  ChartInternal.prototype.getAxisWidthByAxisId = function (id, withoutRecompute) {\r\n      var $$ = this, position = $$.axis.getLabelPositionById(id);\r\n      return ($$.axis.getMaxTickWidth(id, withoutRecompute) + (position.isInner ? 20 : 40));\r\n  };\r\n  ChartInternal.prototype.getHorizontalAxisHeight = function (axisId, isSubchart) {\r\n      var $$ = this, config = $$.config, h = 30;\r\n      if (axisId === 'x' && !(isDefined(isSubchart) && isSubchart ? config.subchart_axis_x_show : config.axis_x_show)) {\r\n          return 8;\r\n      }\r\n      if (axisId === 'x' && config.axis_x_height) {\r\n          return config.axis_x_height;\r\n      }\r\n      if (axisId === 'y' && !config.axis_y_show) {\r\n          return config.legend_show && !$$.isLegendRight && !$$.isLegendInset ? 10 : 1;\r\n      }\r\n      if (axisId === 'y2' && !config.axis_y2_show) {\r\n          return $$.rotated_padding_top;\r\n      }\r\n      // Calculate x axis height when tick rotated\r\n      if (axisId === 'x' && !config.axis_rotated && config.axis_x_tick_rotate) {\r\n          h =\r\n              30 +\r\n                  $$.axis.getMaxTickWidth(axisId) *\r\n                      Math.cos((Math.PI * (90 - Math.abs(config.axis_x_tick_rotate))) / 180);\r\n      }\r\n      // Calculate y axis height when tick rotated\r\n      if (axisId === 'y' && config.axis_rotated && config.axis_y_tick_rotate) {\r\n          h =\r\n              30 +\r\n                  $$.axis.getMaxTickWidth(axisId) *\r\n                      Math.cos((Math.PI * (90 - Math.abs(config.axis_y_tick_rotate))) / 180);\r\n      }\r\n      return (h +\r\n          ($$.axis.getLabelPositionById(axisId).isInner ? 0 : 10) +\r\n          (axisId === 'y2' ? -10 : 0));\r\n  };\n\n  ChartInternal.prototype.initBrush = function (scale) {\r\n      var $$ = this, d3 = $$.d3;\r\n      // TODO: dynamically change brushY/brushX according to axis_rotated.\r\n      $$.brush = ($$.config.axis_rotated ? d3.brushY() : d3.brushX())\r\n          .on('brush', function () {\r\n          var event = d3.event.sourceEvent;\r\n          if (event && event.type === 'zoom') {\r\n              return;\r\n          }\r\n          $$.redrawForBrush();\r\n      })\r\n          .on('end', function () {\r\n          var event = d3.event.sourceEvent;\r\n          if (event && event.type === 'zoom') {\r\n              return;\r\n          }\r\n          if ($$.brush.empty() && event && event.type !== 'end') {\r\n              $$.brush.clear();\r\n          }\r\n      });\r\n      $$.brush.updateExtent = function () {\r\n          var range = this.scale.range(), extent;\r\n          if ($$.config.axis_rotated) {\r\n              extent = [\r\n                  [0, range[0]],\r\n                  [$$.width2, range[1]]\r\n              ];\r\n          }\r\n          else {\r\n              extent = [\r\n                  [range[0], 0],\r\n                  [range[1], $$.height2]\r\n              ];\r\n          }\r\n          this.extent(extent);\r\n          return this;\r\n      };\r\n      $$.brush.updateScale = function (scale) {\r\n          this.scale = scale;\r\n          return this;\r\n      };\r\n      $$.brush.update = function (scale) {\r\n          this.updateScale(scale || $$.subX).updateExtent();\r\n          $$.context.select('.' + CLASS.brush).call(this);\r\n      };\r\n      $$.brush.clear = function () {\r\n          $$.context.select('.' + CLASS.brush).call($$.brush.move, null);\r\n      };\r\n      $$.brush.selection = function () {\r\n          return d3.brushSelection($$.context.select('.' + CLASS.brush).node());\r\n      };\r\n      $$.brush.selectionAsValue = function (selectionAsValue, withTransition) {\r\n          var selection, brush;\r\n          if (selectionAsValue) {\r\n              if ($$.context) {\r\n                  selection = [\r\n                      this.scale(selectionAsValue[0]),\r\n                      this.scale(selectionAsValue[1])\r\n                  ];\r\n                  brush = $$.context.select('.' + CLASS.brush);\r\n                  if (withTransition) {\r\n                      brush = brush.transition();\r\n                  }\r\n                  $$.brush.move(brush, selection);\r\n              }\r\n              return [];\r\n          }\r\n          selection = $$.brush.selection() || [0, 0];\r\n          return [this.scale.invert(selection[0]), this.scale.invert(selection[1])];\r\n      };\r\n      $$.brush.empty = function () {\r\n          var selection = $$.brush.selection();\r\n          return !selection || selection[0] === selection[1];\r\n      };\r\n      return $$.brush.updateScale(scale);\r\n  };\r\n  ChartInternal.prototype.initSubchart = function () {\r\n      var $$ = this, config = $$.config, context = ($$.context = $$.svg\r\n          .append('g')\r\n          .attr('transform', $$.getTranslate('context')));\r\n      // set style\r\n      context.style('visibility', 'visible');\r\n      // Define g for chart area\r\n      context\r\n          .append('g')\r\n          .attr('clip-path', $$.clipPathForSubchart)\r\n          .attr('class', CLASS.chart);\r\n      // Define g for bar chart area\r\n      context\r\n          .select('.' + CLASS.chart)\r\n          .append('g')\r\n          .attr('class', CLASS.chartBars);\r\n      // Define g for line chart area\r\n      context\r\n          .select('.' + CLASS.chart)\r\n          .append('g')\r\n          .attr('class', CLASS.chartLines);\r\n      // Add extent rect for Brush\r\n      context\r\n          .append('g')\r\n          .attr('clip-path', $$.clipPath)\r\n          .attr('class', CLASS.brush);\r\n      // ATTENTION: This must be called AFTER chart added\r\n      // Add Axis\r\n      $$.axes.subx = context\r\n          .append('g')\r\n          .attr('class', CLASS.axisX)\r\n          .attr('transform', $$.getTranslate('subx'))\r\n          .attr('clip-path', config.axis_rotated ? '' : $$.clipPathForXAxis)\r\n          .style('visibility', config.subchart_axis_x_show ? 'visible' : 'hidden');\r\n  };\r\n  ChartInternal.prototype.initSubchartBrush = function () {\r\n      var $$ = this;\r\n      // Add extent rect for Brush\r\n      $$.initBrush($$.subX).updateExtent();\r\n      $$.context.select('.' + CLASS.brush).call($$.brush);\r\n  };\r\n  ChartInternal.prototype.updateTargetsForSubchart = function (targets) {\r\n      var $$ = this, context = $$.context, config = $$.config, contextLineEnter, contextLine, contextBarEnter, contextBar, classChartBar = $$.classChartBar.bind($$), classBars = $$.classBars.bind($$), classChartLine = $$.classChartLine.bind($$), classLines = $$.classLines.bind($$), classAreas = $$.classAreas.bind($$);\r\n      //-- Bar --//\r\n      contextBar = context\r\n          .select('.' + CLASS.chartBars)\r\n          .selectAll('.' + CLASS.chartBar)\r\n          .data(targets);\r\n      contextBarEnter = contextBar\r\n          .enter()\r\n          .append('g')\r\n          .style('opacity', 0);\r\n      contextBarEnter.merge(contextBar).attr('class', classChartBar);\r\n      // Bars for each data\r\n      contextBarEnter.append('g').attr('class', classBars);\r\n      //-- Line --//\r\n      contextLine = context\r\n          .select('.' + CLASS.chartLines)\r\n          .selectAll('.' + CLASS.chartLine)\r\n          .data(targets);\r\n      contextLineEnter = contextLine\r\n          .enter()\r\n          .append('g')\r\n          .style('opacity', 0);\r\n      contextLineEnter.merge(contextLine).attr('class', classChartLine);\r\n      // Lines for each data\r\n      contextLineEnter.append('g').attr('class', classLines);\r\n      // Area\r\n      contextLineEnter.append('g').attr('class', classAreas);\r\n      //-- Brush --//\r\n      context\r\n          .selectAll('.' + CLASS.brush + ' rect')\r\n          .attr(config.axis_rotated ? 'width' : 'height', config.axis_rotated ? $$.width2 : $$.height2);\r\n  };\r\n  ChartInternal.prototype.updateBarForSubchart = function (durationForExit) {\r\n      var $$ = this;\r\n      var contextBar = $$.context\r\n          .selectAll('.' + CLASS.bars)\r\n          .selectAll('.' + CLASS.bar)\r\n          .data($$.barData.bind($$));\r\n      var contextBarEnter = contextBar\r\n          .enter()\r\n          .append('path')\r\n          .attr('class', $$.classBar.bind($$))\r\n          .style('stroke', 'none')\r\n          .style('fill', $$.color);\r\n      contextBar\r\n          .exit()\r\n          .transition()\r\n          .duration(durationForExit)\r\n          .style('opacity', 0)\r\n          .remove();\r\n      $$.contextBar = contextBarEnter\r\n          .merge(contextBar)\r\n          .style('opacity', $$.initialOpacity.bind($$));\r\n  };\r\n  ChartInternal.prototype.redrawBarForSubchart = function (drawBarOnSub, withTransition, duration) {\r\n      (withTransition\r\n          ? this.contextBar.transition(Math.random().toString()).duration(duration)\r\n          : this.contextBar)\r\n          .attr('d', drawBarOnSub)\r\n          .style('opacity', 1);\r\n  };\r\n  ChartInternal.prototype.updateLineForSubchart = function (durationForExit) {\r\n      var $$ = this;\r\n      var contextLine = $$.context\r\n          .selectAll('.' + CLASS.lines)\r\n          .selectAll('.' + CLASS.line)\r\n          .data($$.lineData.bind($$));\r\n      var contextLineEnter = contextLine\r\n          .enter()\r\n          .append('path')\r\n          .attr('class', $$.classLine.bind($$))\r\n          .style('stroke', $$.color);\r\n      contextLine\r\n          .exit()\r\n          .transition()\r\n          .duration(durationForExit)\r\n          .style('opacity', 0)\r\n          .remove();\r\n      $$.contextLine = contextLineEnter\r\n          .merge(contextLine)\r\n          .style('opacity', $$.initialOpacity.bind($$));\r\n  };\r\n  ChartInternal.prototype.redrawLineForSubchart = function (drawLineOnSub, withTransition, duration) {\r\n      (withTransition\r\n          ? this.contextLine.transition(Math.random().toString()).duration(duration)\r\n          : this.contextLine)\r\n          .attr('d', drawLineOnSub)\r\n          .style('opacity', 1);\r\n  };\r\n  ChartInternal.prototype.updateAreaForSubchart = function (durationForExit) {\r\n      var $$ = this, d3 = $$.d3;\r\n      var contextArea = $$.context\r\n          .selectAll('.' + CLASS.areas)\r\n          .selectAll('.' + CLASS.area)\r\n          .data($$.lineData.bind($$));\r\n      var contextAreaEnter = contextArea\r\n          .enter()\r\n          .append('path')\r\n          .attr('class', $$.classArea.bind($$))\r\n          .style('fill', $$.color)\r\n          .style('opacity', function () {\r\n          $$.orgAreaOpacity = +d3.select(this).style('opacity');\r\n          return 0;\r\n      });\r\n      contextArea\r\n          .exit()\r\n          .transition()\r\n          .duration(durationForExit)\r\n          .style('opacity', 0)\r\n          .remove();\r\n      $$.contextArea = contextAreaEnter.merge(contextArea).style('opacity', 0);\r\n  };\r\n  ChartInternal.prototype.redrawAreaForSubchart = function (drawAreaOnSub, withTransition, duration) {\r\n      (withTransition\r\n          ? this.contextArea.transition(Math.random().toString()).duration(duration)\r\n          : this.contextArea)\r\n          .attr('d', drawAreaOnSub)\r\n          .style('fill', this.color)\r\n          .style('opacity', this.orgAreaOpacity);\r\n  };\r\n  ChartInternal.prototype.redrawSubchart = function (withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices) {\r\n      var $$ = this, d3 = $$.d3, drawAreaOnSub, drawBarOnSub, drawLineOnSub;\r\n      // reflect main chart to extent on subchart if zoomed\r\n      if (d3.event && d3.event.type === 'zoom') {\r\n          $$.brush.selectionAsValue($$.x.orgDomain());\r\n      }\r\n      // update subchart elements if needed\r\n      if (withSubchart) {\r\n          // extent rect\r\n          if (!$$.brush.empty()) {\r\n              $$.brush.selectionAsValue($$.x.orgDomain());\r\n          }\r\n          // setup drawer - MEMO: this must be called after axis updated\r\n          drawAreaOnSub = $$.generateDrawArea(areaIndices, true);\r\n          drawBarOnSub = $$.generateDrawBar(barIndices, true);\r\n          drawLineOnSub = $$.generateDrawLine(lineIndices, true);\r\n          $$.updateBarForSubchart(duration);\r\n          $$.updateLineForSubchart(duration);\r\n          $$.updateAreaForSubchart(duration);\r\n          $$.redrawBarForSubchart(drawBarOnSub, duration, duration);\r\n          $$.redrawLineForSubchart(drawLineOnSub, duration, duration);\r\n          $$.redrawAreaForSubchart(drawAreaOnSub, duration, duration);\r\n      }\r\n  };\r\n  ChartInternal.prototype.redrawForBrush = function () {\r\n      var $$ = this, x = $$.x, d3 = $$.d3, s;\r\n      $$.redraw({\r\n          withTransition: false,\r\n          withY: $$.config.zoom_rescale,\r\n          withSubchart: false,\r\n          withUpdateXDomain: true,\r\n          withEventRect: false,\r\n          withDimension: false\r\n      });\r\n      // update zoom transation binded to event rect\r\n      s = d3.event.selection || $$.brush.scale.range();\r\n      $$.main\r\n          .select('.' + CLASS.eventRect)\r\n          .call($$.zoom.transform, d3.zoomIdentity.scale($$.width / (s[1] - s[0])).translate(-s[0], 0));\r\n      $$.config.subchart_onbrush.call($$.api, x.orgDomain());\r\n  };\r\n  ChartInternal.prototype.transformContext = function (withTransition, transitions) {\r\n      var $$ = this, subXAxis;\r\n      if (transitions && transitions.axisSubX) {\r\n          subXAxis = transitions.axisSubX;\r\n      }\r\n      else {\r\n          subXAxis = $$.context.select('.' + CLASS.axisX);\r\n          if (withTransition) {\r\n              subXAxis = subXAxis.transition();\r\n          }\r\n      }\r\n      $$.context.attr('transform', $$.getTranslate('context'));\r\n      subXAxis.attr('transform', $$.getTranslate('subx'));\r\n  };\r\n  ChartInternal.prototype.getDefaultSelection = function () {\r\n      var $$ = this, config = $$.config, selection = isFunction(config.axis_x_selection)\r\n          ? config.axis_x_selection($$.getXDomain($$.data.targets))\r\n          : config.axis_x_selection;\r\n      if ($$.isTimeSeries()) {\r\n          selection = [$$.parseDate(selection[0]), $$.parseDate(selection[1])];\r\n      }\r\n      return selection;\r\n  };\r\n  ChartInternal.prototype.removeSubchart = function () {\r\n      var $$ = this;\r\n      $$.brush = null;\r\n      $$.context.remove();\r\n      $$.context = null;\r\n  };\n\n  ChartInternal.prototype.initText = function () {\r\n      var $$ = this;\r\n      $$.main\r\n          .select('.' + CLASS.chart)\r\n          .append('g')\r\n          .attr('class', CLASS.chartTexts);\r\n      $$.mainText = $$.d3.selectAll([]);\r\n  };\r\n  ChartInternal.prototype.updateTargetsForText = function (targets) {\r\n      var $$ = this, classChartText = $$.classChartText.bind($$), classTexts = $$.classTexts.bind($$), classFocus = $$.classFocus.bind($$);\r\n      var mainText = $$.main\r\n          .select('.' + CLASS.chartTexts)\r\n          .selectAll('.' + CLASS.chartText)\r\n          .data(targets);\r\n      var mainTextEnter = mainText\r\n          .enter()\r\n          .append('g')\r\n          .attr('class', classChartText)\r\n          .style('opacity', 0)\r\n          .style('pointer-events', 'none');\r\n      mainTextEnter.append('g').attr('class', classTexts);\r\n      mainTextEnter.merge(mainText).attr('class', function (d) {\r\n          return classChartText(d) + classFocus(d);\r\n      });\r\n  };\r\n  ChartInternal.prototype.updateText = function (xForText, yForText, durationForExit) {\r\n      var $$ = this, config = $$.config, barOrLineData = $$.barOrLineData.bind($$), classText = $$.classText.bind($$);\r\n      var mainText = $$.main\r\n          .selectAll('.' + CLASS.texts)\r\n          .selectAll('.' + CLASS.text)\r\n          .data(barOrLineData);\r\n      var mainTextEnter = mainText\r\n          .enter()\r\n          .append('text')\r\n          .attr('class', classText)\r\n          .attr('text-anchor', function (d) {\r\n          return config.axis_rotated ? (d.value < 0 ? 'end' : 'start') : 'middle';\r\n      })\r\n          .style('stroke', 'none')\r\n          .attr('x', xForText)\r\n          .attr('y', yForText)\r\n          .style('fill', function (d) {\r\n          return $$.color(d);\r\n      })\r\n          .style('fill-opacity', 0);\r\n      $$.mainText = mainTextEnter.merge(mainText).text(function (d, i, j) {\r\n          return $$.dataLabelFormat(d.id)(d.value, d.id, i, j);\r\n      });\r\n      mainText\r\n          .exit()\r\n          .transition()\r\n          .duration(durationForExit)\r\n          .style('fill-opacity', 0)\r\n          .remove();\r\n  };\r\n  ChartInternal.prototype.redrawText = function (xForText, yForText, forFlow, withTransition, transition) {\r\n      return [\r\n          (withTransition ? this.mainText.transition(transition) : this.mainText)\r\n              .attr('x', xForText)\r\n              .attr('y', yForText)\r\n              .style('fill', this.color)\r\n              .style('fill-opacity', forFlow ? 0 : this.opacityForText.bind(this))\r\n      ];\r\n  };\r\n  ChartInternal.prototype.getTextRect = function (text, cls, element) {\r\n      var dummy = this.d3\r\n          .select('body')\r\n          .append('div')\r\n          .classed('c3', true), svg = dummy\r\n          .append('svg')\r\n          .style('visibility', 'hidden')\r\n          .style('position', 'fixed')\r\n          .style('top', 0)\r\n          .style('left', 0), font = this.d3.select(element).style('font'), rect;\r\n      svg\r\n          .selectAll('.dummy')\r\n          .data([text])\r\n          .enter()\r\n          .append('text')\r\n          .classed(cls ? cls : '', true)\r\n          .style('font', font)\r\n          .text(text)\r\n          .each(function () {\r\n          rect = getBBox(this);\r\n      });\r\n      dummy.remove();\r\n      return rect;\r\n  };\r\n  ChartInternal.prototype.generateXYForText = function (areaIndices, barIndices, lineIndices, forX) {\r\n      var $$ = this, getAreaPoints = $$.generateGetAreaPoints(areaIndices, false), getBarPoints = $$.generateGetBarPoints(barIndices, false), getLinePoints = $$.generateGetLinePoints(lineIndices, false), getter = forX ? $$.getXForText : $$.getYForText;\r\n      return function (d, i) {\r\n          var getPoints = $$.isAreaType(d)\r\n              ? getAreaPoints\r\n              : $$.isBarType(d)\r\n                  ? getBarPoints\r\n                  : getLinePoints;\r\n          return getter.call($$, getPoints(d, i), d, this);\r\n      };\r\n  };\r\n  ChartInternal.prototype.getXForText = function (points, d, textElement) {\r\n      var $$ = this, box = getBBox(textElement), xPos, padding;\r\n      if ($$.config.axis_rotated) {\r\n          padding = $$.isBarType(d) ? 4 : 6;\r\n          xPos = points[2][1] + padding * (d.value < 0 ? -1 : 1);\r\n      }\r\n      else {\r\n          xPos = $$.hasType('bar') ? (points[2][0] + points[0][0]) / 2 : points[0][0];\r\n      }\r\n      // show labels regardless of the domain if value is null\r\n      if (d.value === null) {\r\n          if (xPos > $$.width) {\r\n              xPos = $$.width - box.width;\r\n          }\r\n          else if (xPos < 0) {\r\n              xPos = 4;\r\n          }\r\n      }\r\n      return xPos;\r\n  };\r\n  ChartInternal.prototype.getYForText = function (points, d, textElement) {\r\n      var $$ = this, box = getBBox(textElement), yPos;\r\n      if ($$.config.axis_rotated) {\r\n          yPos = (points[0][0] + points[2][0] + box.height * 0.6) / 2;\r\n      }\r\n      else {\r\n          yPos = points[2][1];\r\n          if (d.value < 0 || (d.value === 0 && !$$.hasPositiveValue)) {\r\n              yPos += box.height;\r\n              if ($$.isBarType(d) && $$.isSafari()) {\r\n                  yPos -= 3;\r\n              }\r\n              else if (!$$.isBarType(d) && $$.isChrome()) {\r\n                  yPos += 3;\r\n              }\r\n          }\r\n          else {\r\n              yPos += $$.isBarType(d) ? -3 : -6;\r\n          }\r\n      }\r\n      // show labels regardless of the domain if value is null\r\n      if (d.value === null && !$$.config.axis_rotated) {\r\n          if (yPos < box.height) {\r\n              yPos = box.height;\r\n          }\r\n          else if (yPos > this.height) {\r\n              yPos = this.height - 4;\r\n          }\r\n      }\r\n      return yPos;\r\n  };\n\n  ChartInternal.prototype.initTitle = function () {\r\n      var $$ = this;\r\n      $$.title = $$.svg\r\n          .append('text')\r\n          .text($$.config.title_text)\r\n          .attr('class', $$.CLASS.title);\r\n  };\r\n  ChartInternal.prototype.redrawTitle = function () {\r\n      var $$ = this;\r\n      $$.title.attr('x', $$.xForTitle.bind($$)).attr('y', $$.yForTitle.bind($$));\r\n  };\r\n  ChartInternal.prototype.xForTitle = function () {\r\n      var $$ = this, config = $$.config, position = config.title_position || 'left', x;\r\n      if (position.indexOf('right') >= 0) {\r\n          x =\r\n              $$.currentWidth -\r\n                  $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width -\r\n                  config.title_padding.right;\r\n      }\r\n      else if (position.indexOf('center') >= 0) {\r\n          x = Math.max(($$.currentWidth -\r\n              $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width) /\r\n              2, 0);\r\n      }\r\n      else {\r\n          // left\r\n          x = config.title_padding.left;\r\n      }\r\n      return x;\r\n  };\r\n  ChartInternal.prototype.yForTitle = function () {\r\n      var $$ = this;\r\n      return ($$.config.title_padding.top +\r\n          $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node())\r\n              .height);\r\n  };\r\n  ChartInternal.prototype.getTitlePadding = function () {\r\n      var $$ = this;\r\n      return $$.yForTitle() + $$.config.title_padding.bottom;\r\n  };\n\n  function powerOfTen(d) {\r\n      return d / Math.pow(10, Math.ceil(Math.log(d) / Math.LN10 - 1e-12)) === 1;\r\n  }\r\n  ChartInternal.prototype.drawColorScale = function () {\r\n      var $$ = this, d3 = $$.d3, config = $$.config, target = $$.data.targets[0], barWidth, barHeight, axis, points, legendAxis, axisScale, inverseScale, height;\r\n      barWidth = !isNaN(config.stanford_scaleWidth)\r\n          ? config.stanford_scaleWidth\r\n          : 20;\r\n      barHeight = 5;\r\n      if (barHeight < 0 || barWidth < 0) {\r\n          throw Error(\"Colorscale's barheight and barwidth must be greater than 0.\");\r\n      }\r\n      height =\r\n          $$.height - config.stanford_padding.bottom - config.stanford_padding.top;\r\n      points = d3.range(config.stanford_padding.bottom, height, barHeight);\r\n      inverseScale = d3\r\n          .scaleSequential(target.colors)\r\n          .domain([points[points.length - 1], points[0]]);\r\n      if ($$.colorScale) {\r\n          $$.colorScale.remove();\r\n      }\r\n      $$.colorScale = $$.svg\r\n          .append('g')\r\n          .attr('width', 50)\r\n          .attr('height', height)\r\n          .attr('class', CLASS.colorScale);\r\n      $$.colorScale\r\n          .append('g')\r\n          .attr('transform', \"translate(0, \" + config.stanford_padding.top + \")\")\r\n          .selectAll('bars')\r\n          .data(points)\r\n          .enter()\r\n          .append('rect')\r\n          .attr('y', function (d, i) { return i * barHeight; })\r\n          .attr('x', 0)\r\n          .attr('width', barWidth)\r\n          .attr('height', barHeight)\r\n          .attr('fill', function (d) {\r\n          return inverseScale(d);\r\n      });\r\n      // Legend Axis\r\n      axisScale = d3\r\n          .scaleLog()\r\n          .domain([target.minEpochs, target.maxEpochs])\r\n          .range([\r\n          points[0] +\r\n              config.stanford_padding.top +\r\n              points[points.length - 1] +\r\n              barHeight -\r\n              1,\r\n          points[0] + config.stanford_padding.top\r\n      ]);\r\n      legendAxis = d3.axisRight(axisScale);\r\n      if (config.stanford_scaleFormat === 'pow10') {\r\n          legendAxis.tickValues([1, 10, 100, 1000, 10000, 100000, 1000000, 10000000]);\r\n      }\r\n      else if (isFunction(config.stanford_scaleFormat)) {\r\n          legendAxis.tickFormat(config.stanford_scaleFormat);\r\n      }\r\n      else {\r\n          legendAxis.tickFormat(d3.format('d'));\r\n      }\r\n      if (isFunction(config.stanford_scaleValues)) {\r\n          legendAxis.tickValues(config.stanford_scaleValues(target.minEpochs, target.maxEpochs));\r\n      }\r\n      // Draw Axis\r\n      axis = $$.colorScale\r\n          .append('g')\r\n          .attr('class', 'legend axis')\r\n          .attr('transform', \"translate(\" + barWidth + \",0)\")\r\n          .call(legendAxis);\r\n      if (config.stanford_scaleFormat === 'pow10') {\r\n          axis\r\n              .selectAll('.tick text')\r\n              .text(null)\r\n              .filter(powerOfTen)\r\n              .text(10)\r\n              .append('tspan')\r\n              .attr('dy', '-.7em') // https://bl.ocks.org/mbostock/6738229\r\n              .text(function (d) {\r\n              return Math.round(Math.log(d) / Math.LN10);\r\n          });\r\n      }\r\n      $$.colorScale.attr('transform', \"translate(\" + ($$.currentWidth - $$.xForColorScale()) + \", 0)\");\r\n  };\r\n  ChartInternal.prototype.xForColorScale = function () {\r\n      var $$ = this;\r\n      return $$.config.stanford_padding.right + getBBox($$.colorScale.node()).width;\r\n  };\r\n  ChartInternal.prototype.getColorScalePadding = function () {\r\n      var $$ = this;\r\n      return $$.xForColorScale() + $$.config.stanford_padding.left + 20;\r\n  };\n\n  ChartInternal.prototype.isStanfordGraphType = function () {\r\n      var $$ = this;\r\n      return $$.config.data_type === 'stanford';\r\n  };\r\n  ChartInternal.prototype.initStanfordData = function () {\r\n      var $$ = this, d3 = $$.d3, config = $$.config, target = $$.data.targets[0], epochs, maxEpochs, minEpochs;\r\n      // Make larger values appear on top\r\n      target.values.sort(compareEpochs);\r\n      // Get array of epochs\r\n      epochs = target.values.map(function (a) { return a.epochs; });\r\n      minEpochs = !isNaN(config.stanford_scaleMin)\r\n          ? config.stanford_scaleMin\r\n          : d3.min(epochs);\r\n      maxEpochs = !isNaN(config.stanford_scaleMax)\r\n          ? config.stanford_scaleMax\r\n          : d3.max(epochs);\r\n      if (minEpochs > maxEpochs) {\r\n          throw Error('Number of minEpochs has to be smaller than maxEpochs');\r\n      }\r\n      target.colors = isFunction(config.stanford_colors)\r\n          ? config.stanford_colors\r\n          : d3.interpolateHslLong(d3.hsl(250, 1, 0.5), d3.hsl(0, 1, 0.5));\r\n      target.colorscale = d3\r\n          .scaleSequentialLog(target.colors)\r\n          .domain([minEpochs, maxEpochs]);\r\n      target.minEpochs = minEpochs;\r\n      target.maxEpochs = maxEpochs;\r\n  };\r\n  ChartInternal.prototype.getStanfordPointColor = function (d) {\r\n      var $$ = this, target = $$.data.targets[0];\r\n      return target.colorscale(d.epochs);\r\n  };\r\n  // http://jsfiddle.net/Xotic750/KtzLq/\r\n  ChartInternal.prototype.getCentroid = function (points) {\r\n      var area = getRegionArea(points);\r\n      var x = 0, y = 0, i, j, f, point1, point2;\r\n      for (i = 0, j = points.length - 1; i < points.length; j = i, i += 1) {\r\n          point1 = points[i];\r\n          point2 = points[j];\r\n          f = point1.x * point2.y - point2.x * point1.y;\r\n          x += (point1.x + point2.x) * f;\r\n          y += (point1.y + point2.y) * f;\r\n      }\r\n      f = area * 6;\r\n      return {\r\n          x: x / f,\r\n          y: y / f\r\n      };\r\n  };\r\n  ChartInternal.prototype.getStanfordTooltipTitle = function (d) {\r\n      var $$ = this, labelX = $$.axis.getLabelText('x'), labelY = $$.axis.getLabelText('y');\r\n      return \"\\n      <tr><th>\" + (labelX ? sanitise(labelX) : 'x') + \"</th><th class='value'>\" + d.x + \"</th></tr>\\n      <tr><th>\" + (labelY ? sanitise(labelY) : 'y') + \"</th><th class='value'>\" + d.value + \"</th></tr>\\n    \";\r\n  };\r\n  ChartInternal.prototype.countEpochsInRegion = function (region) {\r\n      var $$ = this, target = $$.data.targets[0], total, count;\r\n      total = target.values.reduce(function (accumulator, currentValue) { return accumulator + Number(currentValue.epochs); }, 0);\r\n      count = target.values.reduce(function (accumulator, currentValue) {\r\n          if (pointInRegion(currentValue, region)) {\r\n              return accumulator + Number(currentValue.epochs);\r\n          }\r\n          return accumulator;\r\n      }, 0);\r\n      return {\r\n          value: count,\r\n          percentage: count !== 0 ? ((count / total) * 100).toFixed(1) : 0\r\n      };\r\n  };\r\n  var getRegionArea = function (points) {\r\n      // thanks to: https://stackoverflow.com/questions/16282330/find-centerpoint-of-polygon-in-javascript\r\n      var area = 0, i, j, point1, point2;\r\n      for (i = 0, j = points.length - 1; i < points.length; j = i, i += 1) {\r\n          point1 = points[i];\r\n          point2 = points[j];\r\n          area += point1.x * point2.y;\r\n          area -= point1.y * point2.x;\r\n      }\r\n      area /= 2;\r\n      return area;\r\n  };\r\n  var pointInRegion = function (point, region) {\r\n      // thanks to: http://bl.ocks.org/bycoffe/5575904\r\n      // ray-casting algorithm based on\r\n      // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\r\n      var xi, yi, yj, xj, intersect, x = point.x, y = point.value, inside = false;\r\n      for (var i = 0, j = region.length - 1; i < region.length; j = i++) {\r\n          xi = region[i].x;\r\n          yi = region[i].y;\r\n          xj = region[j].x;\r\n          yj = region[j].y;\r\n          intersect = yi > y !== yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\r\n          if (intersect) {\r\n              inside = !inside;\r\n          }\r\n      }\r\n      return inside;\r\n  };\r\n  var compareEpochs = function (a, b) {\r\n      if (a.epochs < b.epochs) {\r\n          return -1;\r\n      }\r\n      if (a.epochs > b.epochs) {\r\n          return 1;\r\n      }\r\n      return 0;\r\n  };\n\n  ChartInternal.prototype.initStanfordElements = function () {\r\n      var $$ = this;\r\n      // Avoid blocking eventRect\r\n      $$.stanfordElements = $$.main\r\n          .select('.' + CLASS.chart)\r\n          .append('g')\r\n          .attr('class', CLASS.stanfordElements);\r\n      $$.stanfordElements.append('g').attr('class', CLASS.stanfordLines);\r\n      $$.stanfordElements.append('g').attr('class', CLASS.stanfordTexts);\r\n      $$.stanfordElements.append('g').attr('class', CLASS.stanfordRegions);\r\n  };\r\n  ChartInternal.prototype.updateStanfordElements = function (duration) {\r\n      var $$ = this, main = $$.main, config = $$.config, stanfordLine, stanfordLineEnter, stanfordRegion, stanfordRegionEnter, stanfordText, stanfordTextEnter, xvCustom = $$.xvCustom.bind($$), yvCustom = $$.yvCustom.bind($$), countPointsInRegion = $$.countEpochsInRegion.bind($$);\r\n      // Stanford-Lines\r\n      stanfordLine = main\r\n          .select('.' + CLASS.stanfordLines)\r\n          .style('shape-rendering', 'geometricprecision')\r\n          .selectAll('.' + CLASS.stanfordLine)\r\n          .data(config.stanford_lines);\r\n      // enter\r\n      stanfordLineEnter = stanfordLine\r\n          .enter()\r\n          .append('g')\r\n          .attr('class', function (d) {\r\n          return CLASS.stanfordLine + (d['class'] ? ' ' + d['class'] : '');\r\n      });\r\n      stanfordLineEnter\r\n          .append('line')\r\n          .attr('x1', function (d) {\r\n          return config.axis_rotated ? yvCustom(d, 'value_y1') : xvCustom(d, 'value_x1');\r\n      })\r\n          .attr('x2', function (d) {\r\n          return config.axis_rotated ? yvCustom(d, 'value_y2') : xvCustom(d, 'value_x2');\r\n      })\r\n          .attr('y1', function (d) {\r\n          return config.axis_rotated ? xvCustom(d, 'value_x1') : yvCustom(d, 'value_y1');\r\n      })\r\n          .attr('y2', function (d) {\r\n          return config.axis_rotated ? xvCustom(d, 'value_x2') : yvCustom(d, 'value_y2');\r\n      })\r\n          .style('opacity', 0);\r\n      // update\r\n      $$.stanfordLines = stanfordLineEnter.merge(stanfordLine);\r\n      $$.stanfordLines\r\n          .select('line')\r\n          .transition()\r\n          .duration(duration)\r\n          .attr('x1', function (d) {\r\n          return config.axis_rotated ? yvCustom(d, 'value_y1') : xvCustom(d, 'value_x1');\r\n      })\r\n          .attr('x2', function (d) {\r\n          return config.axis_rotated ? yvCustom(d, 'value_y2') : xvCustom(d, 'value_x2');\r\n      })\r\n          .attr('y1', function (d) {\r\n          return config.axis_rotated ? xvCustom(d, 'value_x1') : yvCustom(d, 'value_y1');\r\n      })\r\n          .attr('y2', function (d) {\r\n          return config.axis_rotated ? xvCustom(d, 'value_x2') : yvCustom(d, 'value_y2');\r\n      })\r\n          .style('opacity', 1);\r\n      // exit\r\n      stanfordLine\r\n          .exit()\r\n          .transition()\r\n          .duration(duration)\r\n          .style('opacity', 0)\r\n          .remove();\r\n      // Stanford-Text\r\n      stanfordText = main\r\n          .select('.' + CLASS.stanfordTexts)\r\n          .selectAll('.' + CLASS.stanfordText)\r\n          .data(config.stanford_texts);\r\n      // enter\r\n      stanfordTextEnter = stanfordText\r\n          .enter()\r\n          .append('g')\r\n          .attr('class', function (d) {\r\n          return CLASS.stanfordText + (d['class'] ? ' ' + d['class'] : '');\r\n      });\r\n      stanfordTextEnter\r\n          .append('text')\r\n          .attr('x', function (d) { return (config.axis_rotated ? yvCustom(d, 'y') : xvCustom(d, 'x')); })\r\n          .attr('y', function (d) { return (config.axis_rotated ? xvCustom(d, 'x') : yvCustom(d, 'y')); })\r\n          .style('opacity', 0);\r\n      // update\r\n      $$.stanfordTexts = stanfordTextEnter.merge(stanfordText);\r\n      $$.stanfordTexts\r\n          .select('text')\r\n          .transition()\r\n          .duration(duration)\r\n          .attr('x', function (d) { return (config.axis_rotated ? yvCustom(d, 'y') : xvCustom(d, 'x')); })\r\n          .attr('y', function (d) { return (config.axis_rotated ? xvCustom(d, 'x') : yvCustom(d, 'y')); })\r\n          .text(function (d) {\r\n          return d.content;\r\n      })\r\n          .style('opacity', 1);\r\n      // exit\r\n      stanfordText\r\n          .exit()\r\n          .transition()\r\n          .duration(duration)\r\n          .style('opacity', 0)\r\n          .remove();\r\n      // Stanford-Regions\r\n      stanfordRegion = main\r\n          .select('.' + CLASS.stanfordRegions)\r\n          .selectAll('.' + CLASS.stanfordRegion)\r\n          .data(config.stanford_regions);\r\n      // enter\r\n      stanfordRegionEnter = stanfordRegion\r\n          .enter()\r\n          .append('g')\r\n          .attr('class', function (d) {\r\n          return CLASS.stanfordRegion + (d['class'] ? ' ' + d['class'] : '');\r\n      });\r\n      stanfordRegionEnter\r\n          .append('polygon')\r\n          .attr('points', function (d) {\r\n          return d.points\r\n              .map(function (value) {\r\n              return [\r\n                  config.axis_rotated ? yvCustom(value, 'y') : xvCustom(value, 'x'),\r\n                  config.axis_rotated ? xvCustom(value, 'x') : yvCustom(value, 'y')\r\n              ].join(',');\r\n          })\r\n              .join(' ');\r\n      })\r\n          .style('opacity', 0);\r\n      stanfordRegionEnter\r\n          .append('text')\r\n          .attr('x', function (d) { return $$.getCentroid(d.points).x; })\r\n          .attr('y', function (d) { return $$.getCentroid(d.points).y; })\r\n          .style('opacity', 0);\r\n      // update\r\n      $$.stanfordRegions = stanfordRegionEnter.merge(stanfordRegion);\r\n      $$.stanfordRegions\r\n          .select('polygon')\r\n          .transition()\r\n          .duration(duration)\r\n          .attr('points', function (d) {\r\n          return d.points\r\n              .map(function (value) {\r\n              return [\r\n                  config.axis_rotated ? yvCustom(value, 'y') : xvCustom(value, 'x'),\r\n                  config.axis_rotated ? xvCustom(value, 'x') : yvCustom(value, 'y')\r\n              ].join(',');\r\n          })\r\n              .join(' ');\r\n      })\r\n          .style('opacity', function (d) {\r\n          return d.opacity ? d.opacity : 0.2;\r\n      });\r\n      $$.stanfordRegions\r\n          .select('text')\r\n          .transition()\r\n          .duration(duration)\r\n          .attr('x', function (d) {\r\n          return config.axis_rotated\r\n              ? yvCustom($$.getCentroid(d.points), 'y')\r\n              : xvCustom($$.getCentroid(d.points), 'x');\r\n      })\r\n          .attr('y', function (d) {\r\n          return config.axis_rotated\r\n              ? xvCustom($$.getCentroid(d.points), 'x')\r\n              : yvCustom($$.getCentroid(d.points), 'y');\r\n      })\r\n          .text(function (d) {\r\n          if (d.text) {\r\n              var value, percentage, temp;\r\n              if ($$.isStanfordGraphType()) {\r\n                  temp = countPointsInRegion(d.points);\r\n                  value = temp.value;\r\n                  percentage = temp.percentage;\r\n              }\r\n              return d.text(value, percentage);\r\n          }\r\n          return '';\r\n      })\r\n          .attr('text-anchor', 'middle')\r\n          .attr('dominant-baseline', 'middle')\r\n          .style('opacity', 1);\r\n      // exit\r\n      stanfordRegion\r\n          .exit()\r\n          .transition()\r\n          .duration(duration)\r\n          .style('opacity', 0)\r\n          .remove();\r\n  };\n\n  ChartInternal.prototype.initTooltip = function () {\r\n      var $$ = this, config = $$.config, i;\r\n      $$.tooltip = $$.selectChart\r\n          .style('position', 'relative')\r\n          .append('div')\r\n          .attr('class', CLASS.tooltipContainer)\r\n          .style('position', 'absolute')\r\n          .style('pointer-events', 'none')\r\n          .style('display', 'none');\r\n      // Show tooltip if needed\r\n      if (config.tooltip_init_show) {\r\n          if ($$.isTimeSeries() && isString(config.tooltip_init_x)) {\r\n              config.tooltip_init_x = $$.parseDate(config.tooltip_init_x);\r\n              for (i = 0; i < $$.data.targets[0].values.length; i++) {\r\n                  if ($$.data.targets[0].values[i].x - config.tooltip_init_x === 0) {\r\n                      break;\r\n                  }\r\n              }\r\n              config.tooltip_init_x = i;\r\n          }\r\n          $$.tooltip.html(config.tooltip_contents.call($$, $$.data.targets.map(function (d) {\r\n              return $$.addName(d.values[config.tooltip_init_x]);\r\n          }), $$.axis.getXAxisTickFormat(), $$.getYFormat($$.hasArcType()), $$.color));\r\n          $$.tooltip\r\n              .style('top', config.tooltip_init_position.top)\r\n              .style('left', config.tooltip_init_position.left)\r\n              .style('display', 'block');\r\n      }\r\n  };\r\n  ChartInternal.prototype.getTooltipSortFunction = function () {\r\n      var $$ = this, config = $$.config;\r\n      if (config.data_groups.length === 0 || config.tooltip_order !== undefined) {\r\n          // if data are not grouped or if an order is specified\r\n          // for the tooltip values we sort them by their values\r\n          var order = config.tooltip_order;\r\n          if (order === undefined) {\r\n              order = config.data_order;\r\n          }\r\n          var valueOf = function (obj) {\r\n              return obj ? obj.value : null;\r\n          };\r\n          // if data are not grouped, we sort them by their value\r\n          if (isString(order) && order.toLowerCase() === 'asc') {\r\n              return function (a, b) {\r\n                  return valueOf(a) - valueOf(b);\r\n              };\r\n          }\r\n          else if (isString(order) && order.toLowerCase() === 'desc') {\r\n              return function (a, b) {\r\n                  return valueOf(b) - valueOf(a);\r\n              };\r\n          }\r\n          else if (isFunction(order)) {\r\n              // if the function is from data_order we need\r\n              // to wrap the returned function in order to format\r\n              // the sorted value to the expected format\r\n              var sortFunction = order;\r\n              if (config.tooltip_order === undefined) {\r\n                  sortFunction = function (a, b) {\r\n                      return order(a\r\n                          ? {\r\n                              id: a.id,\r\n                              values: [a]\r\n                          }\r\n                          : null, b\r\n                          ? {\r\n                              id: b.id,\r\n                              values: [b]\r\n                          }\r\n                          : null);\r\n                  };\r\n              }\r\n              return sortFunction;\r\n          }\r\n          else if (isArray(order)) {\r\n              return function (a, b) {\r\n                  return order.indexOf(a.id) - order.indexOf(b.id);\r\n              };\r\n          }\r\n      }\r\n      else {\r\n          // if data are grouped, we follow the order of grouped targets\r\n          var ids = $$.orderTargets($$.data.targets).map(function (i) {\r\n              return i.id;\r\n          });\r\n          // if it was either asc or desc we need to invert the order\r\n          // returned by orderTargets\r\n          if ($$.isOrderAsc() || $$.isOrderDesc()) {\r\n              ids = ids.reverse();\r\n          }\r\n          return function (a, b) {\r\n              return ids.indexOf(a.id) - ids.indexOf(b.id);\r\n          };\r\n      }\r\n  };\r\n  ChartInternal.prototype.getTooltipContent = function (d, defaultTitleFormat, defaultValueFormat, color) {\r\n      var $$ = this, config = $$.config, titleFormat = config.tooltip_format_title || defaultTitleFormat, nameFormat = config.tooltip_format_name ||\r\n          function (name) {\r\n              return name;\r\n          }, text, i, title, value, name, bgcolor;\r\n      var valueFormat = config.tooltip_format_value;\r\n      if (!valueFormat) {\r\n          valueFormat = $$.isTargetNormalized(d.id)\r\n              ? function (v, ratio) { return (ratio * 100).toFixed(2) + \"%\"; }\r\n              : defaultValueFormat;\r\n      }\r\n      var tooltipSortFunction = this.getTooltipSortFunction();\r\n      if (tooltipSortFunction) {\r\n          d.sort(tooltipSortFunction);\r\n      }\r\n      for (i = 0; i < d.length; i++) {\r\n          if (!(d[i] && (d[i].value || d[i].value === 0))) {\r\n              continue;\r\n          }\r\n          if ($$.isStanfordGraphType()) {\r\n              // Custom tooltip for stanford plots\r\n              if (!text) {\r\n                  title = $$.getStanfordTooltipTitle(d[i]);\r\n                  text = \"<table class='\" + $$.CLASS.tooltip + \"'>\" + title;\r\n              }\r\n              bgcolor = $$.getStanfordPointColor(d[i]);\r\n              name = sanitise(config.data_epochs); // Epochs key name\r\n              value = d[i].epochs;\r\n          }\r\n          else {\r\n              // Regular tooltip\r\n              if (!text) {\r\n                  title = sanitise(titleFormat ? titleFormat(d[i].x, d[i].index) : d[i].x);\r\n                  text =\r\n                      \"<table class='\" +\r\n                          $$.CLASS.tooltip +\r\n                          \"'>\" +\r\n                          (title || title === 0\r\n                              ? \"<tr><th colspan='2'>\" + title + '</th></tr>'\r\n                              : '');\r\n              }\r\n              value = sanitise(valueFormat(d[i].value, d[i].ratio, d[i].id, d[i].index, d));\r\n              if (value !== undefined) {\r\n                  // Skip elements when their name is set to null\r\n                  if (d[i].name === null) {\r\n                      continue;\r\n                  }\r\n                  name = sanitise(nameFormat(d[i].name, d[i].ratio, d[i].id, d[i].index));\r\n                  bgcolor = $$.levelColor ? $$.levelColor(d[i].value) : color(d[i].id);\r\n              }\r\n          }\r\n          if (value !== undefined) {\r\n              text +=\r\n                  \"<tr class='\" +\r\n                      $$.CLASS.tooltipName +\r\n                      '-' +\r\n                      $$.getTargetSelectorSuffix(d[i].id) +\r\n                      \"'>\";\r\n              text +=\r\n                  \"<td class='name'><span style='background-color:\" +\r\n                      bgcolor +\r\n                      \"'></span>\" +\r\n                      name +\r\n                      '</td>';\r\n              text += \"<td class='value'>\" + value + '</td>';\r\n              text += '</tr>';\r\n          }\r\n      }\r\n      return text + '</table>';\r\n  };\r\n  ChartInternal.prototype.tooltipPosition = function (dataToShow, tWidth, tHeight, element) {\r\n      var $$ = this, config = $$.config, d3 = $$.d3;\r\n      var svgLeft, tooltipLeft, tooltipRight, tooltipTop, chartRight;\r\n      var forArc = $$.hasArcType(), mouse = d3.mouse(element);\r\n      // Determin tooltip position\r\n      if (forArc) {\r\n          tooltipLeft =\r\n              ($$.width - ($$.isLegendRight ? $$.getLegendWidth() : 0)) / 2 + mouse[0];\r\n          tooltipTop =\r\n              ($$.hasType('gauge') ? $$.height : $$.height / 2) + mouse[1] + 20;\r\n      }\r\n      else {\r\n          svgLeft = $$.getSvgLeft(true);\r\n          if (config.axis_rotated) {\r\n              tooltipLeft = svgLeft + mouse[0] + 100;\r\n              tooltipRight = tooltipLeft + tWidth;\r\n              chartRight = $$.currentWidth - $$.getCurrentPaddingRight();\r\n              tooltipTop = $$.x(dataToShow[0].x) + 20;\r\n          }\r\n          else {\r\n              tooltipLeft =\r\n                  svgLeft + $$.getCurrentPaddingLeft(true) + $$.x(dataToShow[0].x) + 20;\r\n              tooltipRight = tooltipLeft + tWidth;\r\n              chartRight = svgLeft + $$.currentWidth - $$.getCurrentPaddingRight();\r\n              tooltipTop = mouse[1] + 15;\r\n          }\r\n          if (tooltipRight > chartRight) {\r\n              // 20 is needed for Firefox to keep tooltip width\r\n              tooltipLeft -= tooltipRight - chartRight + 20;\r\n          }\r\n          if (tooltipTop + tHeight > $$.currentHeight) {\r\n              tooltipTop -= tHeight + 30;\r\n          }\r\n      }\r\n      if (tooltipTop < 0) {\r\n          tooltipTop = 0;\r\n      }\r\n      return {\r\n          top: tooltipTop,\r\n          left: tooltipLeft\r\n      };\r\n  };\r\n  ChartInternal.prototype.showTooltip = function (selectedData, element) {\r\n      var $$ = this, config = $$.config;\r\n      var tWidth, tHeight, position;\r\n      var forArc = $$.hasArcType(), dataToShow = selectedData.filter(function (d) {\r\n          return d && isValue(d.value);\r\n      }), positionFunction = config.tooltip_position || ChartInternal.prototype.tooltipPosition;\r\n      if (dataToShow.length === 0 || !config.tooltip_show) {\r\n          $$.hideTooltip();\r\n          return;\r\n      }\r\n      $$.tooltip\r\n          .html(config.tooltip_contents.call($$, selectedData, $$.axis.getXAxisTickFormat(), $$.getYFormat(forArc), $$.color))\r\n          .style('display', 'block');\r\n      // Get tooltip dimensions\r\n      tWidth = $$.tooltip.property('offsetWidth');\r\n      tHeight = $$.tooltip.property('offsetHeight');\r\n      position = positionFunction.call(this, dataToShow, tWidth, tHeight, element);\r\n      // Set tooltip\r\n      $$.tooltip\r\n          .style('top', position.top + 'px')\r\n          .style('left', position.left + 'px');\r\n  };\r\n  ChartInternal.prototype.hideTooltip = function () {\r\n      this.tooltip.style('display', 'none');\r\n  };\n\n  ChartInternal.prototype.setTargetType = function (targetIds, type) {\r\n      var $$ = this, config = $$.config;\r\n      $$.mapToTargetIds(targetIds).forEach(function (id) {\r\n          $$.withoutFadeIn[id] = type === config.data_types[id];\r\n          config.data_types[id] = type;\r\n      });\r\n      if (!targetIds) {\r\n          config.data_type = type;\r\n      }\r\n  };\r\n  ChartInternal.prototype.hasType = function (type, targets) {\r\n      var $$ = this, types = $$.config.data_types, has = false;\r\n      targets = targets || $$.data.targets;\r\n      if (targets && targets.length) {\r\n          targets.forEach(function (target) {\r\n              var t = types[target.id];\r\n              if ((t && t.indexOf(type) >= 0) || (!t && type === 'line')) {\r\n                  has = true;\r\n              }\r\n          });\r\n      }\r\n      else if (Object.keys(types).length) {\r\n          Object.keys(types).forEach(function (id) {\r\n              if (types[id] === type) {\r\n                  has = true;\r\n              }\r\n          });\r\n      }\r\n      else {\r\n          has = $$.config.data_type === type;\r\n      }\r\n      return has;\r\n  };\r\n  ChartInternal.prototype.hasArcType = function (targets) {\r\n      return (this.hasType('pie', targets) ||\r\n          this.hasType('donut', targets) ||\r\n          this.hasType('gauge', targets));\r\n  };\r\n  ChartInternal.prototype.isLineType = function (d) {\r\n      var config = this.config, id = isString(d) ? d : d.id;\r\n      return (!config.data_types[id] ||\r\n          ['line', 'spline', 'area', 'area-spline', 'step', 'area-step'].indexOf(config.data_types[id]) >= 0);\r\n  };\r\n  ChartInternal.prototype.isStepType = function (d) {\r\n      var id = isString(d) ? d : d.id;\r\n      return ['step', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\r\n  };\r\n  ChartInternal.prototype.isSplineType = function (d) {\r\n      var id = isString(d) ? d : d.id;\r\n      return ['spline', 'area-spline'].indexOf(this.config.data_types[id]) >= 0;\r\n  };\r\n  ChartInternal.prototype.isAreaType = function (d) {\r\n      var id = isString(d) ? d : d.id;\r\n      return (['area', 'area-spline', 'area-step'].indexOf(this.config.data_types[id]) >=\r\n          0);\r\n  };\r\n  ChartInternal.prototype.isBarType = function (d) {\r\n      var id = isString(d) ? d : d.id;\r\n      return this.config.data_types[id] === 'bar';\r\n  };\r\n  ChartInternal.prototype.isScatterType = function (d) {\r\n      var id = isString(d) ? d : d.id;\r\n      return this.config.data_types[id] === 'scatter';\r\n  };\r\n  ChartInternal.prototype.isStanfordType = function (d) {\r\n      var id = isString(d) ? d : d.id;\r\n      return this.config.data_types[id] === 'stanford';\r\n  };\r\n  ChartInternal.prototype.isPieType = function (d) {\r\n      var id = isString(d) ? d : d.id;\r\n      return this.config.data_types[id] === 'pie';\r\n  };\r\n  ChartInternal.prototype.isGaugeType = function (d) {\r\n      var id = isString(d) ? d : d.id;\r\n      return this.config.data_types[id] === 'gauge';\r\n  };\r\n  ChartInternal.prototype.isDonutType = function (d) {\r\n      var id = isString(d) ? d : d.id;\r\n      return this.config.data_types[id] === 'donut';\r\n  };\r\n  ChartInternal.prototype.isArcType = function (d) {\r\n      return this.isPieType(d) || this.isDonutType(d) || this.isGaugeType(d);\r\n  };\r\n  ChartInternal.prototype.lineData = function (d) {\r\n      return this.isLineType(d) ? [d] : [];\r\n  };\r\n  ChartInternal.prototype.arcData = function (d) {\r\n      return this.isArcType(d.data) ? [d] : [];\r\n  };\r\n  /* not used\r\n   function scatterData(d) {\r\n   return isScatterType(d) ? d.values : [];\r\n   }\r\n   */\r\n  ChartInternal.prototype.barData = function (d) {\r\n      return this.isBarType(d) ? d.values : [];\r\n  };\r\n  ChartInternal.prototype.lineOrScatterOrStanfordData = function (d) {\r\n      return this.isLineType(d) || this.isScatterType(d) || this.isStanfordType(d)\r\n          ? d.values\r\n          : [];\r\n  };\r\n  ChartInternal.prototype.barOrLineData = function (d) {\r\n      return this.isBarType(d) || this.isLineType(d) ? d.values : [];\r\n  };\n\n  ChartInternal.prototype.isSafari = function () {\r\n      var ua = window.navigator.userAgent;\r\n      return ua.indexOf('Safari') >= 0 && ua.indexOf('Chrome') < 0;\r\n  };\r\n  ChartInternal.prototype.isChrome = function () {\r\n      var ua = window.navigator.userAgent;\r\n      return ua.indexOf('Chrome') >= 0;\r\n  };\n\n  ChartInternal.prototype.initZoom = function () {\r\n      var $$ = this, d3 = $$.d3, config = $$.config, startEvent;\r\n      $$.zoom = d3\r\n          .zoom()\r\n          .on('start', function () {\r\n          if (config.zoom_type !== 'scroll') {\r\n              return;\r\n          }\r\n          var e = d3.event.sourceEvent;\r\n          if (e && e.type === 'brush') {\r\n              return;\r\n          }\r\n          startEvent = e;\r\n          config.zoom_onzoomstart.call($$.api, e);\r\n      })\r\n          .on('zoom', function () {\r\n          if (config.zoom_type !== 'scroll') {\r\n              return;\r\n          }\r\n          var e = d3.event.sourceEvent;\r\n          if (e && e.type === 'brush') {\r\n              return;\r\n          }\r\n          $$.redrawForZoom();\r\n          config.zoom_onzoom.call($$.api, $$.x.orgDomain());\r\n      })\r\n          .on('end', function () {\r\n          if (config.zoom_type !== 'scroll') {\r\n              return;\r\n          }\r\n          var e = d3.event.sourceEvent;\r\n          if (e && e.type === 'brush') {\r\n              return;\r\n          }\r\n          // if click, do nothing. otherwise, click interaction will be canceled.\r\n          if (e &&\r\n              startEvent.clientX === e.clientX &&\r\n              startEvent.clientY === e.clientY) {\r\n              return;\r\n          }\r\n          config.zoom_onzoomend.call($$.api, $$.x.orgDomain());\r\n      });\r\n      $$.zoom.updateDomain = function () {\r\n          if (d3.event && d3.event.transform) {\r\n              if (config.axis_rotated && config.zoom_type === 'scroll' && d3.event.sourceEvent.type === 'mousemove') {\r\n                  // we're moving the mouse in a rotated chart with zoom = \"scroll\", so we need rescaleY (i.e. vertical)\r\n                  $$.x.domain(d3.event.transform.rescaleY($$.subX).domain());\r\n              }\r\n              else {\r\n                  $$.x.domain(d3.event.transform.rescaleX($$.subX).domain());\r\n              }\r\n          }\r\n          return this;\r\n      };\r\n      $$.zoom.updateExtent = function () {\r\n          this.scaleExtent([1, Infinity])\r\n              .translateExtent([\r\n              [0, 0],\r\n              [$$.width, $$.height]\r\n          ])\r\n              .extent([\r\n              [0, 0],\r\n              [$$.width, $$.height]\r\n          ]);\r\n          return this;\r\n      };\r\n      $$.zoom.update = function () {\r\n          return this.updateExtent().updateDomain();\r\n      };\r\n      return $$.zoom.updateExtent();\r\n  };\r\n  ChartInternal.prototype.zoomTransform = function (range) {\r\n      var $$ = this, s = [$$.x(range[0]), $$.x(range[1])];\r\n      return $$.d3.zoomIdentity.scale($$.width / (s[1] - s[0])).translate(-s[0], 0);\r\n  };\r\n  ChartInternal.prototype.initDragZoom = function () {\r\n      var $$ = this;\r\n      var d3 = $$.d3;\r\n      var config = $$.config;\r\n      var context = ($$.context = $$.svg);\r\n      var brushXPos = $$.margin.left + 20.5;\r\n      var brushYPos = $$.margin.top + 0.5;\r\n      if (!(config.zoom_type === 'drag' && config.zoom_enabled)) {\r\n          return;\r\n      }\r\n      var getZoomedDomain = function (selection) {\r\n          return selection && selection.map(function (x) { return $$.x.invert(x); });\r\n      };\r\n      var brush = ($$.dragZoomBrush = d3\r\n          .brushX()\r\n          .on('start', function () {\r\n          $$.api.unzoom();\r\n          $$.svg.select('.' + CLASS.dragZoom).classed('disabled', false);\r\n          config.zoom_onzoomstart.call($$.api, d3.event.sourceEvent);\r\n      })\r\n          .on('brush', function () {\r\n          config.zoom_onzoom.call($$.api, getZoomedDomain(d3.event.selection));\r\n      })\r\n          .on('end', function () {\r\n          if (d3.event.selection == null) {\r\n              return;\r\n          }\r\n          var zoomedDomain = getZoomedDomain(d3.event.selection);\r\n          if (!config.zoom_disableDefaultBehavior) {\r\n              $$.api.zoom(zoomedDomain);\r\n          }\r\n          $$.svg.select('.' + CLASS.dragZoom).classed('disabled', true);\r\n          config.zoom_onzoomend.call($$.api, zoomedDomain);\r\n      }));\r\n      context\r\n          .append('g')\r\n          .classed(CLASS.dragZoom, true)\r\n          .attr('clip-path', $$.clipPath)\r\n          .attr('transform', 'translate(' + brushXPos + ',' + brushYPos + ')')\r\n          .call(brush);\r\n  };\r\n  ChartInternal.prototype.getZoomDomain = function () {\r\n      var $$ = this, config = $$.config, d3 = $$.d3, min = d3.min([$$.orgXDomain[0], config.zoom_x_min]), max = d3.max([$$.orgXDomain[1], config.zoom_x_max]);\r\n      return [min, max];\r\n  };\r\n  ChartInternal.prototype.redrawForZoom = function () {\r\n      var $$ = this, d3 = $$.d3, config = $$.config, zoom = $$.zoom, x = $$.x;\r\n      if (!config.zoom_enabled) {\r\n          return;\r\n      }\r\n      if ($$.filterTargetsToShow($$.data.targets).length === 0) {\r\n          return;\r\n      }\r\n      zoom.update();\r\n      if (config.zoom_disableDefaultBehavior) {\r\n          return;\r\n      }\r\n      if ($$.isCategorized() && x.orgDomain()[0] === $$.orgXDomain[0]) {\r\n          x.domain([$$.orgXDomain[0] - 1e-10, x.orgDomain()[1]]);\r\n      }\r\n      $$.redraw({\r\n          withTransition: false,\r\n          withY: config.zoom_rescale,\r\n          withSubchart: false,\r\n          withEventRect: false,\r\n          withDimension: false\r\n      });\r\n      if (d3.event.sourceEvent && d3.event.sourceEvent.type === 'mousemove') {\r\n          $$.cancelClick = true;\r\n      }\r\n  };\n\n  return c3;\n\n})));\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nexport default function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n","import {map} from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\n\nexport default function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {asin, sqrt} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import adder from \"./adder.js\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","export default function() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","export default function() {\n  return this._root;\n}\n","export {\n  axisTop,\n  axisRight,\n  axisBottom,\n  axisLeft\n} from \"./axis\";\n","export default function() {}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport {cos, halfPi, sin} from \"./math\";\nimport {path} from \"d3-path\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nexport default function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n","export default function(x) {\n  return +x;\n}\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {max, range, tickStep} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {blurX, blurY} from \"./blur\";\nimport constant from \"./constant\";\nimport contours from \"./contours\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nexport default function() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (+x(d, i, data) + o) >> k,\n          yi = (+y(d, i, data) + o) >> k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n","import colors from \"../colors.js\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import {identity} from \"./continuous\";\nimport {initInterpolator} from \"./init\";\nimport {linearish} from \"./linear\";\nimport {loggish} from \"./log\";\nimport {copy} from \"./sequential\";\nimport {symlogish} from \"./symlog\";\nimport {powish} from \"./pow\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      t0,\n      t1,\n      t2,\n      k10,\n      k21,\n      interpolator = identity,\n      transform,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), t2 = transform(x2 = +_[2]), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1);\n    return scale;\n  };\n}\n\nexport default function diverging() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingLog() {\n  var scale = loggish(transformer()).domain([0.1, 1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}\n","export {version} from \"./dist/package.js\";\nexport * from \"d3-array\";\nexport * from \"d3-axis\";\nexport * from \"d3-brush\";\nexport * from \"d3-chord\";\nexport * from \"d3-collection\";\nexport * from \"d3-color\";\nexport * from \"d3-contour\";\nexport * from \"d3-dispatch\";\nexport * from \"d3-drag\";\nexport * from \"d3-dsv\";\nexport * from \"d3-ease\";\nexport * from \"d3-fetch\";\nexport * from \"d3-force\";\nexport * from \"d3-format\";\nexport * from \"d3-geo\";\nexport * from \"d3-hierarchy\";\nexport * from \"d3-interpolate\";\nexport * from \"d3-path\";\nexport * from \"d3-polygon\";\nexport * from \"d3-quadtree\";\nexport * from \"d3-random\";\nexport * from \"d3-scale\";\nexport * from \"d3-scale-chromatic\";\nexport * from \"d3-selection\";\nexport * from \"d3-shape\";\nexport * from \"d3-time\";\nexport * from \"d3-time-format\";\nexport * from \"d3-timer\";\nexport * from \"d3-transition\";\nexport * from \"d3-voronoi\";\nexport * from \"d3-zoom\";\n","export default function(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {map} from \"d3-collection\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.each(function (force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurX(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var j = 0; j < m; ++j) {\n    for (var i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source.data[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source.data[i - w + j * n];\n        }\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurY(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source.data[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source.data[i + (j - w) * n];\n        }\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n","import projection from \"./index.js\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {calendar} from \"./time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond} from \"d3-time\";\nimport {initRange} from \"./init\";\n\nexport default function() {\n  return initRange.apply(calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n","export default function(x) {\n  return x;\n}\n","import constant from \"./constant\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity(domain) {\n  var unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return identity(domain).unknown(unknown);\n  };\n\n  domain = arguments.length ? map.call(domain, number) : [0, 1];\n\n  return linearish(scale);\n}\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { DashboardDTO } from 'src/app/Model/DashboardDTO';\r\nimport { DashboardService } from 'src/app/services/dashboard.service';\r\nimport c3 from 'c3';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor(private _dashboardService:DashboardService) { }\r\n  Dashboard:DashboardDTO;\r\n  overallInfo:any;\r\n  caseRevenuePerMonthDate = new Date();\r\n  ngOnInit(): void {\r\n    this._dashboardService.dashboardObserver$.subscribe(res=>{\r\n      this.Dashboard=res;\r\n    });\r\n    this._dashboardService.GetAnalytics();\r\n    this._dashboardService.overallInfoObserver$.subscribe(res=>{\r\n      this.overallInfo=res;\r\n    });\r\n    this._dashboardService.GetOverAllInfo();\r\n  }\r\n  getRevenuePerMonthData() {\r\n    this._dashboardService.getRevenuePerMonthData(this.caseRevenuePerMonthDate.toISOString()).subscribe(res => {\r\n      this.generateRevenueBarChart(res.dynamicResult);\r\n    });\r\n  }\r\n  generateRevenueBarChart(columns) {\r\n    let columnList = ['Revenue'];\r\n    columnList = columnList.concat(columns);\r\n    const revenue = c3.generate({\r\n      bindto: '#revenue',\r\n      size: {\r\n        // width: 460,\r\n        // height: 260\r\n      },\r\n      data: {\r\n        columns: [\r\n          columnList\r\n        ],\r\n        type: 'bar',\r\n      },\r\n      axis: {\r\n        x: {\r\n          type: 'category',\r\n          categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n        },\r\n\r\n      },\r\n      color: {\r\n        pattern: ['#007aff'],\r\n      },\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"breadcrumbs mb-3\">\r\n    <strong>Dashboard</strong>\r\n</div>\r\n\r\n<div class=\"row home-top-cards\">\r\n    <div class=\"col-xl-3\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body d-flex flex-wrap justify-content-between align-items-start bg-alice-blue\">\r\n                <div class=\"\">\r\n                    <div class=\"text-dark f-13 font-weight-bold\">Today Profit</div>\r\n                    <div class=\"text-dark font-weight-bold font-size-24\">{{Dashboard?.totalProfit}} AED</div>\r\n                    <div class=\"font-size-12 text-default\"> today</div>\r\n                </div>\r\n                <div class=\"\">\r\n                    <img src=\"assets/home/event-icon.svg\" width=\"50px\" alt=\"Icon\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-3\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body d-flex flex-wrap justify-content-between align-items-start bg-alice-blue\">\r\n                <div class=\"\">\r\n                    <div class=\"text-dark f-13 font-weight-bold\">Today Added Sales</div>\r\n                    <div class=\"text-dark font-weight-bold font-size-24\">{{Dashboard?.totalSales}}</div>\r\n                    <div class=\"font-size-12 text-default\">Sales for today</div>\r\n                </div>\r\n                <div class=\"\">\r\n                    <img src=\"assets/home/case-icon.svg\" width=\"50px\" alt=\"Icon\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-3\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body d-flex flex-wrap justify-content-between align-items-start bg-alice-blue\">\r\n                <div class=\"\">\r\n                    <div class=\"text-dark f-13 font-weight-bold\">Today Payable </div>\r\n                    <div class=\"text-dark font-weight-bold font-size-24\">{{Dashboard?.totalPayable}} AED</div>\r\n                    <div class=\"font-size-12 text-default\">today</div>\r\n                </div>\r\n                <div class=\"\">\r\n                    <img src=\"assets/home/deadline-icon.svg\" width=\"50px\" alt=\"Icon\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-3\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body d-flex flex-wrap justify-content-between align-items-start bg-alice-blue\">\r\n                <div class=\"\">\r\n                    <div class=\"text-dark f-13 font-weight-bold\">Today Receviable</div>\r\n                    <div class=\"text-dark font-weight-bold font-size-24\">{{Dashboard?.totalReceviable}} AED</div>\r\n                    <div class=\"font-size-12 text-default\">Receviable for today</div>\r\n                </div>\r\n                <div class=\"\">\r\n                    <img src=\"assets/home/invoice-icon.svg\" width=\"50px\" alt=\"Icon\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-xl-4 col-lg-6 pt-4\">\r\n        <div class=\"bg-white card-body\">\r\n            <div class=\"topRow d-flex align-items-center justify-content-between\">\r\n                <strong>Profit Per Month</strong>\r\n                <nz-date-picker nzMode=\"year\" nzAllowClear=\"false\" [(ngModel)]=\"caseRevenuePerMonthDate\"\r\n                    (ngModelChange)=\"getRevenuePerMonthData()\">\r\n                </nz-date-picker>\r\n            </div>\r\n            <div id=\"revenue\"></div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-4 col-lg-6 pt-4\">\r\n        <div class=\"bg-white card-body\">\r\n            <div class=\"topRow d-flex align-items-center justify-content-between\">\r\n                <strong>Sales Per Month</strong>\r\n                <nz-date-picker nzMode=\"year\" nzAllowClear=\"false\" [(ngModel)]=\"caseRevenuePerMonthDate\"\r\n                    (ngModelChange)=\"getRevenuePerMonthData()\">\r\n                </nz-date-picker>\r\n            </div>\r\n            <div id=\"revenue\"></div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-4 col-lg-6 pt-4\">\r\n        <div class=\"bg-white card-body\">\r\n            <div class=\"topRow d-flex align-items-center justify-content-between\">\r\n                <strong>Expense Per Month</strong>\r\n                <nz-date-picker nzMode=\"year\" nzAllowClear=\"false\" [(ngModel)]=\"caseRevenuePerMonthDate\"\r\n                    (ngModelChange)=\"getRevenuePerMonthData()\">\r\n                </nz-date-picker>\r\n            </div>\r\n            <div id=\"revenue\"></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<div class=\"row home-top-cards\">\r\n    <div class=\"col-xl-3\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body d-flex flex-wrap justify-content-between align-items-start bg-alice-blue\">\r\n                <div class=\"\">\r\n                    <div class=\"text-dark f-13 font-weight-bold\">Yesterday's Profit</div>\r\n                    <div class=\"text-dark font-weight-bold font-size-24\">{{Dashboard?.yesterdaysProfit}} AED</div>\r\n                    <div class=\"font-size-12 text-default\"> yesterday</div>\r\n                </div>\r\n                <div class=\"\">\r\n                    <img src=\"assets/home/event-icon.svg\" width=\"50px\" alt=\"Icon\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-3\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body d-flex flex-wrap justify-content-between align-items-start bg-alice-blue\">\r\n                <div class=\"\">\r\n                    <div class=\"text-dark f-13 font-weight-bold\">Yesterday's Added Sales</div>\r\n                    <div class=\"text-dark font-weight-bold font-size-24\">{{Dashboard?.yesterdaysSales}}</div>\r\n                    <div class=\"font-size-12 text-default\">Sales for yesterday</div>\r\n                </div>\r\n                <div class=\"\">\r\n                    <img src=\"assets/home/case-icon.svg\" width=\"50px\" alt=\"Icon\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-3\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body d-flex flex-wrap justify-content-between align-items-start bg-alice-blue\">\r\n                <div class=\"\">\r\n                    <div class=\"text-dark f-13 font-weight-bold\"> Yesterday's Payable </div>\r\n                    <div class=\"text-dark font-weight-bold font-size-24\">{{Dashboard?.yesterdaysPayable}} AED</div>\r\n                    <div class=\"font-size-12 text-default\">today</div>\r\n                </div>\r\n                <div class=\"\">\r\n                    <img src=\"assets/home/deadline-icon.svg\" width=\"50px\" alt=\"Icon\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-3\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body d-flex flex-wrap justify-content-between align-items-start bg-alice-blue\">\r\n                <div class=\"\">\r\n                    <div class=\"text-dark f-13 font-weight-bold\">Yesterday's Receviable</div>\r\n                    <div class=\"text-dark font-weight-bold font-size-24\">{{Dashboard?.yesterdaysReceviable}} AED</div>\r\n                    <div class=\"font-size-12 text-default\">Receviable for today</div>\r\n                </div>\r\n                <div class=\"\">\r\n                    <img src=\"assets/home/invoice-icon.svg\" width=\"50px\" alt=\"Icon\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<div class=\"row home-page-cards\">\r\n    <div class=\"col-xl-4\">\r\n        <div class=\"card bg-white rounded-0 max-h-310 min-h-250 mb-3\">\r\n            <div class=\"card-header p-3 mb-3\">\r\n                <h6 class=\"mb-0 d-flex align-items-center justify-content-between\">\r\n                    <span class=\"fw-500 f-14\">Brokers Payable</span>\r\n                    <span><a href=\"#/cases\" class=\"f-12 float-right kit__utils__link\">View All</a></span>\r\n                </h6>\r\n            </div>\r\n            <div class=\"card-body py-0 px-3 overflow-auto\">\r\n                <nz-list>\r\n                    <nz-list-item  class=\"fw-500 f-13\" *ngFor=\"let item of overallInfo?.brokers\">\r\n                        <span class=\"firstLastName\"> {{item?.payable}} AED</span>\r\n                        <span class=\"f-12 added-by\"> Payable To\r\n                            <a href=\"javascript:void(0)\" class=\"kit__utils__link\">\r\n                                {{item?.company}}\r\n                            </a> </span>\r\n                    </nz-list-item>\r\n               \r\n                    <!-- <nz-list-empty ></nz-list-empty> -->\r\n                </nz-list>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-4\">\r\n        <div class=\"card bg-white rounded-0 max-h-310 min-h-250 mb-3\">\r\n            <div class=\"card-header p-3 mb-3\">\r\n                <h6 class=\"mb-0 d-flex align-items-center justify-content-between\">\r\n                    <span class=\"fw-500 f-14\"> Agent Receviable </span>\r\n                    <span><a href=\"#/cases\" class=\"f-12 float-right kit__utils__link\">View All</a></span>\r\n                </h6>\r\n            </div>\r\n            <div class=\"card-body py-0 px-3 overflow-auto\">\r\n                <nz-list>\r\n                    <nz-list-item  class=\"fw-500 f-13\" *ngFor=\"let item of overallInfo?.agents\">\r\n                        <span class=\"firstLastName\">{{item.receving}} AED </span>\r\n                        <span class=\"f-12 added-by\"> Receivable from\r\n                            <a href=\"javascript:void(0)\" class=\"kit__utils__link\">\r\n                                {{item.agent}}\r\n                            </a> </span>\r\n                    </nz-list-item>\r\n                 \r\n                    <!-- <nz-list-empty ></nz-list-empty> -->\r\n                </nz-list>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-xl-4\">\r\n        <div class=\"card bg-white rounded-0 max-h-310 min-h-250 mb-3\">\r\n            <div class=\"card-header p-3 mb-3\">\r\n                <h6 class=\"mb-0 d-flex align-items-center justify-content-between\">\r\n                    <span class=\"fw-500 f-14\">Banks</span>\r\n                    <span><a href=\"#/cases\" class=\"f-12 float-right kit__utils__link\">View All</a></span>\r\n                </h6>\r\n            </div>\r\n            <div class=\"card-body py-0 px-3 overflow-auto\">\r\n                <nz-list>\r\n                    <nz-list-item  class=\"fw-500 f-13\" *ngFor=\"let item of overallInfo?.banks\">\r\n                        <span class=\"firstLastName\">{{item?.amount}} AED </span>\r\n                        <span class=\"f-12 added-by\"> Balance from\r\n                            <a href=\"javascript:void(0)\" class=\"kit__utils__link\">\r\n                                {{item?.bankName}}\r\n                            </a> </span>\r\n                    </nz-list-item>\r\n                \r\n                   \r\n                    <!-- <nz-list-empty ></nz-list-empty> -->\r\n                </nz-list>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-xl-4 col-lg-6 pt-4\">\r\n        <div class=\"bg-white card-body\">\r\n            <div class=\"topRow d-flex align-items-center justify-content-between\">\r\n                <strong>Profit Per Month</strong>\r\n                <nz-date-picker nzMode=\"year\" nzAllowClear=\"false\" [(ngModel)]=\"caseRevenuePerMonthDate\"\r\n                    (ngModelChange)=\"getRevenuePerMonthData()\">\r\n                </nz-date-picker>\r\n            </div>\r\n            <div id=\"revenue\"></div>\r\n        </div>\r\n    </div>\r\n    \r\n</div>\r\n","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\n\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n","function responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67)))))))\n      + \")\";\n}\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {atan, exp, halfPi, log, tan} from \"../math.js\";\nimport {mercatorProjection} from \"./mercator.js\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\nimport {x, y} from \"./simulation\";\n\nexport default function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {epsilon} from \"../math.js\";\nimport albers from \"./albers.js\";\nimport conicEqualArea from \"./conicEqualArea.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n","export {default as voronoi} from \"./voronoi\";\n","import {degrees, pi, radians} from \"../math.js\";\nimport {projectionMutator} from \"./index.js\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import clipRectangle from \"../clip/rectangle.js\";\nimport identity from \"../identity.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport {cos, degrees, radians, sin} from \"../math.js\";\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect\n      alpha = 0, ca, sa, // angle\n      x0 = null, y0, x1, y1, // clip extent\n      kx = 1, ky = 1,\n      transform = transformer({\n        point: function(x, y) {\n          var p = projection([x, y])\n          this.stream.point(p[0], p[1]);\n        }\n      }),\n      postclip = identity,\n      cache,\n      cacheStream;\n\n  function reset() {\n    kx = k * sx;\n    ky = k * sy;\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  function projection (p) {\n    var x = p[0] * kx, y = p[1] * ky;\n    if (alpha) {\n      var t = y * ca - x * sa;\n      x = x * ca + y * sa;\n      y = t;\n    }    \n    return [x + tx, y + ty];\n  }\n  projection.invert = function(p) {\n    var x = p[0] - tx, y = p[1] - ty;\n    if (alpha) {\n      var t = y * ca + x * sa;\n      x = x * ca - y * sa;\n      y = t;\n    }\n    return [x / kx, y / ky];\n  };\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n  };\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, reset()) : k;\n  };\n  projection.translate = function(_) {\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n  }\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, sa = sin(alpha), ca = cos(alpha), reset()) : alpha * degrees;\n  };\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n  };\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n  };\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  return projection;\n}\n","export {default as nest} from \"./nest\";\nexport {default as set} from \"./set\";\nexport {default as map} from \"./map\";\nexport {default as keys} from \"./keys\";\nexport {default as values} from \"./values\";\nexport {default as entries} from \"./entries\";\n","import constant from \"./constant\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\n\r\nconst routes: Routes = [{\r\n  path:'',\r\n  component:DashboardComponent\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule { }\r\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n","import cross from \"./cross.js\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n","import adder from \"./adder.js\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","export {default as quadtree} from \"./quadtree.js\";\n","import colors from \"../colors.js\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import {extent, thresholdSturges, tickStep, range} from \"d3-array\";\nimport {slice} from \"./array\";\nimport ascending from \"./ascending\";\nimport area from \"./area\";\nimport constant from \"./constant\";\nimport contains from \"./contains\";\nimport noop from \"./noop\";\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      threshold = thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = extent(values), start = domain[0], stop = domain[1];\n      tz = tickStep(start, stop, tz);\n      tz = range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n","import colors from \"../colors.js\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\nimport {initRange} from \"./init\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal() {\n  var index = map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","export default function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy, identity} from \"./continuous\";\nimport {initRange} from \"./init\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(identity, identity);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport ZoomEvent from \"./event.js\";\nimport {Transform, identity} from \"./transform.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    if (e.hasAttribute(\"viewBox\")) {\n      e = e.viewBox.baseVal;\n      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];\n    }\n    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];\n  }\n  return [[0, 0], [e.clientWidth, e.clientHeight]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002);\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform, point) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform, point);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k, p) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    }, p);\n  };\n\n  zoom.scaleTo = function(selection, k, p) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p,\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    }, p);\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y, p) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p;\n      return constrain(identity.translate(p0[0], p0[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    }, p);\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, point) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = point == null ? centroid(e) : typeof point === \"function\" ? point.apply(that, args) : point,\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args, clean) {\n    return (!clean && that.__zooming) || new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n    this.taps = 0;\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.that.__zooming = this;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        delete this.that.__zooming;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments, true),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.touches,\n        n = touches.length,\n        g = gesture(this, arguments, event.changedTouches.length === n),\n        started, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;\n      else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;\n    }\n\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\n    if (started) {\n      if (g.taps < 2) touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    if (!this.__zooming) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    g.taps = 0;\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    if (!this.__zooming) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else {\n      g.end();\n      // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.\n      if (g.taps === 2) {\n        var p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n      }\n    }\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter : \"M0.5,\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",0.5H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import conicEqualArea from \"./conicEqualArea.js\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","export default function(x) {\n  return x;\n}\n","import dsv from \"./dsv.js\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\nexport var csvFormatRow = csv.formatRow;\nexport var csvFormatValue = csv.formatValue;\n","function responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n","import {linearish} from \"./linear\";\nimport {copy, transformer} from \"./continuous\";\nimport {initRange} from \"./init\";\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nexport function symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nexport default function symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export default function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","export default function noop() {}\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {initRange} from \"./init\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","export {default as geoArea} from \"./area.js\";\nexport {default as geoBounds} from \"./bounds.js\";\nexport {default as geoCentroid} from \"./centroid.js\";\nexport {default as geoCircle} from \"./circle.js\";\nexport {default as geoClipAntimeridian} from \"./clip/antimeridian.js\";\nexport {default as geoClipCircle} from \"./clip/circle.js\";\nexport {default as geoClipExtent} from \"./clip/extent.js\"; // DEPRECATED! Use d3.geoIdentity().clipExtent(…).\nexport {default as geoClipRectangle} from \"./clip/rectangle.js\";\nexport {default as geoContains} from \"./contains.js\";\nexport {default as geoDistance} from \"./distance.js\";\nexport {default as geoGraticule, graticule10 as geoGraticule10} from \"./graticule.js\";\nexport {default as geoInterpolate} from \"./interpolate.js\";\nexport {default as geoLength} from \"./length.js\";\nexport {default as geoPath} from \"./path/index.js\";\nexport {default as geoAlbers} from \"./projection/albers.js\";\nexport {default as geoAlbersUsa} from \"./projection/albersUsa.js\";\nexport {default as geoAzimuthalEqualArea, azimuthalEqualAreaRaw as geoAzimuthalEqualAreaRaw} from \"./projection/azimuthalEqualArea.js\";\nexport {default as geoAzimuthalEquidistant, azimuthalEquidistantRaw as geoAzimuthalEquidistantRaw} from \"./projection/azimuthalEquidistant.js\";\nexport {default as geoConicConformal, conicConformalRaw as geoConicConformalRaw} from \"./projection/conicConformal.js\";\nexport {default as geoConicEqualArea, conicEqualAreaRaw as geoConicEqualAreaRaw} from \"./projection/conicEqualArea.js\";\nexport {default as geoConicEquidistant, conicEquidistantRaw as geoConicEquidistantRaw} from \"./projection/conicEquidistant.js\";\nexport {default as geoEqualEarth, equalEarthRaw as geoEqualEarthRaw} from \"./projection/equalEarth.js\";\nexport {default as geoEquirectangular, equirectangularRaw as geoEquirectangularRaw} from \"./projection/equirectangular.js\";\nexport {default as geoGnomonic, gnomonicRaw as geoGnomonicRaw} from \"./projection/gnomonic.js\";\nexport {default as geoIdentity} from \"./projection/identity.js\";\nexport {default as geoProjection, projectionMutator as geoProjectionMutator} from \"./projection/index.js\";\nexport {default as geoMercator, mercatorRaw as geoMercatorRaw} from \"./projection/mercator.js\";\nexport {default as geoNaturalEarth1, naturalEarth1Raw as geoNaturalEarth1Raw} from \"./projection/naturalEarth1.js\";\nexport {default as geoOrthographic, orthographicRaw as geoOrthographicRaw} from \"./projection/orthographic.js\";\nexport {default as geoStereographic, stereographicRaw as geoStereographicRaw} from \"./projection/stereographic.js\";\nexport {default as geoTransverseMercator, transverseMercatorRaw as geoTransverseMercatorRaw} from \"./projection/transverseMercator.js\";\nexport {default as geoRotation} from \"./rotation.js\";\nexport {default as geoStream} from \"./stream.js\";\nexport {default as geoTransform} from \"./transform.js\";\n","import {abs, asin, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  if (response.status === 204 || response.status === 205) return;\n  return response.json();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n","export {default as schemeCategory10} from \"./categorical/category10.js\";\nexport {default as schemeAccent} from \"./categorical/Accent.js\";\nexport {default as schemeDark2} from \"./categorical/Dark2.js\";\nexport {default as schemePaired} from \"./categorical/Paired.js\";\nexport {default as schemePastel1} from \"./categorical/Pastel1.js\";\nexport {default as schemePastel2} from \"./categorical/Pastel2.js\";\nexport {default as schemeSet1} from \"./categorical/Set1.js\";\nexport {default as schemeSet2} from \"./categorical/Set2.js\";\nexport {default as schemeSet3} from \"./categorical/Set3.js\";\nexport {default as schemeTableau10} from \"./categorical/Tableau10.js\";\nexport {default as interpolateBrBG, scheme as schemeBrBG} from \"./diverging/BrBG.js\";\nexport {default as interpolatePRGn, scheme as schemePRGn} from \"./diverging/PRGn.js\";\nexport {default as interpolatePiYG, scheme as schemePiYG} from \"./diverging/PiYG.js\";\nexport {default as interpolatePuOr, scheme as schemePuOr} from \"./diverging/PuOr.js\";\nexport {default as interpolateRdBu, scheme as schemeRdBu} from \"./diverging/RdBu.js\";\nexport {default as interpolateRdGy, scheme as schemeRdGy} from \"./diverging/RdGy.js\";\nexport {default as interpolateRdYlBu, scheme as schemeRdYlBu} from \"./diverging/RdYlBu.js\";\nexport {default as interpolateRdYlGn, scheme as schemeRdYlGn} from \"./diverging/RdYlGn.js\";\nexport {default as interpolateSpectral, scheme as schemeSpectral} from \"./diverging/Spectral.js\";\nexport {default as interpolateBuGn, scheme as schemeBuGn} from \"./sequential-multi/BuGn.js\";\nexport {default as interpolateBuPu, scheme as schemeBuPu} from \"./sequential-multi/BuPu.js\";\nexport {default as interpolateGnBu, scheme as schemeGnBu} from \"./sequential-multi/GnBu.js\";\nexport {default as interpolateOrRd, scheme as schemeOrRd} from \"./sequential-multi/OrRd.js\";\nexport {default as interpolatePuBuGn, scheme as schemePuBuGn} from \"./sequential-multi/PuBuGn.js\";\nexport {default as interpolatePuBu, scheme as schemePuBu} from \"./sequential-multi/PuBu.js\";\nexport {default as interpolatePuRd, scheme as schemePuRd} from \"./sequential-multi/PuRd.js\";\nexport {default as interpolateRdPu, scheme as schemeRdPu} from \"./sequential-multi/RdPu.js\";\nexport {default as interpolateYlGnBu, scheme as schemeYlGnBu} from \"./sequential-multi/YlGnBu.js\";\nexport {default as interpolateYlGn, scheme as schemeYlGn} from \"./sequential-multi/YlGn.js\";\nexport {default as interpolateYlOrBr, scheme as schemeYlOrBr} from \"./sequential-multi/YlOrBr.js\";\nexport {default as interpolateYlOrRd, scheme as schemeYlOrRd} from \"./sequential-multi/YlOrRd.js\";\nexport {default as interpolateBlues, scheme as schemeBlues} from \"./sequential-single/Blues.js\";\nexport {default as interpolateGreens, scheme as schemeGreens} from \"./sequential-single/Greens.js\";\nexport {default as interpolateGreys, scheme as schemeGreys} from \"./sequential-single/Greys.js\";\nexport {default as interpolatePurples, scheme as schemePurples} from \"./sequential-single/Purples.js\";\nexport {default as interpolateReds, scheme as schemeReds} from \"./sequential-single/Reds.js\";\nexport {default as interpolateOranges, scheme as schemeOranges} from \"./sequential-single/Oranges.js\";\nexport {default as interpolateCividis} from \"./sequential-multi/cividis.js\";\nexport {default as interpolateCubehelixDefault} from \"./sequential-multi/cubehelix.js\";\nexport {default as interpolateRainbow, warm as interpolateWarm, cool as interpolateCool} from \"./sequential-multi/rainbow.js\";\nexport {default as interpolateSinebow} from \"./sequential-multi/sinebow.js\";\nexport {default as interpolateTurbo} from \"./sequential-multi/turbo.js\";\nexport {default as interpolateViridis, magma as interpolateMagma, inferno as interpolateInferno, plasma as interpolatePlasma} from \"./sequential-multi/viridis.js\";\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n","import adder from \"../adder.js\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import length from \"./length.js\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import ascending from \"./ascending\";\n\nexport default function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n","export default function autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(), number, m;\n    if (!value) value = null;\n    else if (value === \"true\") value = true;\n    else if (value === \"false\") value = false;\n    else if (value === \"NaN\") value = NaN;\n    else if (!isNaN(number = +value)) value = number;\n    else if (m = value.match(/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/)) {\n      if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, \"/\").replace(/T/, \" \");\n      value = new Date(value);\n    }\n    else continue;\n    object[key] = value;\n  }\n  return object;\n}\n\n// https://github.com/d3/d3-dsv/issues/45\nvar fixtz = new Date(\"2019-01-01T00:00\").getHours() || new Date(\"2019-07-01T00:00\").getHours();","export {default as bisect, bisectRight, bisectLeft} from \"./bisect\";\nexport {default as ascending} from \"./ascending\";\nexport {default as bisector} from \"./bisector\";\nexport {default as cross} from \"./cross\";\nexport {default as descending} from \"./descending\";\nexport {default as deviation} from \"./deviation\";\nexport {default as extent} from \"./extent\";\nexport {default as histogram} from \"./histogram\";\nexport {default as thresholdFreedmanDiaconis} from \"./threshold/freedmanDiaconis\";\nexport {default as thresholdScott} from \"./threshold/scott\";\nexport {default as thresholdSturges} from \"./threshold/sturges\";\nexport {default as max} from \"./max\";\nexport {default as mean} from \"./mean\";\nexport {default as median} from \"./median\";\nexport {default as merge} from \"./merge\";\nexport {default as min} from \"./min\";\nexport {default as pairs} from \"./pairs\";\nexport {default as permute} from \"./permute\";\nexport {default as quantile} from \"./quantile\";\nexport {default as range} from \"./range\";\nexport {default as scan} from \"./scan\";\nexport {default as shuffle} from \"./shuffle\";\nexport {default as sum} from \"./sum\";\nexport {default as ticks, tickIncrement, tickStep} from \"./ticks\";\nexport {default as transpose} from \"./transpose\";\nexport {default as variance} from \"./variance\";\nexport {default as zip} from \"./zip\";\n","import colors from \"../colors.js\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","export {default as blob} from \"./blob.js\";\nexport {default as buffer} from \"./buffer.js\";\nexport {default as dsv, csv, tsv} from \"./dsv.js\";\nexport {default as image} from \"./image.js\";\nexport {default as json} from \"./json.js\";\nexport {default as text} from \"./text.js\";\nexport {default as xml, html, svg} from \"./xml.js\";\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","export default function(a, b) {\n  return a - b;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","export {default as polygonArea} from \"./area.js\";\nexport {default as polygonCentroid} from \"./centroid.js\";\nexport {default as polygonHull} from \"./hull.js\";\nexport {default as polygonContains} from \"./contains.js\";\nexport {default as polygonLength} from \"./length.js\";\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import {ascending, bisect} from \"d3-array\";\nimport {identity} from \"./continuous\";\nimport {initInterpolator} from \"./init\";\n\nexport default function sequentialQuantile() {\n  var domain = [],\n      interpolator = identity;\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return interpolator((bisect(domain, x) - 1) / (domain.length - 1));\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return scale;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequentialQuantile(interpolator).domain(domain);\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","export default function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n","import {asin, cos, sin} from \"../math.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","export default function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n","import colors from \"../colors.js\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","export default function(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66)))))))\n      + \")\";\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","export default function(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n","import colors from \"../colors.js\";\n\nexport default colors(\"4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab\");\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {abs, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {equirectangularRaw} from \"./equirectangular.js\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y,\n        l = atan2(x, abs(gy)) * sign(gy);\n    if (gy * n < 0)\n      l -= pi * sign(x) * sign(gy);\n    return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","export {default as contours} from \"./contours\";\nexport {default as contourDensity} from \"./density\";\n","import adder from \"./adder.js\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n"],"sourceRoot":"webpack:///"}