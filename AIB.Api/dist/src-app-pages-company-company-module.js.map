{"version":3,"sources":["./src/app/pages/company/company-routing.module.ts","./src/app/pages/company/view-company/view-company.component.ts","./src/app/pages/company/view-company/view-company.component.html","./src/app/pages/company/detailview-company/detailview-company.component.ts","./src/app/pages/company/detailview-company/detailview-company.component.html","./src/app/Model/BaseEntity.ts","./src/app/services/company/company.service.ts","./src/app/pages/company/company.module.ts","./src/app/Model/Company.ts"],"names":[],"mappings":"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","file":"src-app-pages-company-company-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ViewCompanyComponent } from './view-company/view-company.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component:ViewCompanyComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CompanyRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { Company } from 'src/app/Model/Company';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\nimport { CompanyService } from 'src/app/services/company/company.service';\r\n\r\n@Component({\r\n  selector: 'app-view-company',\r\n  templateUrl: './view-company.component.html',\r\n  styleUrls: ['./view-company.component.css']\r\n})\r\nexport class ViewCompanyComponent implements OnInit {\r\n\r\n  search:string;\r\n  isVisible=false;\r\n  listData:Company[]=[];\r\n  modalTitle=\"Create new Broker\";\r\n  companyObserverSubject:Subject<Company> = new Subject();\r\n  contactSubject:Subscription;\r\n  checked=false;\r\n  showCompany=false;\r\n  company= new Company();\r\n  constructor( private _companyService:CompanyService,\r\n    private _notification:AlertService) { }\r\n\r\n  ngOnInit(): void {\r\n    this._companyService.companyObserver$.subscribe(res=>{\r\n      if(res)\r\n        this.listData=res;\r\n      this.isVisible=false;\r\n    });\r\n    this._companyService.GetCompanies();\r\n  }\r\n\r\n  // ngOnDestroy()\r\n  // {\r\n  //   this.contactSubject.unsubscribe();\r\n  // }\r\n  handleModalOpen()\r\n  {\r\n    this.isVisible=true;\r\n    this.modalTitle=\"New Broker\";\r\n    this.companyObserverSubject.next(null);\r\n    this.showCompany=false;\r\n  }\r\n  handleCancel()\r\n  {\r\n    this.isVisible=false;\r\n    this.showCompany=false;\r\n  }\r\n  handleEdit(data:Company)\r\n  {\r\n    this.modalTitle=\"Edit Broker\";\r\n    this.isVisible=true;\r\n    this.showCompany=false;\r\n    this.companyObserverSubject.next(data);\r\n  }\r\n  showSingleCompany(data:Company)\r\n  {\r\n    this.company=data;\r\n    this.showCompany=true;\r\n  }\r\n  DeleteCompany(data:Company){ \r\n    this._notification.delete().then(result=>{\r\n      if(result.isConfirmed){\r\n        this._companyService.DeleteCompany(data.id).subscribe(res=>{\r\n          if(res.isSuccessfull){\r\n            this._companyService.GetCompanies();\r\n            this._notification.success('Broker Deleted Successfully!')\r\n          }\r\n          else{\r\n            this._notification.error('Error while deleting Broker!');\r\n          }\r\n        });\r\n\r\n      }\r\n      else{\r\n        return;\r\n      }\r\n    });\r\n    this.showCompany=false;\r\n  }\r\n  \r\n}\r\n","<div class=\"breadcrumbs mb-3\">\r\n    <strong>Broker</strong>\r\n</div>\r\n<div>\r\n    <div class=\"row mb-4\">\r\n        <div class=\"col-xl-10\">\r\n            <div class=\"w-25\">\r\n                <!-- <nz-input-group nzSize=\"large\" [nzPrefix]=\"suffixIconSearch\">\r\n                    <input type=\"text\" nz-input [(ngModel)]=\"search\" placeholder=\"Search for Brokers\" />\r\n                </nz-input-group>\r\n                <ng-template #suffixIconSearch>\r\n                    <i nz-icon nzType=\"search\"></i>\r\n                </ng-template> -->\r\n            </div>\r\n        </div>\r\n        <div class=\"col-xl-2 \">\r\n            <a nz-button class=\"float-right\" nzType=\"primary\" (click)=\"handleModalOpen()\">Add Broker</a>\r\n        </div>\r\n        <div nz-col [nzSpan]=\"24\">\r\n            <nz-table nzSize=\"middle\" #rowSelectionTable [nzData]=\"listData\" [nzNoResult]=\"noData\">\r\n            \r\n                <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>#</th>\r\n                    <th>Id</th>\r\n                    <th>Broker Name</th>\r\n                    <th>Created Date</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let data of listData; let i=index\"  (click)=\"showSingleCompany(data)\"\r\n                    nzTooltipTitle=\"Click to View Broker\" style=\"cursor: pointer;\">\r\n                        <td></td>\r\n                        <td>{{i+1}}</td>\r\n                        <td>{{data.id}}</td>\r\n                        <td>{{data.name}}</td>\r\n                        <td>{{data.createTime | date}}</td>\r\n                        <td>\r\n                            <i nz-icon nzType=\"edit\" nz-tooltip nzTooltipTitle=\"Edit Broker\" nzTheme=\"fill\"\r\n                            (click)=\"$event.stopPropagation(handleEdit(data))\"\r\n                           class=\"text-success\" >\r\n                            </i>\r\n                            <nz-divider nzType=\"vertical\"></nz-divider>\r\n                            <i nz-icon nzType=\"delete\" nz-tooltip nzTooltipTitle=\"Delete Broker\" nzTheme=\"fill\"\r\n                            (click)=\"$event.stopPropagation(DeleteCompany(data))\"\r\n                           class=\"text-success\" >\r\n                            </i>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </nz-table>\r\n        </div>\r\n\r\n    </div>\r\n</div>  \r\n\r\n<ng-template #noData>\r\n<nz-empty class=\"m-5\" [nzNotFoundImage]=\"'assets/images/no-data/no-company.svg'\" \r\n[nzNotFoundContent]=\"noDescrip\">\r\n</nz-empty>\r\n</ng-template>\r\n\r\n<ng-template #noDescrip>\r\n    <div class=\"m-4\">\r\n        No Data Available\r\n        <a class=\"kit__utils__link\">\r\n            Create new Broker\r\n        </a>\r\n    </div>\r\n</ng-template>\r\n\r\n<div>\r\n    <nz-modal nzFooter=\"null\" nzWidth=\"30%\" [(nzVisible)]=\"isVisible\" [nzTitle]=\"modalTitle\"\r\n    (nzOnCancel)=\"handleCancel()\" nzMaskClosable=\"false\" >\r\n    <app-detailview-company [companyDataSubject]=\"companyObserverSubject\"></app-detailview-company>\r\n    </nz-modal>\r\n</div>\r\n\r\n<div>\r\n    <nz-modal nzFooter=\"null\" nzWidth=\"700\" [(nzVisible)]=\"showCompany\" \r\n        [nzTitle]=\"'BrokerInfo'\" nzMaskClosable=\"false\"\r\n         (nzOnCancel)=\"showCompany=false\">\r\n        \r\n         <div>\r\n             <div class=\"row\">\r\n                <div class=\"popup-action-btns\">\r\n                    <i nz-icon nzType=\"edit\" nz-tooltip nzTooltipTitle=\"Edit Broker\" nzTheme=\"fill\"\r\n                    (click)=\"$event.stopPropagation(handleEdit(company))\"\r\n                   class=\"text-success\" >\r\n                    </i>\r\n                    <i nz-icon nzType=\"delete\" nz-tooltip nzTooltipTitle=\"Delete Broker\" nzTheme=\"fill\"\r\n                    (click)=\"$event.stopPropagation(DeleteCompany(company))\"\r\n                   class=\"text-success\" >\r\n                    </i>\r\n\r\n                </div>\r\n                <div class=\"col-xl-12 p-4\">\r\n                    <div class=\"card-body\">\r\n                      <div class=\"row mb-3\">\r\n                        <div class=\"col-xl-5 mb-4 offset-sm-1\">\r\n                          <div class=\"t-10 text-gray-5\">Broker Name</div>\r\n                           <div>{{company.name}}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n             </div>\r\n         </div>\r\n    </nz-modal>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { Company } from 'src/app/Model/Company';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\nimport { CompanyService } from 'src/app/services/company/company.service';\r\n\r\n@Component({\r\n  selector: 'app-detailview-company',\r\n  templateUrl: './detailview-company.component.html',\r\n  styleUrls: ['./detailview-company.component.css']\r\n})\r\nexport class DetailviewCompanyComponent implements OnInit {\r\n  @Input() companyDataSubject:Subject<Company>;\r\n\r\n  form:FormGroup;\r\n  companyId:number;\r\n  isEditMode=false;\r\n  loading=false;\r\n\r\n  constructor(private fb:FormBuilder,\r\n    private _notification:AlertService,\r\n    private _companyService:CompanyService\r\n    ) {\r\n    this.form=fb.group({\r\n      name:[null,[Validators.required]],\r\n      openingBalance:[null,[Validators.required]],\r\n    });\r\n   }\r\n\r\n   public get f() {return this.form.controls}\r\n  ngOnInit(): void {\r\n    this.companyDataSubject.subscribe(res=>{\r\n      if(res)\r\n      {\r\n        this.form.patchValue(res);\r\n        this.companyId=res.id;\r\n        this.isEditMode=true;\r\n      }\r\n      else\r\n        {\r\n          this.form.reset();\r\n          this.companyId=null;\r\n          this.isEditMode=false;\r\n        }\r\n    });\r\n  }\r\n  handleSubmit(){\r\n\r\n    if(this.form.invalid){\r\n      return\r\n    }\r\n    this.loading=true;\r\n    let data = this.form.value as Company;\r\n    if(this.isEditMode){\r\n      data.id=this.companyId;\r\n      this._companyService.UpdateCompany(data).subscribe(res=>{\r\n        this.loading=false;\r\n        if(res.isSuccessfull){\r\n          this._companyService.GetCompanies();\r\n          this._notification.success('Broker Updated Successfully!');\r\n        }\r\n        else{\r\n          this._notification.error('Error while updating Broker!')\r\n        }\r\n      }); \r\n\r\n    }\r\n    else{\r\n      this.loading=false;\r\n      this._companyService.SaveCompanies(data).subscribe(res=>{\r\n        if(res.isSuccessfull){\r\n          this._companyService.GetCompanies();\r\n          this._notification.success('Broker Saved Successfully!');\r\n        }\r\n        else{\r\n          this._notification.error('Error while saving Broker!');\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n  resetForm()\r\n  {\r\n    this.form.setValue({\r\n      name:null\r\n    });\r\n  }\r\n\r\n}\r\n\r\n","<div nz-row>\r\n    <div nz-col [nzSpan]=\"24\"> \r\n        <form [formGroup]=\"form\">\r\n            <mat-form-field class=\"col-xl-12 mb-2\">\r\n                <mat-label>Broker Name</mat-label>\r\n                <input matInput formControlName=\"name\">\r\n                <mat-error *ngIf=\"f.name.hasError('required')\">\r\n                    Broker Name is required\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"col-xl-12 mb-2\">\r\n                <mat-label>Opening Balance</mat-label>\r\n                <input matInput formControlName=\"openingBalance\">\r\n                <mat-error *ngIf=\"f.openingBalance.hasError('required')\">\r\n                  Opening Balance is required\r\n                </mat-error> \r\n            </mat-form-field>\r\n            <div class=\"form-group text-center mt-4\">\r\n                <button type=\"submit\" nz-button nzType=\"primary\" [nzLoading]=\"loading\" (click)=\"handleSubmit()\">\r\n                    {{isEditMode?'Update Broker':'Add Broker'}}\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>    ","export class BaseEntity<TKey>{\r\n    id:TKey;\r\n    createUserId?:string;\r\n    createTime?:Date;\r\n    editUserId?:string;\r\n    editTime?:string;\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Company } from 'src/app/Model/Company';\r\nimport { API_ENDPOINTS, API_URL } from 'src/app/Model/Global';\r\nimport { StatementRequestDTO } from 'src/app/Model/StatemenReqDTO';\r\nimport { DownloadWithData, MasterStatement, Statement } from 'src/app/Model/Statement';\r\nimport { BaseApiHandlerService } from '../base-api-handler.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompanyService extends BaseApiHandlerService {\r\n\r\n  companyObserver$:Observable<Company[]>;\r\n  statementObserver$:Observable<DownloadWithData>;\r\n  private companySubject$: BehaviorSubject<Company[]> = new BehaviorSubject<Company[]>(undefined);\r\n  private statementSubject$: BehaviorSubject<DownloadWithData> = new BehaviorSubject<DownloadWithData>(undefined);\r\n\r\n  public get companies() {return this.companySubject$.value;}\r\n  constructor(private http:HttpClient)\r\n  {\r\n    super(http)\r\n    this.companyObserver$=this.companySubject$.asObservable();\r\n    this.statementObserver$=this.statementSubject$.asObservable();\r\n  }\r\n\r\n  // GetBrokerStatement(companyId)\r\n  // {\r\n  //   console.log('chal rha')\r\n  //   return this.GetAll(API_URL+API_ENDPOINTS.Transaction+`/GetBrokerStatement?companyId=${companyId}`).subscribe(res=>{\r\n  //     this.statementSubject$.next(res.dynamicResult);\r\n  //   });\r\n  // }\r\n\r\n  GetBrokerStatement(req:StatementRequestDTO)\r\n  {\r\n    console.log('chal rha')\r\n    return this.Post(req,API_URL+API_ENDPOINTS.Transaction+`/GetBrokerStatement`).subscribe(res=>{\r\n      this.statementSubject$.next(res.dynamicResult);\r\n    });\r\n  }\r\n  GetAgentStatement(req:StatementRequestDTO)\r\n  {\r\n    console.log('chal rha')\r\n    return this.Post(req,API_URL+API_ENDPOINTS.Transaction+`/GetAgentStatement`).subscribe(res=>{\r\n      this.statementSubject$.next(res.dynamicResult);\r\n    });\r\n  }\r\n  GetBankStatement(req:StatementRequestDTO)\r\n  {\r\n    return this.Post(req,API_URL+API_ENDPOINTS.Transaction+`/GetBankStatement`).subscribe(res=>{\r\n      this.statementSubject$.next(res.dynamicResult);\r\n    });\r\n  }\r\n\r\n  SaveCompanies(data)\r\n  {\r\n    return this.Post(data,API_URL+API_ENDPOINTS.Company);\r\n  }\r\n  UpdateCompany(data:Company)\r\n  {\r\n    return this.Update(data.id,data,API_URL+API_ENDPOINTS.Company)\r\n  }\r\n  GetCompanies()\r\n  {\r\n    return this.GetAll(API_URL+API_ENDPOINTS.Company).subscribe(res=>{\r\n      this.companySubject$.next(res.dynamicResult);\r\n    });\r\n  }\r\n\r\n  DeleteCompany(id)\r\n  {\r\n    return this.Delete(id,API_URL+API_ENDPOINTS.Company);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CompanyRoutingModule } from './company-routing.module';\r\nimport { DetailviewCompanyComponent } from './detailview-company/detailview-company.component';\r\nimport { ViewCompanyComponent } from './view-company/view-company.component';\r\nimport { AntdModule } from 'src/app/antd/antd.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [DetailviewCompanyComponent, ViewCompanyComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CompanyRoutingModule,\r\n    AntdModule,\r\n    SharedModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class CompanyModule { }\r\n","import { BaseEntity } from \"./BaseEntity\";\r\nimport { Outstandings } from \"./Outstandings\";\r\nimport { Transactions } from \"./Transactions\";\r\n\r\nexport class Company extends BaseEntity<number>{\r\n   \r\n    name: string;\r\n    openingBalance:number;\r\n    transaction?:Transactions[];\r\n    outstanding?:Outstandings[];\r\n}"],"sourceRoot":"webpack:///"}