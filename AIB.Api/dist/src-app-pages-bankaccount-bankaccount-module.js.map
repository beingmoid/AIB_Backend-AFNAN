{"version":3,"sources":["./src/app/pages/bankaccount/bankaccount-routing.module.ts","./src/app/pages/bankaccount/bankaccount.module.ts","./src/app/services/BankAccounts/bankaccounts.service.ts","./src/app/Model/BankAccount.ts","./src/app/pages/bankaccount/view-bankaccount/view-bankaccount.component.ts","./src/app/pages/bankaccount/view-bankaccount/view-bankaccount.component.html","./src/app/pages/bankaccount/detailview-bankaccount/detailview-bankaccount.component.ts","./src/app/pages/bankaccount/detailview-bankaccount/detailview-bankaccount.component.html","./src/app/Model/BaseEntity.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEkC;;;AAEzF,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAC,EAAE;QACP,SAAS,EAAC,qGAAwB;KACnC;CAEF,CAAC;AAMK,MAAM,wBAAwB;;uGAAxB,wBAAwB;0KAAxB,wBAAwB,kBAH1B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,wBAAwB,uFAFzB,4DAAY;6FAEX,wBAAwB;cAJpC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEyB;AACiB;AACkB;AACrD;AACY;AACN;;AAarD,MAAM,iBAAiB;;gGAAjB,iBAAiB;4JAAjB,iBAAiB,kBARnB;YACP,4DAAY;YACZ,oFAAwB;YACxB,mEAAU;YACV,yEAAY;YACZ,kEAAmB;SACpB;mIAEU,iBAAiB,mBATb,qGAAwB,EAAE,uHAA8B,aAErE,4DAAY;QACZ,oFAAwB;QACxB,mEAAU;QACV,yEAAY;QACZ,kEAAmB;6FAGV,iBAAiB;cAV7B,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,qGAAwB,EAAE,uHAA8B,CAAC;gBACxE,OAAO,EAAE;oBACP,4DAAY;oBACZ,oFAAwB;oBACxB,mEAAU;oBACV,yEAAY;oBACZ,kEAAmB;iBACpB;aACF;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACP;AACQ;AAGW;AACM;;;AAK7D,MAAM,mBAAoB,SAAQ,+EAAqB;IAM5D,YAAoB,UAAsB;QACxC,KAAK,CAAC,UAAU,CAAC,CAAC;QADA,eAAU,GAAV,UAAU,CAAY;QAHlC,yBAAoB,GAAmC,IAAI,oDAAe,CAAgB,SAAS,CAAC,CAAC;QAK3G,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE;IACvE,CAAC;IAJD,IAAW,YAAY,KAAK,OAAO,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC;IAOrE,eAAe,CAAC,IAAI;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,4DAAO,GAAG,kEAAa,CAAC,WAAW,CAAE,CAAC;IAC/D,CAAC;IAED,iBAAiB,CAAC,IAAiB;QACjC,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,4DAAO,GAAG,kEAAa,CAAC,WAAW,CAAC,CAAC;IACzE,CAAC;IAED,eAAe;QACb,IAAI,CAAC,MAAM,CAAC,4DAAO,GAAG,kEAAa,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC/D,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB,CAAC,EAAE;QAClB,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,4DAAO,GAAG,kEAAa,CAAC,WAAW,CAAC,CAAC;IAC9D,CAAC;;sFA5BU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAA0C;AAGnC,MAAM,WAAY,SAAQ,sDAAkB;CAclD;AACD,IAAY,WAGX;AAHD,WAAY,WAAW;IACnB,mDAAS;IACT,mDAAO;AACX,CAAC,EAHW,WAAW,KAAX,WAAW,QAGtB;;;;;;;;;;;;;ACrBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACL;AACW;AACM;AAC2B;;;;;;;;;;;;;;;;;ICwCjE,yEAEI;IAF8C,0WAAqC;IAEnF,gEAAK;IAAA,qEAAI;IAAA,uDAAW;IAAA,4DAAK;IACzB,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC5B,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAChC,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IACjC,sEAAI;IAAA,wDAAqB;IAAA,4DAAK;IAC9B,sEAAK;IAAA,wDAAqB;IAAA,4DAAK;IAC/B,sEAAM;IAAA,wDAAoB;IAAA,4DAAK;IAC/B,sEAAM;IAAA,wDAA+C;IAAA,4DAAK;IAC1D,sEAAK;IAAA,wDAAsC;;IAAA,4DAAK;IAChD,sEACI;IAAA,yEAE0B;IADtB,wUAAS,mDAAwC,IAAC;IAC5B,4DAAI;IAC9B,6EAA2C;IAC3C,yEACkF;IAA9E,wUAAS,0DAA+C,IAAC;IAAqB,4DAAI;IAC1F,4DAAK;IACT,4DAAK;;;;IAjBQ,0DAAW;IAAX,yEAAW;IAChB,0DAAmB;IAAnB,iFAAmB;IACnB,0DAAuB;IAAvB,sFAAuB;IACvB,0DAAwB;IAAxB,sFAAwB;IACxB,0DAAqB;IAArB,mFAAqB;IACpB,0DAAqB;IAArB,6FAAqB;IACpB,0DAAoB;IAApB,4FAAoB;IACpB,0DAA+C;IAA/C,0HAA+C;IAChD,0DAAsC;IAAtC,wKAAsC;;;IAkBnE,0EAEW;;;;IAFW,wHAA+D;;;;IAMrF,0EACI;IAAA,+EACA;IAAA,wEACI;IADD,mUAAqB;IACpB,oFACJ;IAAA,4DAAI;IACR,4DAAM;;ADxEH,MAAM,wBAAwB;IAYnC,YACU,kBAAsC,EACtC,KAAmB;QADnB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,UAAK,GAAL,KAAK,CAAc;QAZ7B,+BAA0B,GAAyB,IAAI,4CAAO,EAAE,CAAC;QAIjE,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAY,KAAK,CAAC;QAC3B,eAAU,GAAW,kBAAkB,CAAC;QACxC,oBAAe,GAAY,KAAK,CAAC;QACjC,aAAQ,GAAkB,EAAE,CAAC;QAC7B,gBAAW,GAAG,IAAI,qEAAW,EAAE,CAAC;IAI5B,CAAC;IAEL,QAAQ;QAEN,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC5D,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;aACrB;YACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC;IAE5C,CAAC;IACD,kBAAkB;IAClB,uCAAuC;IACvC,IAAI;IAEJ,SAAS;QACP,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,kBAAkB,CAAC;QACrC,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IAC/B,CAAC;IACD,YAAY;QACV,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IAC/B,CAAC;IACD,UAAU,CAAC,IAAiB;QAC1B,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC;QACtC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAE7B,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7C,CAAC;IACD,qBAAqB,CAAC,IAAiB;QACrC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAC9B,CAAC;IACD,iBAAiB,CAAC,IAAiB;QAEjC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAChC,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;oBACjE,IAAI,GAAG,CAAC,aAAa,EAAE;wBACrB,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC;wBAC1C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,kCAAkC,CAAC;qBACvD;;wBAEC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,kCAAkC,CAAC;gBACxD,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,OAAM;aACP;QACH,CAAC,CAAC;QACF,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IAC/B,CAAC;;gGAtEU,wBAAwB;wGAAxB,wBAAwB;QCXrC,yEACI;QAAA,yEAAQ;QAAA,wEAAa;QAAA,4DAAS;QAClC,4DAAM;QACN,sEACI;QAAA,yEACI;QAAA,yEACI;QAAA,oEAOM;QACV,4DAAM;QAGN,yEACI;QAAA,uEAAwE;QAAtB,2IAAS,eAAW,IAAC;QAAC,2EAAgB;QAAA,4DAAI;QAChG,4DAAM;QAGF,0EACM;QAAA,kFACE;QAAA,yEACA;QAAA,sEACI;QAAA,iEACK;QACL,sEAAK;QAAA,6DAAC;QAAA,4DAAK;QACX,sEAAK;QAAA,qEAAS;QAAA,4DAAK;QACnB,sEAAK;QAAA,2EAAe;QAAA,4DAAK;QACzB,sEAAK;QAAA,qEAAS;QAAA,4DAAK;QACnB,sEAAK;QAAA,kEAAM;QAAA,4DAAK;QAChB,sEAAK;QAAA,uEAAW;QAAA,4DAAK;QACrB,sEAAK;QAAA,sEAAU;QAAA,4DAAK;QACpB,sEAAK;QAAA,wEAAY;QAAA,4DAAK;QACtB,sEAAK;QAAA,mEAAO;QAAA,4DAAK;QAEjB,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACnB,4DAAK;QACL,4DAAQ;QAER,yEAEI;QAAA,sHAmBK;QACT,4DAAQ;QACV,4DAAW;QACjB,4DAAM;QAElB,4DAAM;QAGN,mNAIc;QAEd,mNAOc;QAId,uEACI;QAAA,gFAEI;QAFoC,uMAAyB,qGAC/C,kBAAc,IADiC;QAE7D,6FAA4G;QAEhH,4DAAW;QACf,4DAAM;QAKN,uEACI;QAAA,gFAGE;QAHsC,6MAA+B,2HACrC,KAAK,IADgC;QAGrE,uEACI;QAAA,2EACE;QAAA,2EACE;QAAA,yEACqG;QAAnG,kJAAS,uBAAuB,+BAAuB,CAAC,IAAC;QAA0C,4DAAI;QAEzG,yEACsG;QAApG,kJAAS,uBAAuB,sCAA8B,CAAC,IAAC;QAAoC,4DAAI;QAC5G,4DAAM;QAGF,2EACI;QAAA,2EACE;QAAA,2EACE;QAAA,2EACE;QAAA,2EAA8B;QAAA,qEAAS;QAAA,4DAAM;QAC5C,uEAAK;QAAA,wDAAwB;QAAA,4DAAM;QACtC,4DAAM;QAEN,2EACE;QAAA,2EAA8B;QAAA,2EAAe;QAAA,4DAAM;QACnD,uEAAK;QAAA,wDAA6B;QAAA,4DAAM;QAC1C,4DAAM;QAEN,2EACE;QAAA,2EAA8B;QAAA,0EAAc;QAAA,4DAAM;QACvD,uEAAK;QAAA,wDAA6B;QAAA,4DAAM;QACrC,4DAAM;QAEN,2EACE;QAAA,2EAA8B;QAAA,kEAAM;QAAA,4DAAM;QAC1C,uEAAK;QAAA,wDAA0B;QAAA,4DAAM;QACvC,4DAAM;QAEN,2EACE;QAAA,2EAA+B;QAAA,yEAAY;QAAA,4DAAM;QACjD,uEAAK;QAAA,wDAA0B;QAAA,4DAAM;QACvC,4DAAM;QAEN,2EACE;QAAA,2EAA8B;QAAA,sEAAU;QAAA,4DAAM;QAC9C,uEAAK;QAAA,wDAA0B;QAAA,4DAAM;QACvC,4DAAM;QAEN,2EACE;QAAA,2EAA8B;QAAA,mEAAO;QAAA,4DAAM;QAC3C,uEAAK;QAAA,wDAA6C;;QAAA,4DAAM;QAC1D,4DAAM;QAEN,2EACE;QAAA,2EAA8B;QAAA,wEAAY;QAAA,4DAAM;QAChD,uEAAK;QAAA,wDAAmD;QAAA,4DAAM;QAChE,4DAAM;QAER,4DAAM;QACR,4DAAM;QACR,4DAAM;QACd,4DAAM;QACR,4DAAM;QACV,4DAAW;QACb,4DAAM;QAhKR,4DACI;;;QAkBoB,2DAAa;QAAb,sEAAa;QAC6B,0DAAmB;QAAnB,gFAAmB;QAqBxC,2DAAa;QAAb,iFAAa;QA6Cd,0DAAyB;QAAzB,oFAAyB;QAEjC,0DAAiD;QAAjD,8GAAiD;QASzC,0DAA+B;QAA/B,0FAA+B;QAmB3C,2DAAwB;QAAxB,yFAAwB;QAKzB,0DAA6B;QAA7B,8FAA6B;QAKlC,0DAA6B;QAA7B,8FAA6B;QAKxB,0DAA0B;QAA1B,2FAA0B;QAK1B,0DAA0B;QAA1B,2FAA0B;QAK1B,0DAA0B;QAA1B,0FAA0B;QAK1B,0DAA6C;QAA7C,gLAA6C;QAK7C,0DAAmD;QAAnD,wHAAmD;;6FD/IrE,wBAAwB;cALpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAC+B;AACzD;AAE+B;AAC2B;;;;;;;;;;;;;;;ICCzE,4EACI;IAAA,kFACJ;IAAA,4DAAY;;;IAKZ,4EACI;IAAA,wFACJ;IAAA,4DAAY;;;IAKZ,4EACI;IAAA,uFACJ;IAAA,4DAAY;;;IAKZ,4EACI;IAAA,+EACJ;IAAA,4DAAY;;;IAKZ,4EACI;IAAA,oFACJ;IAAA,4DAAY;;;IAMZ,4EACI;IAAA,mFACJ;IAAA,4DAAY;;;IAMZ,4EACI;IAAA,+EACJ;IAAA,4DAAY;;;IASZ,4EACI;IAAA,qFACJ;IAAA,4DAAY;;ADnDrB,MAAM,8BAA8B;IAOzC,YAEU,EAAe,EACf,aAA2B,EAC3B,mBAAwC;QAFxC,OAAE,GAAF,EAAE,CAAa;QACf,kBAAa,GAAb,aAAa,CAAc;QAC3B,wBAAmB,GAAnB,mBAAmB,CAAqB;QANlD,eAAU,GAAY,KAAK,CAAC;QAC5B,YAAO,GAAY,KAAK,CAAC;QAQvB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC;YACnB,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACvC,aAAa,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC5C,aAAa,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1C,UAAU,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,UAAU,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,SAAS,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrC,WAAW,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACzC,CAAC,CAAC;IACJ,CAAC;IACD,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAC,CAAC;IACtC,QAAQ;QAEN,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtC,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBAC1B,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,EAAE,CAAC;gBAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aACxB;iBAEI;gBACH,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;gBAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QAEV,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE7B,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAG;YACtB,OAAM;SACP;QACD,IAAI,CAAC,OAAO,GAAG,IAAI;QACnB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAoB,CAAC;QAC1C,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC;YAC7B,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC/D,IAAI,CAAC,OAAO,GAAG,KAAK;gBACpB,IAAI,GAAG,CAAC,aAAa,EAAE;oBACrB,IAAI,CAAC,SAAS,EAAE,CAAC;oBACjB,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC;oBAC3C,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,oCAAoC,CAAC;iBACjE;qBACI;oBACH,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,oCAAoC,CAAC;iBAC/D;YACH,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,KAAK;YACpB,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC7D,IAAI,GAAG,CAAC,aAAa,EAAE;oBACrB,IAAI,CAAC,SAAS,EAAE,CAAC;oBACjB,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC;oBAC3C,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,kCAAkC,CAAC;iBAC/D;qBACI;oBACH,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,kCAAkC,CAAC;iBAC7D;YACH,CAAC,CAAC,CAAC;SACJ;IAEH,CAAC;IAED,SAAS;QAEP,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YACjB,QAAQ,EAAC,IAAI;YACb,aAAa,EAAC,IAAI;YAClB,aAAa,EAAE,IAAI;YACnB,UAAU,EAAE,IAAI;YAChB,UAAU,EAAC,IAAI;YACf,SAAS,EAAC,IAAI;YACd,MAAM,EAAC,IAAI;YACX,WAAW,EAAC,IAAI;SACjB,CAAC,CAAC;IACL,CAAC;;4GA7FU,8BAA8B;8GAA9B,8BAA8B;QCZ3C,yEACI;QAAA,yEACI;QAAA,0EACI;QAAA,oFACI;QAAA,4EAAW;QAAA,oEAAS;QAAA,4DAAY;QAChC,sEACA;QAAA,sIAEY;QAChB,4DAAiB;QACjB,oFACI;QAAA,4EAAW;QAAA,2EAAe;QAAA,4DAAY;QACtC,uEACA;QAAA,wIAEY;QAChB,4DAAiB;QACjB,qFACI;QAAA,6EAAW;QAAA,0EAAc;QAAA,4DAAY;QACrC,uEACA;QAAA,wIAEY;QAChB,4DAAiB;QACjB,qFACI;QAAA,6EAAY;QAAA,mEAAM;QAAA,4DAAY;QAC9B,uEACA;QAAA,wIAEY;QAChB,4DAAiB;QACjB,qFACI;QAAA,6EAAY;QAAA,wEAAW;QAAA,4DAAY;QACnC,uEACA;QAAA,wIAEY;QAChB,4DAAiB;QAEjB,qFACI;QAAA,6EAAY;QAAA,wEAAW;QAAA,4DAAY;QACnC,wEACA;QAAA,wIAEY;QAChB,4DAAiB;QAEjB,qFACI;QAAA,6EAAY;QAAA,oEAAO;QAAA,4DAAY;QAC/B,wEACA;QAAA,wIAEY;QAChB,4DAAiB;QAEjB,qFACI;QAAA,6EAAY;QAAA,0EAAa;QAAA,4DAAY;QACrC,kFACA;QAAA,kFAAuB;QAAA,qEAAQ;QAAA,4DAAa;QAC5C,kFAAuB;QAAA,oEAAO;QAAA,4DAAa;QAC3C,4DAAa;QACb,wIAEY;QAChB,4DAAiB;QAEjB,2EACI;QAAA,8EACI;QADmE,uJAAS,kBAAc,IAAC;QAC3F,wDAA4D;QAAA,4DAAS;QAC7E,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;;QAvEU,0DAAa;QAAb,sEAAa;QACd,0DAAkB;QAAlB,+EAAkB;QAIL,0DAAqC;QAArC,qGAAqC;QAOrC,0DAA0C;QAA1C,0GAA0C;QAO1C,0DAA0C;QAA1C,0GAA0C;QAO1C,0DAAuC;QAAvC,uGAAuC;QAOvC,0DAAuC;QAAvC,uGAAuC;QAQvC,0DAAsC;QAAtC,sGAAsC;QAQtC,0DAAmC;QAAnC,mGAAmC;QAWnC,0DAAwC;QAAxC,wGAAwC;QAMH,0DAAqB;QAArB,kFAAqB;QAClE,0DAA4D;QAA5D,sIAA4D;;6FDxDnE,8BAA8B;cAL1C,uDAAS;eAAC;gBACT,QAAQ,EAAE,4BAA4B;gBACtC,WAAW,EAAE,yCAAyC;gBACtD,SAAS,EAAE,CAAC,wCAAwC,CAAC;aACtD;mTAEU,kBAAkB;kBAA1B,mDAAK;;;;;;;;;;;;;;AEbR;AAAA;AAAO,MAAM,UAAU;CAMtB","file":"src-app-pages-bankaccount-bankaccount-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DetailviewBankaccountComponent } from './detailview-bankaccount/detailview-bankaccount.component';\r\nimport { ViewBankaccountComponent } from './view-bankaccount/view-bankaccount.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component:ViewBankaccountComponent\r\n  },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BankaccountRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { BankaccountRoutingModule } from './bankaccount-routing.module';\r\nimport { ViewBankaccountComponent } from './view-bankaccount/view-bankaccount.component';\r\nimport { DetailviewBankaccountComponent } from './detailview-bankaccount/detailview-bankaccount.component';\r\nimport { AntdModule } from 'src/app/antd/antd.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ViewBankaccountComponent, DetailviewBankaccountComponent],\r\n  imports: [\r\n    CommonModule,\r\n    BankaccountRoutingModule,\r\n    AntdModule,\r\n    SharedModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class BankaccountModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { BankAccount } from 'src/app/Model/BankAccount';\r\nimport { BaseResponse } from 'src/app/Model/base-response';\r\nimport { API_ENDPOINTS, API_URL } from 'src/app/Model/Global';\r\nimport { BaseApiHandlerService } from '../base-api-handler.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BankAccountsService extends BaseApiHandlerService {\r\n\r\n  bankAccountsObserver$: Observable<BankAccount[]>;\r\n  private bankAccountsSubject$: BehaviorSubject<BankAccount[]> = new BehaviorSubject<BankAccount[]>(undefined);\r\n\r\n  public get bankAccounts() { return this.bankAccountsSubject$.value; }\r\n  constructor(private httpClient: HttpClient) {\r\n    super(httpClient);\r\n    this.bankAccountsObserver$ = this.bankAccountsSubject$.asObservable()\r\n  }\r\n  \r\n\r\n  SaveBankAccount(data) {\r\n    return this.Post(data, API_URL + API_ENDPOINTS.BankAccount );\r\n  }\r\n\r\n  UpdateBankAccount(data: BankAccount) {\r\n    return this.Update(data.id, data, API_URL + API_ENDPOINTS.BankAccount);\r\n  }\r\n\r\n  GetBankAccounts() {\r\n    this.GetAll(API_URL + API_ENDPOINTS.BankAccount).subscribe(res => {\r\n      this.bankAccountsSubject$.next(res.dynamicResult);\r\n    });\r\n  }\r\n\r\n  DeleteBankAccount(id): Observable<BaseResponse> {\r\n    return this.Delete(id, API_URL + API_ENDPOINTS.BankAccount);\r\n  }\r\n  \r\n}\r\n","import { BaseEntity } from \"./BaseEntity\";\r\nimport { Outstandings } from \"./Outstandings\";\r\n\r\nexport class BankAccount extends BaseEntity<number>{\r\n   \r\n  bankName: string;\r\n  bankShortName:string;\r\n  bankAccountNo :string;\r\n  bankIBANNo :string;\r\n  bankLogoURL :string;\r\n  branchName :string;\r\n  swiftCode :string;\r\n  amount :string;\r\n  accountType :AccountType;\r\n\r\n  \r\n\r\n}\r\nexport enum AccountType{\r\n    Current=1,\r\n    Savings\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { BankAccount } from 'src/app/Model/BankAccount';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\nimport { BankAccountsService } from 'src/app/services/BankAccounts/bankaccounts.service';\r\n\r\n@Component({\r\n  selector: 'app-view-bankaccount',\r\n  templateUrl: './view-bankaccount.component.html',\r\n  styleUrls: ['./view-bankaccount.component.css']\r\n})\r\nexport class ViewBankaccountComponent implements OnInit {\r\n\r\n  bankAccountObserverSubject: Subject<BankAccount> = new Subject();\r\n  contactSubject: Subscription;\r\n  search: string;\r\n  listOfSelection: any;\r\n  checked = false;\r\n  isVisible: boolean = false;\r\n  modalTitle: string = \"New Bank Account\";\r\n  showBankAccount: boolean = false;\r\n  listData: BankAccount[] = [];\r\n  bankAccount = new BankAccount();\r\n  constructor(\r\n    private bankAccountService:BankAccountsService,\r\n    private alert: AlertService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.bankAccountService.bankAccountsObserver$.subscribe(res => {\r\n      if (res) {\r\n        this.listData = res;\r\n      }\r\n      this.isVisible = false;\r\n    });\r\n    this.bankAccountService.GetBankAccounts();\r\n\r\n  }\r\n  // ngOnDestroy() {\r\n  //   this.contactSubject.unsubscribe();\r\n  // }\r\n\r\n  showModal(): void {\r\n    this.isVisible = true;\r\n    this.modalTitle = \"New Bank Account\";\r\n    this.bankAccountObserverSubject.next(null);\r\n    this.showBankAccount = false;\r\n  }\r\n  handleCancel() {\r\n    this.isVisible = false;\r\n    this.showBankAccount = false;\r\n  }\r\n  handleEdit(data: BankAccount) {\r\n    this.modalTitle = \"Edit Bank Account\";\r\n    this.isVisible = true;\r\n    this.showBankAccount = false;\r\n\r\n    this.bankAccountObserverSubject.next(data);\r\n  }\r\n  showSingleBankAccount(data: BankAccount) {\r\n    this.bankAccount = data;\r\n    this.showBankAccount = true;\r\n  }\r\n  DeleteBankAccount(data: BankAccount) {\r\n    \r\n    this.alert.delete().then(result => {\r\n      if (result.isConfirmed) {\r\n        this.bankAccountService.DeleteBankAccount(data.id).subscribe(res => {\r\n          if (res.isSuccessfull) {\r\n            this.bankAccountService.GetBankAccounts();\r\n            this.alert.success('Commission deleted Successfully!')\r\n          }\r\n          else\r\n            this.alert.error('Error while deleting Commission!')\r\n        });\r\n      } else {\r\n        return\r\n      }\r\n    })\r\n    this.showBankAccount = false;\r\n  }\r\n}\r\n","<div class=\"breadcrumbs mb-3\">\r\n    <strong>Bank Accounts</strong>\r\n</div>\r\n<div>\r\n    <div class=\"row mb-4\">\r\n        <div class=\"col-xl-10\">\r\n            <div class=\"w-25\">\r\n                <!-- <nz-input-group nzSize=\"large\" [nzPrefix]=\"suffixIconSearch \">\r\n                    <input type=\"text\" nz-input [(ngModel)]=\"search\" placeholder=\"Search for Bank Accounts\" />\r\n                </nz-input-group>\r\n                <ng-template #suffixIconSearch>\r\n                    <i nz-icon nzType=\"search\"></i>\r\n                </ng-template> -->\r\n            </div>\r\n        </div>\r\n    \r\n    \r\n        <div class=\"col-xl-2 \">\r\n            <a nz-button class=\"float-right\" nzType=\"primary\" (click)=\"showModal()\">Add Bank Account</a>\r\n        </div>\r\n\r\n       \r\n            <div nz-col [nzSpan]=\"24\">\r\n                  <nz-table   nzSize=\"middle\"  #rowSelectionTable [nzData]=\"listData\" [nzNoResult]=\"noData\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th >\r\n                        </th>\r\n                        <th >#</th>\r\n                        <th >Bank Name</th>\r\n                        <th >Bank Short Code</th>\r\n                        <th >Account #</th>\r\n                        <th >IBAN #</th>\r\n                        <th >Branch Name</th>\r\n                        <th >SWIFT Code</th>\r\n                        <th >Account Type</th>\r\n                        <th >Balance</th>\r\n\r\n                        <th>Action</th>\r\n                    </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n\r\n                        <tr *ngFor=\"let data of listData; let i = index;\" (click)=\"showSingleBankAccount(data)\"\r\n                        nzTooltipTitle=\"Click to View Bank Account\" style=\"cursor: pointer;\">\r\n                            <td> <td>{{ i + 1 }}</td>\r\n                            <td>{{ data.bankName }}</td>\r\n                            <td>{{ data.bankShortName}}</td>\r\n                            <td>{{ data.bankAccountNo }}</td>\r\n                            <td>{{ data.bankIBANNo }}</td>\r\n                            <td> {{ data.branchName }}</td> \r\n                            <td>  {{ data.swiftCode }}</td>\r\n                            <td>  {{ data.accountType == 1 ? 'Current':'Saving'}}</td>\r\n                            <td> {{ data.amount| number : '1.2-2'}} AED</td>\r\n                            <td>\r\n                                <i nz-icon nzType=\"edit\" nz-tooltip nzTooltipTitle=\"Edit Commission\" nzTheme=\"fill\"\r\n                                    (click)=\"$event.stopPropagation(handleEdit(data))\"\r\n                                     class=\"text-success\"></i>\r\n                                <nz-divider nzType=\"vertical\"></nz-divider>\r\n                                <i nz-icon nzType=\"delete\" nz-tooltip nzTooltipTitle=\"Delete Commission\" nzTheme=\"fill\"\r\n                                    (click)=\"$event.stopPropagation(DeleteBankAccount(data))\" class=\"text-danger\"></i>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                  </nz-table>  \r\n            </div>\r\n      \r\n</div>\r\n\r\n\r\n<ng-template #noData>\r\n    <nz-empty class=\"m-5\" [nzNotFoundImage]=\"'assets/images/no-data/no-bankaccounts.svg'\"\r\n        [nzNotFoundContent]=\"noDataDescrp\">\r\n    </nz-empty>\r\n</ng-template>\r\n\r\n<ng-template #noDataDescrp>\r\n    <div class=\"m-4\">\r\n        No Data Available.\r\n        <a (click)=\"showModal()\" class=\"kit__utils__link\">\r\n            Create New Bank Account\r\n        </a>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n\r\n<div>\r\n    <nz-modal nzFooter=\"null\" nzWidth=\"700\" [(nzVisible)]=\"isVisible\" [nzTitle]=\"modalTitle\"\r\n        (nzOnCancel)=\"handleCancel()\" nzMaskClosable=\"false\">\r\n        <app-detailview-bankaccount [bankAccountDataSub]=\"bankAccountObserverSubject\" ></app-detailview-bankaccount>\r\n        <!-- <app-add-commission [commissionDataSub]=\"commissionObserverSubject\"></app-add-commission> -->\r\n    </nz-modal>\r\n</div>\r\n\r\n\r\n\r\n<!-- View Modal -->\r\n<div>\r\n    <nz-modal nzFooter=\"null\" nzWidth=\"700\" [(nzVisible)]=\"showBankAccount\" [nzTitle]=\"'Bank Account Info'\" nzMaskClosable=\"false\"\r\n      (nzOnCancel)=\"showBankAccount = false\">\r\n  \r\n      <div>\r\n          <div class=\"row\">\r\n            <div class=\"popup-action-btns\">\r\n              <i nz-icon nzType=\"edit\" nz-tooltip nzTooltipTitle=\"Edit Bank Account\"\r\n                (click)=\"$event.stopPropagation(handleEdit(bankAccount))\" nzTheme=\"fill\" class=\"text-success mr-3\"></i>\r\n              \r\n              <i nz-icon nzType=\"delete\" nz-tooltip nzTooltipTitle=\"Delete Bank Account\"\r\n                (click)=\"$event.stopPropagation(DeleteBankAccount(bankAccount))\" nzTheme=\"fill\" class=\"text-danger\"></i>\r\n            </div>\r\n    \r\n  \r\n                <div class=\"col-xl-12 p-4\">\r\n                    <div class=\"card-body\">\r\n                      <div class=\"row mb-3\">\r\n                        <div class=\"col-xl-5 mb-4 offset-sm-1\">\r\n                          <div class=\"t-10 text-gray-5\">Bank Name</div>\r\n                           <div>{{bankAccount.bankName}}</div>\r\n                        </div>\r\n                  \r\n                        <div class=\"col-xl-5 mb-4 offset-sm-1\">\r\n                          <div class=\"t-10 text-gray-5\">Bank Short Code</div>\r\n                          <div>{{bankAccount.bankShortName}}</div>\r\n                        </div>\r\n                     \r\n                        <div class=\"col-xl-5 mb-4 offset-sm-1\">\r\n                          <div class=\"t-10 text-gray-5\">Bank Account #</div>\r\n                     <div>{{bankAccount.bankAccountNo}}</div>\r\n                        </div>\r\n                     \r\n                        <div class=\"col-xl-5 mb-4 offset-sm-1\">\r\n                          <div class=\"t-10 text-gray-5\">IBAN #</div>\r\n                          <div>{{bankAccount.bankIBANNo}}</div>\r\n                        </div>\r\n               \r\n                        <div class=\"col-xl-5 mb-4 offset-sm-1\">\r\n                          <div class=\"t-10 text-gray-5\"> Branch Name </div>\r\n                          <div>{{bankAccount.branchName}}</div>\r\n                        </div>\r\n                        \r\n                        <div class=\"col-xl-5 mb-4 offset-sm-1\">\r\n                          <div class=\"t-10 text-gray-5\">Swift Code</div>\r\n                          <div>{{bankAccount.swiftCode }}</div>\r\n                        </div>\r\n \r\n                        <div class=\"col-xl-5 mb-4 offset-sm-1\">\r\n                          <div class=\"t-10 text-gray-5\">Balance</div>\r\n                          <div>{{bankAccount.amount | number : '1.2-2'}} AED</div>\r\n                        </div>\r\n                       \r\n                        <div class=\"col-xl-5 mb-4 offset-sm-1\">\r\n                          <div class=\"t-10 text-gray-5\">Account Type</div>\r\n                          <div>{{bankAccount.accountType==1 ? 'Current':'Saving'}}</div>\r\n                        </div>\r\n           \r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n          </div>\r\n        </div>\r\n    </nz-modal>\r\n  </div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { BankAccount } from 'src/app/Model/BankAccount';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\nimport { BankAccountsService } from 'src/app/services/BankAccounts/bankaccounts.service';\r\n\r\n@Component({\r\n  selector: 'app-detailview-bankaccount',\r\n  templateUrl: './detailview-bankaccount.component.html',\r\n  styleUrls: ['./detailview-bankaccount.component.css']\r\n})\r\nexport class DetailviewBankaccountComponent implements OnInit {\r\n  @Input() bankAccountDataSub: Subject<BankAccount>;\r\n  form: FormGroup;\r\n  bankAccountId: number;\r\n  data: BankAccount;\r\n  isEditMode: boolean = false;\r\n  loading: boolean = false;\r\n  constructor(\r\n\r\n    private fb: FormBuilder,\r\n    private _notification: AlertService,\r\n    private _bankAccountService: BankAccountsService\r\n  ) {\r\n\r\n    this.form = fb.group({\r\n      bankName: [null, [Validators.required]],\r\n      bankShortName: [null, [Validators.required]],\r\n      bankAccountNo: [null, Validators.required],\r\n      bankIBANNo: [null, Validators.required],\r\n      branchName: [null, Validators.required],\r\n      swiftCode: [null, Validators.required],\r\n      amount: [null, [Validators.required]],\r\n      accountType: [null, Validators.required],\r\n    });\r\n   }\r\n   get f() { return this.form.controls }\r\n  ngOnInit(): void {\r\n   \r\n    this.bankAccountDataSub.subscribe(res => {\r\n      if (res) {\r\n        this.form.patchValue(res);\r\n        this.bankAccountId = res.id;\r\n        this.isEditMode = true;\r\n      }\r\n\r\n      else {\r\n        this.form.reset();\r\n        this.bankAccountId = null;\r\n        this.isEditMode = false;\r\n      }\r\n    });\r\n  }\r\n  \r\n  handleSubmit() {\r\n\r\n    console.log(this.form.value);\r\n  \r\n    if (this.form.invalid ) {\r\n      return\r\n    }\r\n    this.loading = true\r\n    let data = this.form.value as BankAccount;\r\n    if (this.isEditMode) {\r\n      data.id = this.bankAccountId;\r\n      this._bankAccountService.UpdateBankAccount(data).subscribe(res => {\r\n        this.loading = false\r\n        if (res.isSuccessfull) {\r\n          this.resetForm();\r\n          this._bankAccountService.GetBankAccounts();\r\n          this._notification.success('Bank Account Updated Successfully!')\r\n        }\r\n        else {\r\n          this._notification.error('Error while updating Bank Account!')\r\n        }\r\n      });\r\n    } else {\r\n      this.loading = false\r\n      this._bankAccountService.SaveBankAccount(data).subscribe(res => {\r\n        if (res.isSuccessfull) {\r\n          this.resetForm();\r\n          this._bankAccountService.GetBankAccounts();\r\n          this._notification.success('Bank Account Saved Successfully!')\r\n        }\r\n        else {\r\n          this._notification.error('Error while saving Bank Account!')\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  resetForm()\r\n  {\r\n    this.form.setValue({\r\n      bankName:null,\r\n      bankShortName:null,\r\n      bankAccountNo :null,\r\n      bankIBANNo :null,\r\n      branchName:null,\r\n      swiftCode:null,\r\n      amount:null,\r\n      accountType:null,\r\n    });\r\n  }\r\n\r\n}\r\n","<div nz-row>\r\n    <div nz-col [nzSpan]=\"24\">\r\n        <form  [formGroup]=\"form\" >\r\n            <mat-form-field class=\"col-xl-6 mb-2\">\r\n                <mat-label>Bank Name</mat-label>\r\n                <input matInput formControlName=\"bankName\">\r\n                <mat-error *ngIf=\"f.bankName.hasError('required')\">\r\n                    Bank Name is required\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"col-xl-6 mb-2\">\r\n                <mat-label>Bank Short Code</mat-label>\r\n                <input matInput formControlName=\"bankShortName\">\r\n                <mat-error *ngIf=\"f.bankShortName.hasError('required')\">\r\n                    Bank Short Code is required\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"col-xl-6 mb-2\">\r\n                <mat-label>Bank Account #</mat-label>\r\n                <input matInput formControlName=\"bankAccountNo\">\r\n                <mat-error *ngIf=\"f.bankAccountNo.hasError('required')\">\r\n                    Bank Account # is required\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"col-xl-6 mb-2\">\r\n                <mat-label> IBAN #</mat-label>\r\n                <input matInput formControlName=\"bankIBANNo\">\r\n                <mat-error *ngIf=\"f.bankIBANNo.hasError('required')\">\r\n                    IBAN #  is required\r\n                </mat-error>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"col-xl-6 mb-2\">\r\n                <mat-label> Branch Name</mat-label>\r\n                <input matInput formControlName=\"branchName\">\r\n                <mat-error *ngIf=\"f.branchName.hasError('required')\">\r\n                    Branch Name  is required\r\n                </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-xl-6 mb-2\">\r\n                <mat-label> Swift Code </mat-label>\r\n                <input matInput formControlName=\"swiftCode\">\r\n                <mat-error *ngIf=\"f.swiftCode.hasError('required')\">\r\n                    Swift Code  is required\r\n                </mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"col-xl-6 mb-2\">\r\n                <mat-label> Amount </mat-label>\r\n                <input type=\"number\" matInput formControlName=\"amount\">\r\n                <mat-error *ngIf=\"f.amount.hasError('required')\">\r\n                    Amount is required\r\n                </mat-error>\r\n            </mat-form-field>\r\n            \r\n            <mat-form-field class=\"col-xl-6 mb-2\">\r\n                <mat-label> Account Type </mat-label>\r\n                <mat-select formControlName=\"accountType\">\r\n                <mat-option value=\"1\"> Current </mat-option>\r\n                <mat-option value=\"2\"> Saving </mat-option>    \r\n                </mat-select>\r\n                <mat-error *ngIf=\"f.accountType.hasError('required')\">\r\n                    Account Type is required\r\n                </mat-error>\r\n            </mat-form-field>\r\n\r\n            <div class=\"form-group text-center mt-4\">\r\n                <button type=\"submit\" nz-button nzType=\"primary\" [nzLoading]=\"loading\" (click)=\"handleSubmit()\">\r\n                    {{ isEditMode ? 'Update Bank Account' : 'Add Bank Account'}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","export class BaseEntity<TKey>{\r\n    id:TKey;\r\n    createUserId?:string;\r\n    createTime?:Date;\r\n    editUserId?:string;\r\n    editTime?:string;\r\n}"],"sourceRoot":"webpack:///"}